{"url": "https://es.wikipedia.org/wiki/Python", "title": "Python", "summary": "\n\n[\n]\nPython es un lenguaje de alto nivel de programaci\u00f3n interpretado cuya filosof\u00eda hace hincapi\u00e9 en la legibilidad de su c\u00f3digo. Se trata de un lenguaje de programaci\u00f3n multiparadigma, ya que soporta parcialmente la orientaci\u00f3n a objetos, programaci\u00f3n imperativa y, en menor medida, programaci\u00f3n funcional. Es un lenguaje interpretado, din\u00e1mico y multiplataforma.\n\nAdministrado por Python Software Foundation, posee una licencia de c\u00f3digo abierto, denominada Python Software Foundation License.[3]\u200b Python se clasifica constantemente como uno de los lenguajes de programaci\u00f3n m\u00e1s populares.[4]\u200b\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Caracter\u00edsticas y paradigmas", "text": "", "subsections": []}, {"name": "Filosof\u00eda", "text": "", "subsections": []}, {"name": "Modo interactivo", "text": "", "subsections": []}, {"name": "Elementos del lenguaje y sintaxis", "text": "", "subsections": []}, {"name": "Sistema de objetos", "text": "", "subsections": []}, {"name": "Biblioteca est\u00e1ndar", "text": "", "subsections": []}, {"name": "Implementaciones", "text": "", "subsections": []}, {"name": "Incidencias", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/ABC_(lenguaje_de_programaci%C3%B3n)", "title": "ABC (lenguaje de programaci\u00f3n)", "summary": "ABC es un lenguaje de programaci\u00f3n imperativo de prop\u00f3sito general y entorno de programaci\u00f3n desarrollado en el Centrum Wiskunde & Informatica de Pa\u00edses Bajos por Leo Geurts, Lambert Meertens y Steven Pemberton. Es interactivo, estructurado, de alto nivel y est\u00e1 pensado para ser utilizado en lugar de BASIC, Pascal o AWK. No pretende ser un lenguaje de programaci\u00f3n de sistemas, sino que est\u00e1 destinado a la ense\u00f1anza o la creaci\u00f3n de prototipos.\n\nEl lenguaje tuvo una gran influencia en el dise\u00f1o del lenguaje de programaci\u00f3n Python; Guido van Rossum, quien desarroll\u00f3 Python, trabaj\u00f3 anteriormente durante varios a\u00f1os en el sistema ABC a mediados de los a\u00f1os ochenta.[1]\u200b[2]\u200b\n\n", "sections": [{"name": "Caracter\u00edsticas", "text": "", "subsections": []}, {"name": "Ejemplo", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Amoeba_(Inform%C3%A1tica)", "title": "Amoeba (sistema operativo)", "summary": "Amoeba es un sistema operativo distribuido de investigaci\u00f3n, basado en una arquitectura de micron\u00facleo. Fue desarrollado por Andrew S. Tanenbaum y otros en la Universidad Libre de \u00c1msterdam. El objetivo del proyecto Amoeba era construir un sistema de tiempo compartido que hiciera que una red entera de computadores pareciera a los ojos de un usuario como una m\u00e1quina \u00fanica.\n\nLos servicios suministrados por el n\u00facleo incluyen threads, segmentos de memoria, mecanismos de IPC (RPCs y mensajes) y E/S [160]. \n\nEl desarrollo parece detenido, dado que la fecha de la \u00faltima modificaci\u00f3n en el c\u00f3digo data de febrero de 2001.\n\nExisten versiones para varias plataformas, incluyendo i386, Sun-3 y SPARC.\n\nEl lenguaje de programaci\u00f3n Python fue originalmente desarrollado para esta plataforma.\n\n", "sections": [{"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Apache_Software_Foundation", "title": "Apache Software Foundation", "summary": "\n\u00a0\nApache Software Foundation (ASF) es una organizaci\u00f3n sin fines de lucro (una fundaci\u00f3n) creada para dar soporte a los proyectos de software bajo la denominaci\u00f3n Apache, incluyendo el popular servidor HTTP Apache. La ASF se form\u00f3 a partir del llamado Grupo Apache y fue registrada en Delaware (Estados Unidos), en marzo de 1996.[1]\u200b\n\nApache Software Foundation es una comunidad descentralizada de desarrolladores que trabajan cada uno en sus propios proyectos de c\u00f3digo abierto. Los proyectos Apache se caracterizan por un modelo de desarrollo basado en el consenso y la colaboraci\u00f3n y en una licencia de software abierta y pragm\u00e1tica. Cada proyecto es gestionado por un grupo autoseleccionado de expertos t\u00e9cnicos que son participantes activos en dicho proyecto. La ASF es una meritocracia, de lo que se deriva que la pertenencia a la fundaci\u00f3n se permite solo a voluntarios que hayan contribuido significativamente a proyectos Apache.\n\nEntre los objetivos de la ASF se encuentran el de proporcionar protecci\u00f3n legal a los voluntarios que trabajan en proyectos Apache, y al propio nombre Apache de ser empleado por otras organizaciones. El proyecto Apache es el origen de la Licencia Apache y de todas las licencias que siguen un esquema similar (llamadas licencias \"estilo Apache\").\n\n", "sections": [{"name": "Financiaci\u00f3n", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Aprendizaje_autom%C3%A1tico", "title": "Aprendizaje autom\u00e1tico", "summary": "El aprendizaje autom\u00e1tico (AA); tambi\u00e9n llamado automatizado, computacional o de m\u00e1quinas (del ingl\u00e9s machine learning, ML), es el subcampo de las ciencias de la computaci\u00f3n y una rama de  la inteligencia artificial, cuyo objetivo es desarrollar t\u00e9cnicas que permitan que las computadoras aprendan. Se dice que un agente aprende cuando su desempe\u00f1o mejora con la experiencia y mediante el uso de datos; es decir, cuando la habilidad no estaba presente en su genotipo o rasgos de nacimiento.[1]\u200b \"En el aprendizaje de m\u00e1quinas un computador observa datos, construye un modelo basado en esos datos y utiliza ese modelo a la vez como una hip\u00f3tesis acerca del mundo y una pieza de software que puede resolver problemas\".[2]\u200b\n\nEn muchas ocasiones el campo de actuaci\u00f3n del aprendizaje autom\u00e1tico se solapa con el de la estad\u00edstica inferencial, ya que las dos disciplinas se basan en el an\u00e1lisis de datos. Sin embargo, el aprendizaje autom\u00e1tico incorpora las preocupaciones de la complejidad computacional de los problemas. Muchos problemas son de clase NP-hard, por lo que gran parte de la investigaci\u00f3n realizada en aprendizaje autom\u00e1tico est\u00e1 enfocada al dise\u00f1o de soluciones factibles a esos problemas. El aprendizaje autom\u00e1tico tambi\u00e9n est\u00e1 estrechamente relacionado con el reconocimiento de patrones. El aprendizaje autom\u00e1tico puede ser visto como un intento de automatizar algunas partes del m\u00e9todo cient\u00edfico mediante m\u00e9todos matem\u00e1ticos. Por lo tanto es un proceso de inducci\u00f3n del conocimiento.\n\nEl aprendizaje autom\u00e1tico tiene una amplia gama de aplicaciones, incluyendo motores de b\u00fasqueda, diagn\u00f3sticos m\u00e9dicos, detecci\u00f3n de fraude en el uso de tarjetas de cr\u00e9dito, an\u00e1lisis de mercado para los diferentes sectores de actividad, clasificaci\u00f3n de secuencias de ADN, reconocimiento del habla y del lenguaje escrito, juegos y rob\u00f3tica.\n\n", "sections": [{"name": "Resumen", "text": "", "subsections": []}, {"name": "Tipos de algoritmos", "text": "", "subsections": []}, {"name": "T\u00e9cnicas de clasificaci\u00f3n", "text": "", "subsections": []}, {"name": "Conocimiento", "text": "", "subsections": []}, {"name": "Distinci\u00f3n entre aprendizaje supervisado y no supervisado", "text": "", "subsections": []}, {"name": "Aplicaciones", "text": "", "subsections": []}, {"name": "Temas del aprendizaje autom\u00e1tico", "text": "", "subsections": []}, {"name": "Historia y relaci\u00f3n con otros temas", "text": "", "subsections": []}, {"name": "Software", "text": "", "subsections": []}, {"name": "Sesgos", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Asincron%C3%ADa", "title": "Asincron\u00eda", "summary": "\n\nBusca fuentes: \u00abAsincron\u00eda\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nEl t\u00e9rmino \"Asincron\u00eda\" hace referencia al suceso que no tiene lugar en total correspondencia temporal con otro suceso.\n\nPor ejemplo, podemos hablar de motor as\u00edncrono a aquel cuya velocidad de rotaci\u00f3n no corresponde con la frecuencia de corriente alterna que lo hace funcionar.\n\nDos se\u00f1ales son as\u00edncronas o no est\u00e1n sincronizadas, cuando sus correspondientes instantes significativos no coinciden. \nDe esta manera, podremos saber una asincronidad bas\u00e1ndonos en la ley de ohm.\n\nModo de transmisi\u00f3n de datos en el que el instante de emisi\u00f3n de cada car\u00e1cter o bloque de caracteres se fija arbitrariamente, sincronizando con Start-Stop.\n\nEn educaci\u00f3n a distancia (EaD), la asincron\u00eda se refiere a actividades que no requieren la conexi\u00f3n simult\u00e1nea del facilitador y los participantes, sino que cada quien participa en su propio tiempo. \n\nUn ejemplo son los foros as\u00edncronos, en los cuales todos participan en la conversaci\u00f3n, pero en diferentes momentos.\n\nEl bloger\n", "sections": []}
{"url": "https://es.wikipedia.org/wiki/Base_de_datos", "title": "Base de datos", "summary": "\n\nBusca fuentes: \u00abBase de datos\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nUna base de datos (del ingl\u00e9s: database) se encarga no solo de almacenar datos, sino tambi\u00e9n de conectarlos entre s\u00ed en una unidad l\u00f3gica. En t\u00e9rminos generales, una base de datos es un conjunto de datos estructurados que pertenecen a un mismo contexto y, en cuanto a su funci\u00f3n, se utiliza para administrar de forma electr\u00f3nica grandes cantidades de informaci\u00f3n.[1]\u200b En este sentido; una biblioteca puede considerarse una base de datos compuesta en su mayor\u00eda por documentos y textos impresos en papel e indexados para su consulta. Actualmente, y debido al desarrollo tecnol\u00f3gico de campos como la inform\u00e1tica y la electr\u00f3nica, la mayor\u00eda de las bases de datos est\u00e1n en formato digital, siendo este un componente electr\u00f3nico; por tanto, se ha desarrollado y se ofrece un amplio rango de soluciones al problema del almacenamiento de datos.\n\nEn las bases de datos, los datos deben estar estructurados e interrelacionados seg\u00fan un modelo que refleje el m\u00e1ximo contenido sem\u00e1ntico. Esto significa que los datos se integran, estructuran, relacionan y comparten, y las interrelaciones deben almacenarse junto con los datos, lo que es una diferencia esencial en comparaci\u00f3n con los archivos donde las interrelaciones no se almacenan. La redundancia de datos debe controlarse para evitar duplicidades perjudiciales, aunque se admite la redundancia f\u00edsica por motivos de eficiencia. En resumen, no debe existir redundancia l\u00f3gica en las bases de datos.\n\nHay programas denominados sistemas gestores de bases de datos, abreviado SGBD (del ingl\u00e9s Database Management System o DBMS), que permiten almacenar y posteriormente acceder a los datos de forma r\u00e1pida y estructurada. Las propiedades de estos DBMS, as\u00ed como su utilizaci\u00f3n y administraci\u00f3n, se estudian dentro del \u00e1mbito de la inform\u00e1tica.\n\nLas aplicaciones m\u00e1s usuales son para la gesti\u00f3n de empresas e instituciones p\u00fablicas. Tambi\u00e9n son ampliamente utilizadas en entornos cient\u00edficos con el objeto de almacenar la informaci\u00f3n experimental.\n\nAunque las bases de datos pueden contener muchos tipos de datos, algunos de ellos se encuentran mutuamente protegidos por las leyes de varios pa\u00edses. Por ejemplo en Espa\u00f1a, los datos personales se encuentran protegidos por la Ley Org\u00e1nica de Protecci\u00f3n de Datos de Car\u00e1cter Personal (LOPD), en M\u00e9xico por la Ley Federal de Transparencia y Acceso a la Informaci\u00f3n P\u00fablica Gubernamental y en Argentina por la Ley de Protecci\u00f3n de Datos Personales.[2]\u200b\n\nEn Argentina, el C\u00f3digo Penal sanciona ciertas conductas relacionadas con una base de datos: acceder ileg\u00edtimamente a un banco de datos personales, proporcionar o revelar informaci\u00f3n registrada en un archivo o en un banco de datos personales cuyo secreto estuviere obligado a guardar por ley o insertar o hacer insertar datos en un archivo de datos personales. Si el autor es funcionario p\u00fablico, sufre adem\u00e1s pena de inhabilitaci\u00f3n especial.\n\n", "sections": [{"name": "Clasificaci\u00f3n de bases de datos", "text": "", "subsections": []}, {"name": "Sistema de Administraci\u00f3n de Bases de Datos (DBMS)", "text": "", "subsections": []}, {"name": "Diferencias entre bases de datos y hojas de c\u00e1lculo", "text": "", "subsections": []}, {"name": "Modelos de bases de datos", "text": "", "subsections": []}, {"name": "Otros tipos de base de datos", "text": "", "subsections": []}, {"name": "Consulta a base de datos", "text": "", "subsections": []}, {"name": "Investigaci\u00f3n", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Benevolent_Dictator_for_Life", "title": "Benevolent Dictator for Life", "summary": "Benevolent Dictator for Life (BDFL) es un t\u00edtulo informal que se otorga a ciertos individuos de la comunidad de desarrolladores de software de c\u00f3digo abierto que tienen la tarea de asignar las directrices generales y, en ciertas situaciones, las decisiones finales dentro del \u00e1mbito de un proyecto. La traducci\u00f3n de Benevolent Dictator for Life es Dictador Benevolente De por vida, lo que conlleva un tanto de informalidad y humor.\n\nEn 1995 Guido van Rossum, creador de Python, fue la primera persona sobre la que recay\u00f3 dicha distinci\u00f3n.[1]\u200b[2]\u200b\n\nEl t\u00e9rmino \"Benevolent Dictator for Life\" fue acu\u00f1ado por el programador de Python, Guido van Rossum, quien se autodesign\u00f3 como \"BDFL\" para el desarrollo de Python. En la comunidad del software libre, el papel del BDFL es visto como una forma efectiva de tomar decisiones r\u00e1pidas y unificadas, lo que permite que un proyecto crezca y evolucione de manera m\u00e1s eficiente.\n\nSin embargo, tambi\u00e9n hay cr\u00edticas al concepto de BDFL, ya que algunas personas argumentan que el control absoluto de una sola persona puede limitar la creatividad y la innovaci\u00f3n del proyecto. Adem\u00e1s, la naturaleza del BDFL puede crear una dependencia insalubre en una sola persona, lo que puede ser perjudicial para el proyecto a largo plazo.\n\nN\u00f3tese la diferencia con su significado hist\u00f3rico usado en un contexto pol\u00edtico.[cita\u00a0requerida]\n\n", "sections": [{"name": "Lista de algunos BDFLs", "text": "", "subsections": []}, {"name": "Dictador Benevolente", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Biblioteca_(inform%C3%A1tica)", "title": "Biblioteca (inform\u00e1tica)", "summary": "En inform\u00e1tica, una biblioteca o, llamada por vicio del lenguaje, librer\u00eda (del ingl\u00e9s library) es un conjunto de implementaciones funcionales, codificadas en un lenguaje de programaci\u00f3n, que ofrece una interfaz bien definida para la funcionalidad que se invoca. \n\nA diferencia de un programa ejecutable, el comportamiento que implementa una biblioteca no espera ser utilizada de forma aut\u00f3noma (un programa s\u00ed: tiene un punto de entrada principal), sino que su fin es ser utilizada por otros programas, independientes y de forma simult\u00e1nea. Por otra parte, el comportamiento de una biblioteca no tiene por qu\u00e9 diferenciarse demasiado del que pudiera especificarse en un programa. Es m\u00e1s, unas bibliotecas pueden requerir de otras para funcionar, pues el comportamiento que definen refina, o altera, el comportamiento de la biblioteca original; o bien la hace disponible para otra tecnolog\u00eda o lenguaje de programaci\u00f3n.\n\nLas bibliotecas pueden vincularse a un programa (o a otra biblioteca) en distintos puntos del desarrollo o la ejecuci\u00f3n, seg\u00fan el tipo de v\u00ednculo que se quiera establecer, tal y como se detalla en el apartado de \"Tipos\".\n\nLa mayor\u00eda de los sistemas operativos modernos proporcionan bibliotecas que implementan los servicios del sistema. De esta manera, estos servicios se han convertido en una \u00abmateria prima\u00bb que cualquier aplicaci\u00f3n moderna espera que el sistema operativo ofrezca. Como tal, la mayor parte del c\u00f3digo utilizado por las aplicaciones modernas se ofrece en estas bibliotecas.\n\n", "sections": [{"name": "Nota terminol\u00f3gica", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "Tipos", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Biblioteca_(programaci%C3%B3n)", "title": "Biblioteca (inform\u00e1tica)", "summary": "En inform\u00e1tica, una biblioteca o, llamada por vicio del lenguaje, librer\u00eda (del ingl\u00e9s library) es un conjunto de implementaciones funcionales, codificadas en un lenguaje de programaci\u00f3n, que ofrece una interfaz bien definida para la funcionalidad que se invoca. \n\nA diferencia de un programa ejecutable, el comportamiento que implementa una biblioteca no espera ser utilizada de forma aut\u00f3noma (un programa s\u00ed: tiene un punto de entrada principal), sino que su fin es ser utilizada por otros programas, independientes y de forma simult\u00e1nea. Por otra parte, el comportamiento de una biblioteca no tiene por qu\u00e9 diferenciarse demasiado del que pudiera especificarse en un programa. Es m\u00e1s, unas bibliotecas pueden requerir de otras para funcionar, pues el comportamiento que definen refina, o altera, el comportamiento de la biblioteca original; o bien la hace disponible para otra tecnolog\u00eda o lenguaje de programaci\u00f3n.\n\nLas bibliotecas pueden vincularse a un programa (o a otra biblioteca) en distintos puntos del desarrollo o la ejecuci\u00f3n, seg\u00fan el tipo de v\u00ednculo que se quiera establecer, tal y como se detalla en el apartado de \"Tipos\".\n\nLa mayor\u00eda de los sistemas operativos modernos proporcionan bibliotecas que implementan los servicios del sistema. De esta manera, estos servicios se han convertido en una \u00abmateria prima\u00bb que cualquier aplicaci\u00f3n moderna espera que el sistema operativo ofrezca. Como tal, la mayor parte del c\u00f3digo utilizado por las aplicaciones modernas se ofrece en estas bibliotecas.\n\n", "sections": [{"name": "Nota terminol\u00f3gica", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "Tipos", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Biopython", "title": "Biopython", "summary": "\nEl proyecto 'Biopython' es el nombre que recibe una serie de aplicaciones y programas inform\u00e1ticos pensados para cuantificar y hacer c\u00e1lculos con datos biol\u00f3gicos, programados por una comunidad internacional. Su objetivo principal es el de desarrollar el mayor n\u00famero posible de bibliotecas inform\u00e1ticas basadas en el lenguaje de programaci\u00f3n Python, que tengan aplicaciones bioinform\u00e1ticas y que est\u00e9n disponibles para un p\u00fablico lo m\u00e1s amplio posible.[1]\u200b[2]\u200b Esto es posible gracias a una licencia de c\u00f3digo abierto espec\u00edfica, llamada licencia Biopython, que es muy poco restrictiva.\n\nBiophython permite representar secuencias biol\u00f3gicas y anotaciones de genomas y es capaz de comunicar con las bases de datos biol\u00f3gicos en l\u00ednea del NCBI para hacer c\u00e1lculos. Adem\u00e1s, gracias a diversos m\u00f3dulos, puede ser utilizada para trabajar sobre proyectos relativos al alineamiento de secuencias, c\u00e1lculo de estructuras proteicas, gen\u00e9tica de poblaciones, filogen\u00e9tica e inteligencia artificial.\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Dise\u00f1o", "text": "", "subsections": []}, {"name": "Caracter\u00edsticas y ejemplos", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Bloque_de_c%C3%B3digo", "title": "Bloque de c\u00f3digo", "summary": "El bloque de c\u00f3digo es un usuario o secci\u00f3n de c\u00f3digo con una o m\u00e1s declaraciones y sentencias. Un lenguaje de programaci\u00f3n que permite bloques, incluyendo bloques anidados dentro de otros bloques es llamado un lenguaje de programaci\u00f3n estructurado por bloques.\n\nIdeas de la estructura del bloque se desarrollaron en la d\u00e9cada de los a\u00f1os 1950, durante el desarrollo de los primeros autocodes y fueron formalizados en los informes de Algol 58 y Algol 60. Algol 58 introdujo la noci\u00f3n de la \"sentencia compuesta\", que estaba relacionada \u00fanicamente con control de flujo.[1]\u200b El posterior informe revisado que describe la sintaxis y la sem\u00e1ntica de Algol 60 introdujo la noci\u00f3n de un bloque, consistiendo en \"una secuencia de sentencias encerrada entre begin y end...\" en la que \"cada declaraci\u00f3n aparece en un bloque de esta manera y es v\u00e1lida solo para ese bloque\".[2]\u200b\n\nLa funci\u00f3n de los bloques de programaci\u00f3n es permitir que grupos sentencias sean tratados como si fueran una sola sentencia, y restringir el \u00e1mbito l\u00e9xico de las variables, los procedimientos y funciones declaradas en un bloque para que no entre en conflicto con variables con el mismo nombre utilizadas para diferentes prop\u00f3sitos en otras partes de un programa.\n\nLa noci\u00f3n de bloques es introducida por diferentes sintaxis en diferentes lenguajes, pero hay dos grandes familias: la familia del ALGOL en que los bloques est\u00e1n delimitados por las palabras clave begin y end, y la familia de C en la que los bloques est\u00e1n delimitados por llaves { y }. Algunas otras t\u00e9cnicas utilizadas son el uso de sangr\u00eda, y s-expression con una palabra clave sint\u00e1ctica como lambda o let (como en la familia del Lisp).\n\nEn un lenguaje de programaci\u00f3n estructurado en bloque, los nombres de las variables y otros objetos, como los procedimientos que son declarados en bloques externos son visibles dentro de otros bloques internos, a menos que sean sombreado por un objeto del mismo nombre.\n\nAlgunos lenguajes que soportan bloques con declaraciones de variables no soportan completamente todas las declaraciones; por ejemplo muchos lenguajes derivados de C no permitan la definici\u00f3n de una funci\u00f3n dentro de un bloque. Y a diferencia de su antecesor Algol, Pascal no soporta el uso de bloques con sus propias declaraciones dentro del begin y end de un bloque existente, s\u00f3lo sentencias compuestas permitiendo una secuencia de declaraciones agrupadas en if, while, repeat y otras sentencias de control.\n\n", "sections": [{"name": "Origen", "text": "", "subsections": []}, {"name": "Sintaxis", "text": "", "subsections": []}, {"name": "Uso", "text": "", "subsections": []}, {"name": "Par\u00e1metros", "text": "", "subsections": []}, {"name": "Uso", "text": "", "subsections": []}, {"name": "Par\u00e1metros", "text": "", "subsections": []}, {"name": "Beneficios", "text": "", "subsections": []}, {"name": "Consecuencias", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Boo_(lenguaje_de_programaci%C3%B3n)", "title": "Boo (lenguaje de programaci\u00f3n)", "summary": "\nBoo es un lenguaje de programaci\u00f3n orientado a objetos, de tipos est\u00e1ticos para la Common Language Infrastructure con una sintaxis inspirada en  Python y un \u00e9nfasis en la extensibilidad del lenguaje y su compilador. Sus caracter\u00edsticas incluyen la inferencia de tipos, los generadores, multim\u00e9todos, duck typing opcional, macros, clausuras, currificaci\u00f3n y funciones de primera clase.\n\nBoo es software de c\u00f3digo abierto; tiene una licencia tipo MIT/BSD.\n\nBoo se integra sin fisuras con Microsoft.NET y Mono.\n\n", "sections": [{"name": "Ejemplos de c\u00f3digo", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Bucle_while", "title": "Bucle while", "summary": "\n\nBusca fuentes: \u00abBucle while\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nEl bucle while o bucle mientras es un ciclo repetitivo basado en los resultados de una expresi\u00f3n l\u00f3gica; se encuentra en la mayor\u00eda de los lenguajes de programaci\u00f3n estructurados. El prop\u00f3sito es repetir un bloque de c\u00f3digo mientras una condici\u00f3n se mantenga verdadera.[1]\u200b\n\n", "sections": [{"name": "Sintaxis", "text": "", "subsections": []}, {"name": "Condici\u00f3n", "text": "", "subsections": []}, {"name": "Ejemplos (usando sintaxis de C++)", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/C%2B%2B", "title": "C++", "summary": "\n\n[\n]\nC++ es un lenguaje de programaci\u00f3n dise\u00f1ado en 1979 por Bjarne Stroustrup. La intenci\u00f3n de su creaci\u00f3n fue extender al lenguaje de programaci\u00f3n C y a\u00f1adir mecanismos que permiten la manipulaci\u00f3n de objetos. En ese sentido, desde el punto de vista de los lenguajes orientados a objetos, C++ es un lenguaje h\u00edbrido.\n\nPosteriormente se a\u00f1adieron facilidades de programaci\u00f3n gen\u00e9rica, que se sumaron a los paradigmas de programaci\u00f3n estructurada y programaci\u00f3n orientada a objetos. Por esto se suele decir que el C++ es un lenguaje de programaci\u00f3n multiparadigma.\n\nActualmente existe un est\u00e1ndar, denominado ISO C++, al que se han adherido la mayor\u00eda de los fabricantes de compiladores m\u00e1s modernos. Existen tambi\u00e9n algunos int\u00e9rpretes, tales como ROOT.\n\nEl nombre \"C++\" fue propuesto por Rick Mascitti en el a\u00f1o 1983, cuando el lenguaje fue utilizado por primera vez fuera de un laboratorio cient\u00edfico. Antes se hab\u00eda usado el nombre \"C con clases\". En C++, la expresi\u00f3n \"C++\" significa \"incremento de C\" y se refiere a que C++ es una extensi\u00f3n de C.\n\n", "sections": [{"name": "Caracter\u00edsticas de C++", "text": "", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": []}, {"name": "Tipos de datos", "text": "", "subsections": []}, {"name": "Principios", "text": "", "subsections": []}, {"name": "El concepto de clase", "text": "", "subsections": []}, {"name": "Standard Template Library (STL)", "text": "", "subsections": []}, {"name": "Biblioteca de entrada y salida", "text": "", "subsections": []}, {"name": "C++11", "text": "", "subsections": []}, {"name": "Actualidad y futuro", "text": "", "subsections": []}, {"name": "Diferencias de tipos respecto a C", "text": "", "subsections": []}, {"name": "Compiladores", "text": "", "subsections": []}, {"name": "Entornos de desarrollo", "text": "", "subsections": []}, {"name": "Cr\u00edticas", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/C%C3%A1lculo_lambda", "title": "C\u00e1lculo lambda", "summary": "En l\u00f3gica matem\u00e1tica, el c\u00e1lculo lambda es un sistema formal dise\u00f1ado para investigar la definici\u00f3n de funci\u00f3n, la noci\u00f3n de aplicaci\u00f3n de funciones y la recursi\u00f3n. Fue introducido por Alonzo Church y Stephen Kleene en la d\u00e9cada de 1930 como parte de sus investigaciones sobre los fundamentos de las matem\u00e1ticas. Church us\u00f3 el c\u00e1lculo lambda en 1936 para resolver el Entscheidungsproblem. Puede ser usado para definir de manera limpia y precisa qu\u00e9 es una \"funci\u00f3n computable\".\n\nEl interrogante de si dos expresiones del c\u00e1lculo lambda son equivalentes no puede ser resuelto por un algoritmo general. Esta fue la primera pregunta, incluso antes que el problema de la parada, cuya indecidibilidad fue probada. El c\u00e1lculo lambda tiene una gran influencia sobre los lenguajes funcionales, como Lisp, ML y Haskell.\n\nSe puede considerar al c\u00e1lculo lambda como uno de los lenguajes universales de programaci\u00f3n m\u00e1s minimalistas. Consiste en una regla de transformaci\u00f3n simple (sustituci\u00f3n de variables) y un esquema simple para definir funciones.\n\nEl c\u00e1lculo lambda es universal porque cualquier funci\u00f3n computable puede ser expresada y evaluada a trav\u00e9s de \u00e9l. Por lo tanto, es equivalente a las m\u00e1quinas de Turing. Sin embargo, el c\u00e1lculo lambda no hace \u00e9nfasis en el uso de reglas de transformaci\u00f3n y no considera las m\u00e1quinas reales que pueden implementarlo. Se trata de una propuesta m\u00e1s cercana al software que al hardware.\n\nEste art\u00edculo se enfocar\u00e1 sobre el c\u00e1lculo lambda sin tipos, como fue dise\u00f1ado originalmente por Church.[1]\u200b Desde entonces, algunos c\u00e1lculo lambda tipados fueron creados.\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Introducci\u00f3n informal", "text": "", "subsections": []}, {"name": "Definici\u00f3n formal", "text": "", "subsections": []}, {"name": "C\u00e1lculos aritm\u00e9ticos con lambda", "text": "", "subsections": []}, {"name": "L\u00f3gica y predicados", "text": "", "subsections": []}, {"name": "Pares", "text": "", "subsections": []}, {"name": "Recursi\u00f3n", "text": "", "subsections": []}, {"name": "Funciones computables y el c\u00e1lculo lambda", "text": "", "subsections": []}, {"name": "Indecisi\u00f3n de equivalencia", "text": "", "subsections": []}, {"name": "C\u00e1lculo lambda y los lenguajes de programaci\u00f3n", "text": "", "subsections": []}, {"name": "Estrategias de reducci\u00f3n", "text": "", "subsections": []}, {"name": "Concurrencia y paralelismo", "text": "", "subsections": []}, {"name": "Reducci\u00f3n \u00f3ptima", "text": "", "subsections": []}, {"name": "Sem\u00e1ntica", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/C%C3%B3digo_abierto", "title": "C\u00f3digo abierto", "summary": "El c\u00f3digo abierto (en ingl\u00e9s: open source) es un modelo de desarrollo de software basado en la colaboraci\u00f3n abierta.[1]\u200b Se enfoca en los beneficios pr\u00e1cticos (acceso al c\u00f3digo fuente) y en cuestiones \u00e9ticas o de libertad que tanto se destacan en el software libre.[2]\u200b Para muchos el t\u00e9rmino \u00ablibre\u00bb hace referencia al hecho de adquirir un software de manera gratuita. Sin embargo, de lo que se trata es de abaratar los costos y ampliar la participaci\u00f3n; que sea libre no necesariamente implica que sea gratuito, lo importante sigue siendo ampliar la participaci\u00f3n y extender libertades.\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Movimiento del c\u00f3digo abierto", "text": "", "subsections": []}, {"name": "Programas en c\u00f3digo abierto", "text": "", "subsections": []}, {"name": "C\u00f3digo abierto en educaci\u00f3n", "text": "", "subsections": []}, {"name": "Extensiones del concepto", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/CPython", "title": "CPython", "summary": "\n\nBusca fuentes: \u00abCPython\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nCPython es la implementaci\u00f3n oficial y m\u00e1s ampliamente utilizada del lenguaje de programaci\u00f3n Python. Est\u00e1 escrita en C. Adem\u00e1s de CPython, hay otras implementaciones con calidad para producci\u00f3n: Jython, escrita en Java; IronPython, escrita para el Common Language Runtime y PyPy, escrita en un subconjunto del propio lenguaje Python. \n\nCPython es un int\u00e9rprete de bytecode. Tiene una interfaz de funciones for\u00e1neas para varios lenguajes (incluyendo C, C++ y Fortran)[1]\u200b con el que se pueden codificar bindings para bibliotecas escritas en lenguajes diferentes a Python.[2]\u200b\n\nAdem\u00e1s de CPython, existen otras implementaciones de Python: Jython, IronPython, PyPy y Stackless Python.\n\n\n\n", "sections": [{"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/C_(lenguaje_de_programaci%C3%B3n)", "title": "C (lenguaje de programaci\u00f3n)", "summary": "\n\nC\u00f3digo simple en C\nB (BCPL, CPL), ALGOL 68,[1]\u200b:\u200a201-208\u200a\n\nC es un lenguaje de programaci\u00f3n de prop\u00f3sito general[2]\u200b:\u200a1\u200a originalmente desarrollado por Dennis Ritchie entre 1969 y 1972 en los Laboratorios Bell,[1]\u200b como evoluci\u00f3n del anterior lenguaje B, a su vez basado en BCPL.[2]\u200b:\u200a1\u200a[3]\u200b[4]\u200b\n\nAl igual que B, es un lenguaje orientado a la implementaci\u00f3n de sistemas operativos; concretamente Unix. C es apreciado por la eficiencia del c\u00f3digo que produce y es el lenguaje de programaci\u00f3n m\u00e1s popular para crear softwares de sistemas y aplicaciones.\n\nSe trata de un lenguaje de tipos de datos est\u00e1ticos, d\u00e9bilmente tipado, que dispone de las estructuras t\u00edpicas de los lenguajes de alto nivel, pero, a su vez, dispone de construcciones del lenguaje que permiten un control a bajo nivel. Los compiladores suelen ofrecer extensiones al lenguaje que posibilitan mezclar c\u00f3digo en ensamblador con c\u00f3digo C o acceder directamente a memoria o dispositivos perif\u00e9ricos.\n\nLa primera estandarizaci\u00f3n del lenguaje C fue en ANSI, con el est\u00e1ndar X3.159-1989. El lenguaje que define este est\u00e1ndar fue conocido vulgarmente como ANSI C. Posteriormente, en 1990, fue ratificado como est\u00e1ndar ISO (ISO/IEC 9899:1990). La adopci\u00f3n de este est\u00e1ndar es muy amplia por lo que, si los programas creados lo siguen, el c\u00f3digo es portable entre plataformas y/o arquitecturas.\n\n", "sections": [{"name": "Filosof\u00eda", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "Lenguajes derivados de C", "text": "", "subsections": []}, {"name": "Proceso de compilaci\u00f3n", "text": "", "subsections": []}, {"name": "Herramientas de programaci\u00f3n", "text": "", "subsections": []}, {"name": "Aplicabilidad", "text": "", "subsections": []}, {"name": "Bibliotecas C", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Clase_(inform%C3%A1tica)", "title": "Clase (inform\u00e1tica)", "summary": "\n\nBusca fuentes: \u00abClase (inform\u00e1tica)\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nEn inform\u00e1tica, una clase es una plantilla para el objetivo de la creaci\u00f3n de objetos de datos seg\u00fan un modelo predefinido. Las clases se utilizan para representar entidades o conceptos, como los sustantivos en el lenguaje. Cada clase es un modelo que define un conjunto de variables y m\u00e9todos apropiados para operar con dichos datos. Cada objeto creado a partir de la clase se denomina instancia de la clase.\n\nLa programaci\u00f3n orientada a objetos es la base principal para los tipos de objetos. Permiten abstraer los datos y sus operaciones asociadas al modo de una caja negra. Los lenguajes de programaci\u00f3n que soportan clases difieren sutilmente en su soporte para diversas caracter\u00edsticas relacionadas con clases. La mayor\u00eda soportan diversas formas de herencia. Muchos lenguajes tambi\u00e9n soportan caracter\u00edsticas para proporcionar encapsulaci\u00f3n, como especificadores de acceso.\n\nUna clase tambi\u00e9n puede tener una representaci\u00f3n (metaobjeto) en tiempo de ejecuci\u00f3n, que proporciona apoyo en tiempo de ejecuci\u00f3n para la manipulaci\u00f3n de los metadatos relacionados con la clase.\n\n", "sections": [{"name": "Componentes", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Codigo_fuente", "title": "C\u00f3digo fuente", "summary": "\n\nBusca fuentes: \u00abC\u00f3digo fuente\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nEl c\u00f3digo fuente de un programa inform\u00e1tico (o software) es un conjunto de l\u00edneas de texto con los pasos que debe seguir la computadora para ejecutar un cargador.[1]\u200b\n\nEl c\u00f3digo fuente de un programa est\u00e1 escrito por un programador en alg\u00fan lenguaje de programaci\u00f3n legible por humanos, normalmente en forma de texto plano.[2]\u200b Sin embargo, el programa escrito en un lenguaje legible por humanos no es directamente ejecutable por la computadora en su primer estado, sino que debe ser traducido a otro lenguaje o c\u00f3digo binario; as\u00ed ser\u00e1 m\u00e1s f\u00e1cil para la m\u00e1quina interpretarlo  (lenguaje m\u00e1quina o c\u00f3digo objeto que s\u00ed pueda ser ejecutado por el hardware de la computadora). Para esta traducci\u00f3n se usan los llamados compiladores, ensambladores, int\u00e9rpretes y otros sistemas de traducci\u00f3n.\n\nEl t\u00e9rmino c\u00f3digo fuente tambi\u00e9n se usa para hacer referencia al c\u00f3digo fuente de otros elementos del software, como, por ejemplo, el c\u00f3digo fuente de una p\u00e1gina web, que est\u00e1 escrito en lenguaje de marcado HTML o en Javascript, u otros lenguajes de programaci\u00f3n web, y que es posteriormente ejecutado por el navegador web para visualizar dicha p\u00e1gina cuando es visitada.\n\nEl \u00e1rea de la inform\u00e1tica que se dedica a la creaci\u00f3n de programas, y por tanto a la creaci\u00f3n de su c\u00f3digo fuente, es la ingenier\u00eda de software.\n\n", "sections": [{"name": "Licencias", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Coloreado_de_sintaxis", "title": "Resaltado de sintaxis", "summary": "\n\nBusca fuentes: \u00abResaltado de sintaxis\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nEl resaltado de sintaxis, a veces llamado coloreado de sintaxis, es una capacidad de algunas aplicaciones para tratamiento de textos (como los editores de texto), para diferenciar elementos de texto (especialmente el llamado c\u00f3digo fuente) mediante diversos colores o estilos tipogr\u00e1ficos, dependiendo de las categor\u00edas sint\u00e1cticas de sus t\u00e9rminos, conforme a las reglas de alg\u00fan lenguaje formal concreto.\n\nEste resaltado se utiliza a modo de notaci\u00f3n secundaria, habitualmente para mejorar la legibilidad del c\u00f3digo fuente de programas o de textos escritos en alg\u00fan lenguaje de marcado, permitiendo aumentar la productividad de los programadores. Los estilos aplicados por defecto dependen de cada programa inform\u00e1tico, alguno de los cuales permiten configurar los estilos e incluso reconocer diversos lenguajes.\n\nLa interpretaci\u00f3n del texto no var\u00eda en absoluto al resaltar sus elementos. Los cambios en la representaci\u00f3n del texto cumplen una funci\u00f3n visual identificativa y no sem\u00e1ntica, s\u00f3lo se usan para transmitir informaci\u00f3n al lector humano. Por tanto, en el caso del c\u00f3digo fuente de un programa, los int\u00e9rpretes y los compiladores lo ignoran. No forman parte ni del lenguaje formal en s\u00ed, ni del texto, por lo que tampoco se guardan en el fichero, sino que se analiza cada vez que se carga.\n\n", "sections": [{"name": "Ejemplo", "text": "", "subsections": []}, {"name": "Programas con resaltado de sintaxis", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Colt_Python", "title": "Colt Python", "summary": "\n\u00a0\nEl Colt Python es un rev\u00f3lver calibre .357 que era fabricado por la empresa Colt Manufacturing Company de Hartford, Connecticut. A veces es mencionado como \"Magnum de combate\".[1]\u200b Fue introducido al mercado en 1955, el mismo a\u00f1o que el rev\u00f3lver Modelo 29 calibre 11 mm de Smith & Wesson. El ya descontinuado Colt Python iba dirigido al segmento del mercado de rev\u00f3lveres de lujo. Algunos coleccionistas de armas de fuego y escritores como Jeff Cooper, Ian V. Hogg, Chuck Hawks, Leroy Thompson, y Ren\u00e9e Smeets han descrito al Python como uno de los mejores rev\u00f3lveres jam\u00e1s fabricados.[2]\u200b[3]\u200b[4]\u200b[5]\u200b[6]\u200b[7]\u200b[1]\u200b\n\n", "sections": [{"name": "Descripci\u00f3n", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "Modelos y variantes", "text": "", "subsections": []}, {"name": "Uso", "text": "", "subsections": []}, {"name": "Cr\u00edticas", "text": "", "subsections": []}, {"name": "Apariciones en televisi\u00f3n y videojuegos", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Notas", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Comentario_(inform%C3%A1tica)", "title": "Comentario (inform\u00e1tica)", "summary": "rojo\nverde\nazul\nEn la programaci\u00f3n de computadoras, un comentario es una construcci\u00f3n del lenguaje de programaci\u00f3n[1]\u200b destinada a incrustar anotaciones legibles al programador en el c\u00f3digo fuente de un Programa inform\u00e1tico.[2]\u200b Estas anotaciones son potencialmente significativas para los programadores, pero usualmente ignorados por los compiladores e int\u00e9rpretes.[3]\u200b[4]\u200b Los comentarios son a\u00f1adidos usualmente con el prop\u00f3sito de hacer el c\u00f3digo fuente m\u00e1s f\u00e1cil de entender con vistas a su mantenimiento o reutilizaci\u00f3n. La sintaxis y reglas para los comentarios var\u00edan y usualmente son definidas en la especificaci\u00f3n del lenguaje de programaci\u00f3n.\n\nSe ha de tener en cuenta que los comentarios necesitan mantenimiento igual que el c\u00f3digo y, por tanto, que un comentario preciso y conciso es m\u00e1s f\u00e1cil de mantener que uno largo, repetitivo y complicado.\n\nLos comentarios tienen una amplia gama de posibles usos: desde la mejora del c\u00f3digo fuente con descripciones b\u00e1sicas hasta la generaci\u00f3n de documentaci\u00f3n externa. Tambi\u00e9n se utilizan para la integraci\u00f3n con sistemas de control de versiones y otros tipos de herramientas de programaci\u00f3n externas.\n\nLa flexibilidad proporcionada por los comentarios da pie a un amplio abanico de formas de uso distintas y a la inclusi\u00f3n de informaci\u00f3n in\u00fatil dentro del c\u00f3digo fuente. Para evitar este inconveniente, muchos programadores y analistas de software adoptan alguna de las \"filosof\u00edas\" o metodolog\u00edas para la correcta utilizaci\u00f3n de los comentarios.\n\n", "sections": [{"name": "Informaci\u00f3n general", "text": "", "subsections": []}, {"name": "Usos", "text": "", "subsections": []}, {"name": "Estilos", "text": "", "subsections": []}, {"name": "Curiosidades", "text": "", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Compilaci%C3%B3n_en_tiempo_de_ejecuci%C3%B3n", "title": "Compilaci\u00f3n en tiempo de ejecuci\u00f3n", "summary": "\n\nBusca fuentes: \u00abCompilaci\u00f3n en tiempo de ejecuci\u00f3n\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nEn inform\u00e1tica, la compilaci\u00f3n en tiempo de ejecuci\u00f3n (tambi\u00e9n conocida por sus siglas inglesas, JIT, just-in-time), tambi\u00e9n conocida como traducci\u00f3n din\u00e1mica, es una t\u00e9cnica para mejorar el rendimiento de sistemas de programaci\u00f3n que compilan a bytecode, consistente en traducir el bytecode a  c\u00f3digo m\u00e1quina nativo en tiempo de ejecuci\u00f3n. La compilaci\u00f3n en tiempo de ejecuci\u00f3n se construye a partir de dos ideas anteriores relacionadas con los entornos de ejecuci\u00f3n: la compilaci\u00f3n a bytecode y la compilaci\u00f3n din\u00e1mica.\n\nEn un sistema que use interpretaci\u00f3n de bytecode como por ejemplo Smalltalk, Perl, GNU CLISP o las primeras versiones de Java, el c\u00f3digo fuente es traducido a un c\u00f3digo intermedio llamado bytecode. El bytecode no es el c\u00f3digo m\u00e1quina de ninguna computadora en particular, y puede por tanto ser portable entre diferentes arquitecturas. El bytecode es entonces interpretado, o ejecutado por una m\u00e1quina virtual.\n\nUn entorno con compilaci\u00f3n din\u00e1mica es aquel en el que el compilador puede ser usado durante la ejecuci\u00f3n. Por ejemplo, la mayor\u00eda de los sistemas Commons Lisp tienen una funci\u00f3n compile que permite compilar nuevas funciones creadas durante la ejecuci\u00f3n del programa. Aunque ventajoso en la depuraci\u00f3n interactiva, la compilaci\u00f3n din\u00e1mica es menos \u00fatil en un sistema en explotaci\u00f3n desatendido. Ese m\u00e9todo es m\u00e1s com\u00fan en emuladores modernos y frecuentemente comerciales que requieren mucha velocidad, como el Qemu y el VirtualPC (PC) o el Executor (Macintosh 68k).\n\nEn un entorno de compilaci\u00f3n en tiempo de ejecuci\u00f3n, la compilaci\u00f3n a bytecode es el primer paso, reduciendo el c\u00f3digo fuente a una representaci\u00f3n intermedia portable y optimizable. El bytecode se despliega en el sistema de destino. Cuando dicho c\u00f3digo se ejecuta, el compilador en tiempo de ejecuci\u00f3n lo traduce a c\u00f3digo m\u00e1quina nativo. Esto puede realizarse a nivel de fichero (programa) o de funciones, compil\u00e1ndose en este \u00faltimo caso el c\u00f3digo correspondiente a una funci\u00f3n justo cuando va a ejecutarse (de aqu\u00ed el nombre de just-in-time, \u00abjusto a tiempo\u00bb).\n\nEl objetivo es combinar muchas de las ventajas de la compilaci\u00f3n a c\u00f3digo nativo y a bytecode: la mayor\u00eda del \u00abtrabajo pesado\u00bb de procesar el c\u00f3digo fuente original y realizar optimizaciones b\u00e1sicas se realiza en el momento de compilar a bytecode, mucho antes del despliegue: as\u00ed, la compilaci\u00f3n a c\u00f3digo m\u00e1quina del programa resulta mucho m\u00e1s r\u00e1pida que partiendo del c\u00f3digo fuente. El bytecode desplegado es portable, a diferencia del c\u00f3digo m\u00e1quina para cualquier arquitectura concreta. Los compiladores din\u00e1micos son m\u00e1s f\u00e1ciles de escribir, pues el compilador a bytecode ya realiza buena parte del trabajo.\n7\n\n", "sections": [{"name": "Uso de compilaci\u00f3n JIT en emuladores", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Conteo_de_referencias", "title": "Conteo de referencias", "summary": "Conteo de referencias, en ingl\u00e9s Reference counting, es una t\u00e9cnica para contabilizar las veces que un determinado recurso est\u00e1 siendo referido. Por lo general ese recurso son bloques de memoria y la t\u00e9cnica permite establecer cuando no existe ninguna referencia a ese bloque y este puede ser liberado. Es una t\u00e9cnica de muy f\u00e1cil implementaci\u00f3n, pero tiene una importante desventaja: Si las referencias forman un ciclo los objetos involucrados no se liberar\u00e1n nunca. Otra t\u00e9cnica m\u00e1s efectiva es el uso de un recolector de basura.\n\n", "sections": [{"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/CubicWeb", "title": "CubicWeb", "summary": "\nCubicWeb es un framework de c\u00f3digo abierto para el desarrollo de aplicaciones con funciones integradas de web sem\u00e1ntica, escrito en Python. El framework est\u00e1 formado por componentes (clases programadas en Python) llamados cubos, que pueden ser reutilizados para construir sistemas m\u00e1s complejos. CubicWeb sigue los principios de la programaci\u00f3n orientada objetos.\nSe viene desarrollando desde 2000 pero es hasta 2008 cuando la empresa Logilab decide liberar el c\u00f3digo bajo una licencia LGPL.\n\n", "sections": [{"name": "Caracter\u00edsticas principales", "text": "", "subsections": []}, {"name": "Soporte de bases de datos", "text": "", "subsections": []}, {"name": "Premios", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Ejemplos de sitios p\u00fablicos realizados con CubicWeb", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Cython", "title": "Cython", "summary": "\n\nCython es un lenguaje de programaci\u00f3n para simplificar la escritura de m\u00f3dulos de extensi\u00f3n para Python en C y C++. Siendo estrictos, la sintaxis de Cython es la misma de Python pero con algunos agregados:\n\nSe pueden llamar funciones en C, o funciones/m\u00e9todos de C++, directamente desde el c\u00f3digo en Cython.\nEs posible usar tipos est\u00e1ticos en las variables (enteros, flotantes, o cualquier tipo de dato).\nCython compila a c\u00f3digo en C o C++ desde Python, y el resultado puede ser usado desde Python como un \"Modulo de extensi\u00f3n\", o como una aplicaci\u00f3n embebida en el int\u00e9rprete CPython.\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Ventajas", "text": "", "subsections": []}, {"name": "Compatibilidad", "text": "", "subsections": []}, {"name": "Usos", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "P\u00e1ginas externas", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/DARPA", "title": "Agencia de Proyectos de Investigaci\u00f3n Avanzados de Defensa", "summary": "\nSitio web oficial\nLa Agencia de Proyectos de Investigaci\u00f3n Avanzados de Defensa, m\u00e1s conocida por su acr\u00f3nimo DARPA, proveniente de su nombre original en ingl\u00e9s Defense Advanced Research Projects Agency, es una agencia del Departamento de Defensa de Estados Unidos responsable del desarrollo de nuevas tecnolog\u00edas para uso militar. Fue creada en 1958 como consecuencia tecnol\u00f3gica de la llamada Guerra Fr\u00eda y de la que surgieron los fundamentos de ARPANET, red que dio origen a Internet.\n\nLa agencia, denominada en su origen simplemente como ARPA, cambi\u00f3 su denominaci\u00f3n en 1972, conoci\u00e9ndose en lo sucesivo como DARPA, por sus siglas en ingl\u00e9s. DARPA fue responsable de dar fondos para desarrollar muchas tecnolog\u00edas que han tenido un gran impacto en el mundo: sat\u00e9lites, robots, redes de ordenadores (empezando con ARPANET, que despu\u00e9s se desarroll\u00f3 como Internet), as\u00ed como NLS, el cual fue tanto un sistema de hipertexto como un precursor de la interfaz gr\u00e1fica de usuario contempor\u00e1nea.\n\nLa Agencia, bajo control del Departamento de Defensa se organizar\u00e1 en forma independiente de la comunidad de investigaci\u00f3n y desarrollo militar. Su misi\u00f3n durante las pr\u00f3ximas d\u00e9cadas la llevar\u00e1 a desarrollar y proveer aplicaciones tecnol\u00f3gicas no convencionales para la defensa de Estados Unidos ampliando la frontera tecnol\u00f3gica a favor de una organizaci\u00f3n reducida en n\u00famero, pero flexible, libre de condicionamientos y dotada de cient\u00edficos de \u00e9lite. A.R.P.A. ser\u00e1 la responsable de una gran parte de la investigaci\u00f3n en ordenadores y comunicaciones de car\u00e1cter innovador en EE.\u00a0UU. durante los pr\u00f3ximos a\u00f1os.\n\nSu nombre original fue simplemente Agencia de Investigaci\u00f3n de Proyectos Avanzados pero se renombr\u00f3 a DARPA (por Defensa) el 23 de marzo de 1972, volvi\u00f3 a cambiarse a ARPA el 22 de febrero de 1993 y otra vez a DARPA el 11 de marzo de 1996.\n\nDARPA fue creado en 1958 en respuesta al lanzamiento sovi\u00e9tico del Sputnik, con la misi\u00f3n de mantener a la tecnolog\u00eda de Estados Unidos en la carrera militar por delante de la de sus enemigos. Es independiente de otras agencias m\u00e1s convencionales de I+D y reporta directamente al consejo del Departamento de Defensa. DARPA tiene alrededor de 240 trabajadores, los cuales manejan un presupuesto de unos 3000 millones de d\u00f3lares \u20142800 en 2012.[1]\u200b Estos datos son solo promedios, puesto que DARPA est\u00e1 enfocado en proyectos de corto plazo (de dos a cuatro a\u00f1os) llevados a cabo por equipos peque\u00f1os y constituidos expresamente para dichos proyectos.\n\n", "sections": [{"name": "Espionaje", "text": "", "subsections": []}, {"name": "Misi\u00f3n de DARPA", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "Organizaci\u00f3n actual", "text": "", "subsections": []}, {"name": "Proyectos DARPA", "text": "", "subsections": []}, {"name": "Controversia", "text": "", "subsections": []}, {"name": "ARPA y DARPA en la ficci\u00f3n", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/D_(lenguaje_de_programaci%C3%B3n)", "title": "D (lenguaje de programaci\u00f3n)", "summary": "\n[\n]\nD es un lenguaje de programaci\u00f3n de prop\u00f3sito general desarrollado por Walter Bright cuya primera versi\u00f3n apareci\u00f3 en 1999. Se origina como un redise\u00f1o de C++, con un enfoque m\u00e1s pragm\u00e1tico, pero no es un lenguaje puramente derivado del anterior. D ha mantenido algunas caracter\u00edsticas de C++ y tambi\u00e9n est\u00e1 influido por otros conceptos de otros lenguajes como Java, C# y Eiffel.\n\n", "sections": [{"name": "Caracter\u00edsticas", "text": "", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": []}, {"name": "Implementaci\u00f3n", "text": "", "subsections": []}, {"name": "Herramientas de desarrollo", "text": "", "subsections": []}, {"name": "Problemas y controversias", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Diferencia_de_conjuntos", "title": "Diferencia de conjuntos", "summary": "A\nB\nEn teor\u00eda de conjuntos, la diferencia de dos conjuntos es una operaci\u00f3n que da como resultado otro conjunto con los elementos del primer conjunto sin los elementos del segundo conjunto. Por ejemplo, la diferencia entre el conjunto de los n\u00fameros naturales, \n\n\n\n\nN\n\n\n\n{\\displaystyle \\mathbb {N} }\n\n, y el conjunto de los n\u00fameros pares sin incluir el cero, \n\n\n\nP\n\n\n{\\displaystyle P}\n\n, es el conjunto de los n\u00fameros que no son pares, es decir, los impares, \n\n\n\nI\n\n\n{\\displaystyle I}\n\n:\n\n\n\n\n\n\nN\n\n=\n{\n1\n,\n2\n,\n3\n,\n4\n,\n5\n,\n6\n,\n7\n,\n8\n,\n9\n,\n10\n,\n11\n,\n12\n\u2026\n}\n\n\n{\\displaystyle \\mathbb {N} =\\{1,2,3,4,5,6,7,8,9,10,11,12\\ldots \\}}\n\n\n\n\n\n\nP\n=\n{\n2\n,\n4\n,\n6\n,\n8\n,\n10\n,\n12\n\u2026\n}\n\n\n{\\displaystyle P=\\{2,4,6,8,10,12\\ldots \\}}\n\n\n\n\n\n\nI\n=\n{\n1\n,\n3\n,\n5\n,\n7\n,\n9\n,\n11\n,\n13\n,\n15\n,\n17\n\u2026\n}\n\n\n{\\displaystyle I=\\{1,3,5,7,9,11,13,15,17\\ldots \\}}\n\n\nComo no hay ning\u00fan elemento del conjunto P que no sea un n\u00famero natural, la diferencia P menos N no tiene ning\u00fan elemento, por lo que es el conjunto vac\u00edo. La diferencia entre dos conjuntos A y B se denota por A \\ B o A \u2212 B, por lo que: N \\ P = I, y tambi\u00e9n P \u2212 N = \u2205.\n\n", "sections": [{"name": "Definici\u00f3n", "text": "", "subsections": []}, {"name": "Propiedades", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Diferencia_sim%C3%A9trica", "title": "Diferencia sim\u00e9trica", "summary": "A\nB\nEn teor\u00eda de conjuntos, la diferencia sim\u00e9trica de dos conjuntos es una operaci\u00f3n cuyo resultado es otro conjunto que contiene a aquellos elementos que pertenecen a cada uno de los conjuntos iniciales, pero no a ambos a la vez. Por ejemplo, la diferencia sim\u00e9trica del conjunto de los n\u00fameros pares positivos P y el conjunto de los cuadrados perfectos C es un conjunto D que contiene los cuadrados impares y los pares no cuadrados:\n\n\n\n\n\nP\n=\n{\n2\n,\n4\n,\n6\n,\n8\n,\n10\n,\n12\n,\n14\n,\n16\n,\n\u2026\n}\n\n\n{\\displaystyle P=\\{2,4,6,8,10,12,14,16,\\ldots \\}}\n\n\n\n\n\n\nC\n=\n{\n1\n,\n4\n,\n9\n,\n16\n,\n25\n,\n\u2026\n}\n\n\n{\\displaystyle C=\\{1,4,9,16,25,\\ldots \\}}\n\n\n\n\n\n\nD\n=\n{\n1\n,\n2\n,\n6\n,\n8\n,\n9\n,\n10\n,\n12\n,\n14\n,\n18\n,\n\u2026\n}\n\n\n{\\displaystyle D=\\{1,2,6,8,9,10,12,14,18,\\ldots \\}}\n\n\n", "sections": [{"name": "Definici\u00f3n", "text": "", "subsections": []}, {"name": "Propiedades", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Django_(framework)", "title": "Django (framework)", "summary": "\n\nDjango es un framework de desarrollo web de c\u00f3digo abierto, escrito en Python, que respeta el patr\u00f3n de dise\u00f1o conocido como modelo\u2013vista\u2013controlador (MVC). Fue desarrollado originalmente para gestionar p\u00e1ginas web orientadas a noticias de la World Company de Lawrence, Kansas, y fue liberada al p\u00fablico bajo una licencia BSD en julio de 2005; el framework fue nombrado en alusi\u00f3n al guitarrista de jazz gitano Django Reinhardt.\n\nEn junio de 2008 fue anunciado que la reci\u00e9n formada Django Software Foundation se har\u00eda cargo de Django en el futuro.\n\nLa meta fundamental de Django es facilitar la creaci\u00f3n de sitios web complejos. Django pone \u00e9nfasis en el re-uso, la conectividad y extensibilidad de componentes, el desarrollo r\u00e1pido y el principio \u00abDRY\u00bb (del ingl\u00e9s Don't Repeat Yourself,\u00abNo te repitas\u00bb). El lenguaje Python es usado en todos los componentes del framework, incluso en configuraciones, archivos,[1]\u200b y en sus modelos de datos.\n\n", "sections": [{"name": "Visi\u00f3n general y caracter\u00edsticas", "text": "", "subsections": []}, {"name": "Arquitectura", "text": "", "subsections": []}, {"name": "Historial de versiones", "text": "", "subsections": []}, {"name": "Soporte de bases de datos", "text": "", "subsections": []}, {"name": "Soporte de servidores Web", "text": "", "subsections": []}, {"name": "Requerimientos", "text": "", "subsections": []}, {"name": "Otros aspectos", "text": "", "subsections": []}, {"name": "Django en la web", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Encapsulamiento_(inform%C3%A1tica)", "title": "Encapsulamiento (inform\u00e1tica)", "summary": "En la Programaci\u00f3n orientada a objetos (POO), la encapsulaci\u00f3n se refiere a la agrupaci\u00f3n de datos con los m\u00e9todos que operan en esos datos, o la restricci\u00f3n del acceso directo a algunos de los componentes de un objeto.[1]\u200b La encapsulaci\u00f3n se utiliza para ocultar los valores o el estado de un objeto de datos estructurados dentro de una clase, evitando el acceso directo a ellos por parte de los clientes de una manera que podr\u00eda exponer detalles de Implementaci\u00f3n ocultos o violar la invariancia de estado mantenida por los m\u00e9todos.\n\nSin embargo, ocultar datos no es el alcance total de la ocultaci\u00f3n de informaci\u00f3n. David Parnas introdujo por primera vez el concepto de ocultaci\u00f3n de informaci\u00f3n alrededor de 1972. Argument\u00f3 que el criterio principal para la modularizaci\u00f3n del sistema deber\u00eda referirse a la ocultaci\u00f3n de decisiones cr\u00edticas de dise\u00f1o. Hizo hincapi\u00e9 en ocultar \u00abdecisiones de dise\u00f1o dif\u00edciles o decisiones de dise\u00f1o que probablemente cambien\u00bb. Ocultar informaci\u00f3n de esa manera a\u00edsla a los clientes de requerir un conocimiento profundo del dise\u00f1o para usar un m\u00f3dulo y de los efectos de cambiar esas decisiones.[1]\u200b\n\n", "sections": [{"name": "Significado", "text": "", "subsections": []}, {"name": "Modificadores de acceso", "text": "", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": []}, {"name": "===============================================================================", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Estilo_de_sangrado", "title": "Estilo de sangrado", "summary": "\n\nBusca fuentes: \u00abEstilo de sangrado\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nIndentaci\u00f3n es un anglicismo (de la palabra inglesa indentation) de uso com\u00fan en inform\u00e1tica; no es un t\u00e9rmino reconocido por la Real Academia Espa\u00f1ola (consultado en la vigesimosegunda edici\u00f3n). La Real Academia recomienda utilizar \u00absangrado\u00bb. \nEste t\u00e9rmino significa mover un bloque de texto hacia la derecha insertando espacios o tabuladores, para as\u00ed separarlo del margen izquierdo y distinguirlo  mejor del texto adyacente; en el \u00e1mbito de la imprenta, este concepto siempre se ha denominado sangrado o sangr\u00eda.\n\nEn los lenguajes de programaci\u00f3n de computadoras, la indentaci\u00f3n es un tipo de notaci\u00f3n secundaria utilizado para mejorar la legibilidad del c\u00f3digo fuente por parte de los programadores, teniendo en cuenta que los compiladores o int\u00e9rpretes raramente consideran los espacios en blanco entre las sentencias de un programa. Sin embargo, en ciertos lenguajes de programaci\u00f3n como Haskell, Occam y Python, el sangrado se utiliza para delimitar la estructura del programa permitiendo establecer bloques de c\u00f3digo.\n\nSon frecuentes discusiones entre programadores sobre c\u00f3mo o d\u00f3nde usar el sangrado, si es mejor usar espacios en blanco o tabuladores, ya que cada programador tiene su propio estilo.\n\n", "sections": [{"name": "Ejemplos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Extensi%C3%B3n_de_archivo", "title": "Extensi\u00f3n de archivo", "summary": "\n\nBusca fuentes: \u00abExtensi\u00f3n de archivo\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nEn inform\u00e1tica, el t\u00e9rmino extensi\u00f3n del fichero (tambi\u00e9n, extensi\u00f3n del archivo) es una cadena de caracteres anexada al nombre de un archivo, habitualmente predicha por un punto. Su funci\u00f3n principal es distinguir el contenido del archivo, de modo que el sistema operativo disponga del procedimiento necesario para ejecutarlo o interpretarlo. Sin embargo, la extensi\u00f3n es solamente parte del nombre del archivo y no representa ning\u00fan tipo de obligaci\u00f3n respecto a su contenido.\n\nAlgunos sistemas operativos, especialmente los herederos de DOS como Windows, utilizan las extensiones de archivo para reconocer su formato, incluso el de archivos ejecutables. Otros sistemas operativos, como los basados en Unix, utilizan las extensiones de archivo por simple convenci\u00f3n, y no las usan necesariamente para determinar el tipo de archivo.\n\nDado que las extensiones de archivo legado son del sistema DOS, muchas de sus actuales caracter\u00edsticas fueron heredadas por limitaciones en ese sistema. Los antiguos sistemas DOS limitaban la cantidad de caracteres de la extensi\u00f3n de archivo a tres, por lo que muchas extensiones convencionales poseen esa cantidad de caracteres. Adem\u00e1s, los nombres de archivo en sistemas DOS son insensibles a las may\u00fasculas y min\u00fasculas, por lo que la mayor\u00eda de las extensiones de archivo pueden escribirse en min\u00fasculas o en may\u00fasculas o en una combinaci\u00f3n de ambas.\n\nPor su extensi\u00f3n, un mismo nombre b\u00e1sico puede contener archivos de distinto prop\u00f3sito. Como en este ejemplo de DOS:\n\nAPLICACI\u00d3N.BAS  Archivo Fuente escrito en lenguaje BASIC.\n\nAPLICACI\u00d3N.OBJ  Archivo objeto (necesario para su compilaci\u00f3n).\n\nAPLICACI\u00d3N.EXE  Programa Ejecutable.\n\nARCHIVO.XXX  Archivo de texto ASCII \"texto plano\".\n\nARCHIVO.RTF  Archivo de texto con formato.\n\nARCHIVO.DOC  Archivo de texto con formato de Microsoft Word.\n\nARCHIVO.VBS  Archivo fuente escrito en lenguaje Visual Basic.\n\nEn todos estos casos, las extensiones diferencian los nombres de los archivos y, a la vez, los identifican ante las aplicaciones que pueden manejarlos, lo que facilita la obtenci\u00f3n de resultados.\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Tipos de extensiones", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Extensiones", "title": "Extensi\u00f3n", "summary": "\nEl t\u00e9rmino extensi\u00f3n (y otros t\u00e9rminos derivados, como extensa, extenso, extensor) aparece en esta enciclopedia en referencia a los siguientes conceptos:\n\n", "sections": [{"name": "Filosof\u00eda, l\u00f3gica y ling\u00fc\u00edstica", "text": "", "subsections": []}, {"name": "Matem\u00e1ticas", "text": "", "subsections": []}, {"name": "Biolog\u00eda y medicina", "text": "", "subsections": []}, {"name": "M\u00fasica", "text": "", "subsections": []}, {"name": "Inform\u00e1tica", "text": "", "subsections": []}, {"name": "Educaci\u00f3n universitaria", "text": "", "subsections": []}, {"name": "Otros usos", "text": "", "subsections": []}, {"name": "Extensidad, extensitud, extensividad y extensivo", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/FSF_Award_for_the_Advancement_of_Free_Software", "title": "FSF Award for the Advancement of Free Software", "summary": "El Free Software Foundation Award for the Advancement of Free Software (\"Premio para el Avance del Software Libre de la Fundaci\u00f3n para el Software Libre\") se otorga anualmente a una persona que ha hecho una gran contribuci\u00f3n al progreso y desarrollo del software libre, a trav\u00e9s de actividades que vayan de acuerdo con el esp\u00edritu del software libre y a proyectos de beneficio social.\n\n", "sections": [{"name": "Ganadores", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Factorial", "title": "Factorial", "summary": "\n\n\n\nn\n\n\n{\\displaystyle n}\n\n\n\n\n\n\nn\n!\n\n\n{\\displaystyle n!}\n\n\nEl factorial de un entero positivo n, el factorial de n o n factorial se define en principio como el producto de todos los n\u00fameros enteros positivos desde 1 (es decir, los n\u00fameros naturales) hasta n. Por ejemplo:\n\n\n\n\n\n5\n!\n=\n1\n\u00d7\n2\n\u00d7\n3\n\u00d7\n4\n\u00d7\n5\n=\n120.\n\u00a0\n\n\n{\\displaystyle 5!=1\\times 2\\times 3\\times 4\\times 5=120.\\ }\n\n\nLa operaci\u00f3n de factorial aparece en muchas \u00e1reas de las matem\u00e1ticas, particularmente en combinatoria y an\u00e1lisis matem\u00e1tico.\nDe manera fundamental el factorial de n representa el n\u00famero de formas distintas de ordenar n objetos distintos (elementos sin repetici\u00f3n). Este hecho ha sido conocido desde hace varios siglos, en el siglo\u00a0XII por los estudiosos hind\u00faes.\n\nLa definici\u00f3n de la funci\u00f3n factorial tambi\u00e9n se puede extender a n\u00fameros no naturales manteniendo sus propiedades fundamentales, pero se requieren matem\u00e1ticas avanzadas, particularmente del an\u00e1lisis matem\u00e1tico. El matem\u00e1tico franc\u00e9s Christian Kramp (1760-1826) fue la primera persona en usar la actual notaci\u00f3n matem\u00e1tica n!, en 1808.[1]\u200b\n\nLos factoriales han sido descubiertos en varias culturas antiguas, especialmente en las matem\u00e1ticas indias en las obras can\u00f3nicas de la literatura jainista, y por los m\u00edsticos jud\u00edos en el libro talm\u00fadico Sefer Yetzirah. La operaci\u00f3n factorial se encuentra en muchas \u00e1reas de las matem\u00e1ticas, sobre todo en combinatoria, donde su uso m\u00e1s b\u00e1sico cuenta las posibles secuencias distintas \u2014las permutaciones\u2014 de \n\n\n\nn\n\n\n{\\displaystyle n}\n\n objetos distintos: hay  \n\n\n\nn\n!\n\n\n{\\displaystyle n!}\n\n. En an\u00e1lisis matem\u00e1tico, los factoriales se utilizan en series de potencias para la funci\u00f3n exponencial y otras funciones, y tambi\u00e9n tienen aplicaciones en \u00e1lgebra, teor\u00eda de n\u00fameros, teor\u00eda de la probabilidad e inform\u00e1tica.\n\nGran parte de la matem\u00e1tica de la funci\u00f3n factorial se desarroll\u00f3 a partir de finales del siglo\u00a0XVIII y principios del XIX.\nLa aproximaci\u00f3n de Stirling proporciona una aproximaci\u00f3n exacta al factorial de los grandes n\u00fameros, demostrando que crece m\u00e1s r\u00e1pidamente que el crecimiento exponencial. La  f\u00f3rmula de Legendre describe los exponentes de los n\u00fameros primos en una factorizaci\u00f3n prima de los factoriales, y puede utilizarse para contar los ceros finales de los factoriales. Daniel Bernoulli y Leonhard Euler  interpolaron la funci\u00f3n factorial a una funci\u00f3n continua de n\u00fameros complejos, excepto en los enteros negativos, la funci\u00f3n gamma (compensada).\n\nMuchas otras funciones notables y secuencias de n\u00fameros est\u00e1n estrechamente relacionadas con los factoriales, incluyendo el coeficiente binomial, doble factorial, factorial descendente, primorial, y subfactorial. Las implementaciones de la funci\u00f3n factorial se utilizan habitualmente como ejemplo de diferentes estilos de programaci\u00f3n inform\u00e1tica, y se incluyen en calculadoras cient\u00edficas y bibliotecas de software de c\u00e1lculo cient\u00edfico. Aunque calcular directamente factoriales grandes utilizando la f\u00f3rmula del producto o la recurrencia no es eficiente, se conocen algoritmos m\u00e1s r\u00e1pidos, que igualan con un factor constante el tiempo de los  algoritmos de multiplicaci\u00f3n r\u00e1pidos para n\u00fameros con el mismo n\u00famero de d\u00edgitos.\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Definici\u00f3n por producto e inducci\u00f3n", "text": "", "subsections": []}, {"name": "Propiedades", "text": "", "subsections": []}, {"name": "Aplicaciones", "text": "", "subsections": []}, {"name": "Extensi\u00f3n", "text": "", "subsections": []}, {"name": "Productos similares", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias y citas", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Falcon_(lenguaje_de_programaci%C3%B3n)", "title": "Falcon (lenguaje de programaci\u00f3n)", "summary": "[\n]\nFalcon es un lenguaje de programaci\u00f3n interpretado de c\u00f3digo abierto multiparadigma dise\u00f1ado por Giancarlo Niccolai. Se basa en una m\u00e1quina virtual de propiedad y est\u00e1 disponible para las plataformas Microsoft Windows, GNU/Linux, Mac, Solaris y en el futuro BSD. Se propone como una herramienta para crear aplicaciones completas y aplicaciones web en relaci\u00f3n con apache2. \n\n", "sections": [{"name": "Hello, world!", "text": "", "subsections": []}, {"name": "Paradigmas", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Filosof%C3%ADa_de_Unix", "title": "Filosof\u00eda de Unix", "summary": "La filosof\u00eda de Unix, originada por Ken Thompson, es un conjunto de normas culturales y enfoques filos\u00f3ficos para el desarrollo de software minimalista y modular. Se basa en la experiencia de los principales desarrolladores del sistema operativo Unix. Los primeros desarrolladores de Unix fueron importantes para llevar los conceptos de modularidad y reutilizaci\u00f3n a la pr\u00e1ctica de la ingenier\u00eda de programas inform\u00e1ticos, lo que dio lugar a un movimiento de \"herramientas de software\". Con el tiempo, los principales desarrolladores de Unix (y de los programas que se ejecutaban en \u00e9l) establecieron un conjunto de normas culturales para el desarrollo de programas inform\u00e1ticos; estas normas llegaron a ser tan importantes e influyentes como la propia tecnolog\u00eda de Unix; esto se ha denominado \"filosof\u00eda Unix\".\n\nLa filosof\u00eda de Unix hace hincapi\u00e9 en la construcci\u00f3n de c\u00f3digo simple, corto, claro, modular y extensible que pueda ser f\u00e1cilmente mantenido y reutilizado por otros desarrolladores que no sean sus creadores. La filosof\u00eda de Unix favorece la componibilidad en oposici\u00f3n al dise\u00f1o monol\u00edtico.\n\n", "sections": [{"name": "Origen", "text": "", "subsections": []}, {"name": "El Entorno de Programaci\u00f3n del UNIX", "text": "", "subsections": []}, {"name": "Dise\u00f1o de programas en el entorno UNIX", "text": "", "subsections": []}, {"name": "Doug McIlroy sobre la programaci\u00f3n de Unix", "text": "", "subsections": []}, {"name": "Haz una cosa y hazla bien", "text": "", "subsections": []}, {"name": "Las 17 Reglas de Unix de Eric Raymond", "text": "", "subsections": []}, {"name": "Mike Gancarz: La Filosof\u00eda de UNIX", "text": "", "subsections": []}, {"name": "\"Peor es mejor\"", "text": "", "subsections": []}, {"name": "Cr\u00edtica", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Notas", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Flask", "title": "Flask", "summary": "\nFlask es un framework minimalista escrito en Python que permite crear aplicaciones web r\u00e1pidamente y con un m\u00ednimo n\u00famero de l\u00edneas de c\u00f3digo. Est\u00e1 basado en la especificaci\u00f3n WSGI de Werkzeug y el motor de templates Jinja2 y tiene una licencia BSD.\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Ejemplo", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Foreach", "title": "Foreach", "summary": "\n\nBusca fuentes: \u00abForeach\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nForeach (de la palabra inglesa for each = para cada uno) es un bloque constructivo de los lenguajes de programaci\u00f3n para recorrer los elementos de una colecci\u00f3n. Foreach se utiliza por lo general en lugar de una norma para la declaraci\u00f3n. A diferencia de otras construcciones de bucle, los bucles foreach por lo general no mantienen contra-indicaci\u00f3n expl\u00edcita, que esencialmente dice \"haga esto a todo en este juego\" en lugar de \"hacer esto x veces.\" Esto evita posibles errores off-by-one y hace el c\u00f3digo m\u00e1s f\u00e1cil de leer. En lenguajes orientados a objetos un iterador, aunque impl\u00edcito, a menudo se utiliza como medio de recorrido. Este bucle, implementado a partir de las versiones de PHP4, nos ayuda a recorrer los valores de un array, lo cual puede resultar muy \u00fatil por ejemplo para efectuar una lectura r\u00e1pida del mismo. Recordemos que un array es una variable que guarda un conjunto de elementos (valores) catalogados por claves.[1]\u200b\n\nLa sintaxis en pseudoc\u00f3digo es la siguiente:\n\nUn ejemplo pr\u00e1ctico es la lectura de un array, lo cual podr\u00eda hacerse del siguiente modo:  \n\n\nforeach\n \n(\n$array\nas\n$clave\n=>\n$valor\n)\n{\n   \ninstrucci\u00f3n\n1\n;\n  \n2\n\u2026\n", "sections": [{"name": "Ejemplo en PHP", "text": "", "subsections": []}, {"name": "Ejemplo en Java", "text": "", "subsections": []}, {"name": "Ejemplo en C#", "text": "", "subsections": []}, {"name": "Ejemplo en LISP", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Free_Software_Foundation", "title": "Free Software Foundation", "summary": "\n\n\nLa Fundaci\u00f3n por el Software Libre o Free Software Foundation es una organizaci\u00f3n creada en octubre de 1985 por Richard Stallman y otros entusiastas del software libre con el prop\u00f3sito de difundir este movimiento.\nLa Free Software Foundation (FSF) es una organizaci\u00f3n sin fines de lucro con la misi\u00f3n mundial de promover la libertad de los usuarios de computadoras. Defendemos los derechos de todos los usuarios de software.[1]\u200b\nFSF centra su trabajo fundamentalmente en asuntos legales, organizativos y promocionales en beneficio de la comunidad de usuarios de software libre.\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Actividades", "text": "", "subsections": []}, {"name": "Organizaci\u00f3n", "text": "", "subsections": []}, {"name": "Cr\u00edticas y detractores", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/GNU_General_Public_License", "title": "GNU General Public License", "summary": "\n \n \n \n \n\nS\u00ed\n[\n]\n\nNo\n \nLa Licencia P\u00fablica General de GNU o m\u00e1s conocida por su nombre en ingl\u00e9s GNU General Public License (o simplemente sus siglas en ingl\u00e9s GNU GPL) es una licencia de derecho de autor ampliamente usada en el mundo del software libre y c\u00f3digo abierto,[6]\u200b y garantiza a los usuarios finales (personas, organizaciones, compa\u00f1\u00edas) la libertad de usar, estudiar, compartir (copiar) y modificar el software. Su prop\u00f3sito es doble: declarar que el software cubierto por esta licencia es libre, y protegerlo (mediante una pr\u00e1ctica conocida como copyleft) de intentos de apropiaci\u00f3n que restrinjan esas libertades a nuevos usuarios cada vez que la obra es distribuida, modificada o ampliada. Esta licencia fue creada originalmente por Richard Stallman, fundador de la Free Software Foundation (FSF) para el proyecto GNU.\n\nLa Free Software Foundation pone la GPL a disposici\u00f3n de cualquiera que desee proteger los derechos de sus usuarios finales (usar, compartir, estudiar y modificar), y otorgar a los beneficiarios de un programa de ordenador u otro tipo de obra los derechos de la definici\u00f3n de software libre.[7]\u200b La GPL se distingue del dominio p\u00fablico o de otras licencias de software libre conocidas como permisivas por hacer hincapi\u00e9 en el copyleft, o solo permitir que las copias y derivados de una obra bajo la GPL perpet\u00faen la misma licencia.\n\nLa mayor parte del software GNU es copyleft, pero no todo; sin embargo, todo el software GNU debe ser software libre.\n\nParte del software GNU fue escrito por el equipo de la Free Software Foundation, pero la mayor parte proviene de algunos voluntarios. La Free Software Foundation es titular del copyright de parte de ese software, otra parte est\u00e1 bajo el copyright de sus autores.\n\nDavid A. Wheeler sostiene que el copyleft proporcionado por la GPL fue crucial para el \u00e9xito de sistemas basados en Linux, dando a los programadores que han contribuido al n\u00facleo la seguridad de que de su trabajo se beneficiar\u00eda todo el mundo y seguir\u00e1 siendo libre, en lugar de ser explotado por compa\u00f1\u00edas de software que no tendr\u00edan que dar nada de nuevo a la comunidad.[8]\u200b\n\nLos usuarios o compa\u00f1\u00edas que distribuyen sus trabajos bajo las GPL, pueden cobrar o distribuirlas gratuitamente. Esto distingue las GPL de las licencias de software que proh\u00edben su distribuci\u00f3n comercial. La FSF argumenta que no se debe restringir la distribuci\u00f3n comercial del software (incluyendo la redistribuci\u00f3n),[9]\u200b y en ese tenor la GPL establece expl\u00edcitamente que las obras cubiertas por esta licencia se pueden vender a cualquier precio\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "T\u00e9rminos y condiciones", "text": "", "subsections": []}, {"name": "Compatibilidad y licencias m\u00faltiples", "text": "", "subsections": []}, {"name": "Validez legal", "text": "", "subsections": []}, {"name": "Adopci\u00f3n", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Notas", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/GTK", "title": "GTK", "summary": "\n\nGTK (conocido hasta febrero de 2019 como GTK+)[1]\u200b[2]\u200b o The GIMP Toolkit[3]\u200b[4]\u200b:\u200a3\u200a es una biblioteca de componentes gr\u00e1ficos multiplataforma para desarrollar interfaces gr\u00e1ficas de usuario (GUI).[5]\u200b[4]\u200b:\u200a3\u200a Est\u00e1 licenciado bajo los t\u00e9rminos de la GNU LGPL,[5]\u200b por lo que permite la creaci\u00f3n de tanto software libre como software privativo. GTK es parte del proyecto GNU,[5]\u200b siendo usado por proyectos tan importantes como GIMP, Inkscape, GNOME, Xfce, entre otros.\n\nJunto a Qt, es uno de los kit de herramientas de widgets m\u00e1s popular para el sistema operativo GNU/Linux, teniendo un amplio soporte para Wayland y XOrg. Adem\u00e1s, se puede emplear para desarrollar aplicaciones gr\u00e1ficas que funcionen sobre otros sistemas Unix-like o sistemas operativos como Microsoft Windows, Mac OS, entre otros.\n\n", "sections": [{"name": "Historia y Desarrollo", "text": "", "subsections": []}, {"name": "Bibliotecas de GTK", "text": "", "subsections": []}, {"name": "Dise\u00f1adores de interfaces gr\u00e1ficas (GUI)", "text": "", "subsections": []}, {"name": "Uso", "text": "", "subsections": []}, {"name": "Implementaciones disponibles", "text": "", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": []}, {"name": "Estilo gr\u00e1fico", "text": "", "subsections": []}, {"name": "Cr\u00edtica", "text": "", "subsections": []}, {"name": "Historial de lanzamientos", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/GUI", "title": "Interfaz gr\u00e1fica de usuario", "summary": "La interfaz gr\u00e1fica de usuario, conocida tambi\u00e9n como GUI (del ingl\u00e9s graphical user interface), es un programa inform\u00e1tico que act\u00faa de interfaz de usuario, utilizando un conjunto de im\u00e1genes y objetos gr\u00e1ficos para representar la informaci\u00f3n y acciones disponibles en la interfaz. Su principal uso consiste en proporcionar un entorno visual sencillo para permitir la comunicaci\u00f3n con el sistema operativo de una m\u00e1quina o computador.\n\nHabitualmente las acciones se realizan mediante manipulaci\u00f3n directa, para facilitar la interacci\u00f3n del usuario con la computadora. Surge como evoluci\u00f3n de las interfaces de l\u00ednea de comandos que se usaban para operar los primeros sistemas operativos y es pieza fundamental en un entorno gr\u00e1fico. Como ejemplos de interfaz gr\u00e1fica de usuario, cabe citar los entornos de escritorio Windows, el de GNU/Linux o el de Mac OS X, Aqua.\n\nEn el contexto del proceso de interacci\u00f3n persona-computadora, la interfaz gr\u00e1fica de usuario es el artefacto tecnol\u00f3gico de un sistema interactivo que posibilita, a trav\u00e9s del uso y la representaci\u00f3n del lenguaje visual, una interacci\u00f3n amigable con un sistema inform\u00e1tico.\n\n", "sections": [{"name": "Dise\u00f1o de la interfaz de usuario y de interacci\u00f3n", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "Tipos de interfaces gr\u00e1ficas de usuario", "text": "", "subsections": []}, {"name": "Idioma", "text": "", "subsections": []}, {"name": "Interfaz gr\u00e1fica de usuario tridimensional", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Generador_(inform%C3%A1tica)", "title": "Generador (inform\u00e1tica)", "summary": "En programaci\u00f3n, un generador es una rutina especial que se puede usar para controlar el comportamiento de un iterador en un bucle.\nUn generador es muy similar a una funci\u00f3n que devuelve un vector, en el que un generador tiene los par\u00e1metros que se pueden llamar, y genera una secuencia de valores.\n\nLa manera m\u00e1s simple de conseguir una secuencia de datos es declarando un array o vector declarando manualmente cada valor. Esta pr\u00e1ctica puede volverse tediosa y consumir mucho tiempo al desarrollador si el array o vector requiere que existan una gran cantidad de elementos dentro de \u00e9l. En ese caso un generador resulta ser una manera m\u00e1s r\u00e1pida de declarar el array o vector.\n\nOtra gran ventaja de los generadores radica en que consume una menor cantidad de recursos en memoria, por lo tanto, permite que quien lo llama comience a procesar los primeros valores inmediatamente. En resumen, un generador se asemeja a una funci\u00f3n pero se comporta como un iterador.\n\nLos generadores pueden implementarse en construcciones de control de flujo m\u00e1s expresivas, como la continuaci\u00f3n de objetos de primera clase o como co-funciones.\n\nLos generadores aparecen por primera vez en 1975 en el lenguaje CLU; y est\u00e1n disponibles en Python, C#, JavaScript, [Ruby] y en otros lenguajes. En CLU y C#, los generadores se llaman iteradores y en Ruby enumeradores.\n\n", "sections": [{"name": "Python", "text": "", "subsections": []}, {"name": "Ruby", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Genie_(lenguaje_de_programaci%C3%B3n)", "title": "Genie (lenguaje de programaci\u00f3n)", "summary": "Genie es un lenguaje de programaci\u00f3n de alto nivel, moderno, y de prop\u00f3sito general en desarrollo activo desde el a\u00f1o 2008.[1]\u200b Fue dise\u00f1ado como un dialecto  alternativo m\u00e1s simple y limpio para el compilador Vala, preservando al mismo tiempo la misma funcionalidad del lenguaje Vala. La sintaxis de Genie se deriva de numerosos lenguajes modernos como Python, Boo, D y Delphi.\n\nAl igual que Vala, Genie usa el sistema de tipos GObject para crear clases e interfaces declaradas en el c\u00f3digo fuente de Genie, sin imponer requisitos adicionales de tiempo de ejecuci\u00f3n (es decir, a diferencia de Python, Java o Mono, este no requiere una m\u00e1quina virtual).\n\nGenie permite el acceso a las bibliotecas de C, especialmente las basadas en GObject (como GTK+), sin necesidad de utilizar otro API. Durante la compilaci\u00f3n, el c\u00f3digo se traduce primero a c\u00f3digo fuente y cabeceras de C, que se compilan entonces al c\u00f3digo de m\u00e1quina con cualquier compilador C disponible como GCC, lo cual permite el desarrollo de software multi-plataforma.\n\nAunque tanto Vala como Genie son desarrollados y promovidos por el proyecto Gnome, los programas desarrollados en Genie no dependen del entorno de escritorio Gnome, y usualmente requieren solo de GLib.\n\n", "sections": [{"name": "Diferencias con Vala", "text": "", "subsections": []}, {"name": "Sangr\u00eda", "text": "", "subsections": []}, {"name": "Ejemplos de c\u00f3digo", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Gesti%C3%B3n_de_memoria", "title": "Gesti\u00f3n de memoria", "summary": "La gesti\u00f3n de memoria o administraci\u00f3n de memoria es el acto de gestionar la memoria de un dispositivo inform\u00e1tico. El proceso de asignaci\u00f3n de memoria a los programas que la solicitan.[1]\u200b \n\nLos sistemas de memoria virtual separan las direcciones de memoria utilizadas por un proceso de las direcciones f\u00edsicas reales, permitiendo la separaci\u00f3n de procesos e incrementando la cantidad efectiva de memoria de acceso aleatorio utilizando la paginaci\u00f3n. La calidad de la gesti\u00f3n de la memoria es crucial para las prestaciones del sistema.\n\nEl recolector de basura es la asignaci\u00f3n y liberaci\u00f3n autom\u00e1tica de los recursos de memoria para un programa. La implementaci\u00f3n suele ser a nivel del lenguaje de programaci\u00f3n en contraposici\u00f3n a la gesti\u00f3n manual de memoria, que asigna y libera los recursos de memoria de una computadora de forma expl\u00edcita.\n\nLa administraci\u00f3n de memoria se refiere a los distintos m\u00e9todos y operaciones que se encargan de obtener la m\u00e1xima utilidad de la memoria, organizando los procesos y programas que se ejecutan de manera tal que se aproveche de la mejor manera posible el espacio disponible.\n\nPara poder lograrlo, la operaci\u00f3n principal que realiza es trasladar la informaci\u00f3n que deber\u00e1 ser ejecutada por la unidad central de procesamiento o procesador, a la memoria principal. Actualmente esta administraci\u00f3n se conoce como memoria virtual, porque no es la memoria f\u00edsica del procesador sino una memoria virtual que la representa. Entre algunas ventajas, esta memoria permite que el sistema cuente con una memoria m\u00e1s extensa teniendo la misma memoria real, por lo que esta se puede utilizar de manera m\u00e1s eficiente. Y por supuesto, que los programas que son utilizados no ocupen lugar innecesario.\n\nLas t\u00e9cnicas que existen para la carga de programas en la memoria son: partici\u00f3n fija, que es la divisi\u00f3n de la memoria libre en varias partes (de igual o distinto tama\u00f1o) y la partici\u00f3n din\u00e1mica, que son las particiones de la memoria en tama\u00f1os que pueden ser variables, seg\u00fan la cantidad de memoria que necesita cada proceso.\n\nEntre las principales operaciones que desarrolla la administraci\u00f3n de memoria se encuentran la reubicaci\u00f3n, que consiste en trasladar procesos activos dentro y fuera de la memoria principal para maximizar la utilizaci\u00f3n del procesador; la protecci\u00f3n, mecanismos que protegen los procesos que se ejecutan de interferencias de otros procesos; uso compartido de c\u00f3digos y datos, con lo que el mecanismo de protecci\u00f3n permite que ciertos procesos de un mismo programa que comparten una tarea tengan memoria en com\u00fan.\n\n", "sections": [{"name": "Requisitos", "text": "", "subsections": []}, {"name": "Gesti\u00f3n de memoria en DOS", "text": "", "subsections": []}, {"name": "Notas y referencias", "text": "", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Go_(lenguaje_de_programaci%C3%B3n)", "title": "Go (lenguaje de programaci\u00f3n)", "summary": "\n[\n]\nGo es un lenguaje de programaci\u00f3n concurrente y compilado con tipado est\u00e1tico inspirado en la sintaxis de C, pero con seguridad de memoria y recolecci\u00f3n de basura. Ha sido desarrollado por Google[9]\u200b y sus dise\u00f1adores iniciales fueron Robert Griesemer, Rob Pike y Ken Thompson.[10]\u200b Actualmente est\u00e1 disponible en formato binario para los sistemas operativos Windows, GNU/Linux, FreeBSD  y Mac OS X, pudiendo tambi\u00e9n ser instalado en estos y en otros sistemas mediante el c\u00f3digo fuente.[11]\u200b[12]\u200b Go es un lenguaje de programaci\u00f3n compilado, concurrente, imperativo, estructurado y orientado a objetos que de momento est\u00e1 disponible para diferentes tipos de sistemas Unix-like, incluidos Linux, FreeBSD, Mac OS X y Plan 9 (puesto que parte del compilador est\u00e1 basado en un trabajo previo sobre el sistema operativo Inferno). Las arquitecturas soportadas son i386, amd64 y ARM.\n\n", "sections": [{"name": "Nombrado", "text": "", "subsections": []}, {"name": "Caracter\u00edsticas", "text": "", "subsections": []}, {"name": "Excepciones", "text": "", "subsections": []}, {"name": "Diferencias principales con C", "text": "", "subsections": []}, {"name": "Programaci\u00f3n orientada a objetos", "text": "", "subsections": []}, {"name": "Aplicaciones", "text": "", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Gr%C3%A1ficas_tortuga", "title": "Gr\u00e1ficas tortuga", "summary": "Gr\u00e1fica tortuga es un t\u00e9rmino usado en computaci\u00f3n gr\u00e1fica como m\u00e9todo para programar gr\u00e1ficos vectoriales usando un cursor (la \u00abtortuga\u00bb) relativo a unas coordenadas cartesianas. Las gr\u00e1ficas tortuga son un elemento clave en el Lenguaje de programaci\u00f3n Logo.\n\n", "sections": [{"name": "Resumen", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "Extensi\u00f3n a las tres dimensiones", "text": "", "subsections": []}, {"name": "Gr\u00e1fica tortuga programada en Python", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Groovy_(lenguaje_de_programaci%C3%B3n)", "title": "Groovy (lenguaje de programaci\u00f3n)", "summary": "\n\nGroovy es un lenguaje de programaci\u00f3n orientado a objetos implementado sobre la plataforma Java. Tiene caracter\u00edsticas similares a Python, Ruby, Perl y Smalltalk. La especificaci\u00f3n JSR 241 se encarga de su estandarizaci\u00f3n para una futura inclusi\u00f3n como componente oficial de la plataforma Java. \n\nGroovy usa una sintaxis muy parecida a Java, comparte el mismo modelo de objetos, de hilos y de seguridad. Desde Groovy se puede acceder directamente a todas las API existentes en Java. El bytecode generado en el proceso de compilaci\u00f3n es totalmente compatible con el generado por el lenguaje Java para la Java Virtual Machine (JVM), por tanto puede usarse directamente en cualquier aplicaci\u00f3n Java. Todo lo anterior unido a que la mayor parte de c\u00f3digo escrito en Java es totalmente v\u00e1lido en Groovy hacen que este lenguaje sea de muy f\u00e1cil adopci\u00f3n para programadores Java; la curva de aprendizaje se reduce mucho en comparaci\u00f3n con otros lenguajes que generan bytecode para la JVM, tales como Jython  o JRuby. Groovy puede usarse tambi\u00e9n de manera din\u00e1mica como un lenguaje de scripting. \n\nGroovy 1.0 apareci\u00f3 el 2 de enero de 2007. Despu\u00e9s de varias versiones beta y otras tantas candidatas a release, el 7 de diciembre de 2007 apareci\u00f3 la versi\u00f3n Groovy 1.1 que finalmente fue renombrada a Groovy 1.5 con el fin de notar la gran cantidad de cambios que ha sufrido con respecto a la versi\u00f3n 1.0. En diciembre de 2009 se public\u00f3 la versi\u00f3n 1.7.\n\n", "sections": [{"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Guido_van_Rossum", "title": "Guido van Rossum", "summary": "\n \n \n \n \n \nPythonABC \nGuido van Rossum (Haarlem, Pa\u00edses Bajos, 31 de enero de 1956) es un inform\u00e1tico,[1]\u200b conocido por ser el autor del lenguaje de programaci\u00f3n Python. Naci\u00f3 y creci\u00f3 en los Pa\u00edses Bajos.\n\nEs la primera persona en obtener el t\u00edtulo BDFL (Benevolent Dictator for Life), cuyo t\u00edtulo es otorgado a personajes importantes en el mundo del c\u00f3digo abierto, teniendo asignada la tarea de fijar las directrices sobre la evoluci\u00f3n de Python, as\u00ed como la de tomar decisiones finales sobre el lenguaje que todos los desarrolladores acatan. Van Rossum tiene fama de ser bastante conservador, realizando pocos cambios al lenguaje entre versiones sucesivas, intentando mantener siempre la compatibilidad con versiones anteriores. El 12 de julio de 2018, con un mensaje enviado a la lista de python-committers, anunci\u00f3 su retiro de los procesos de decisi\u00f3n.[2]\u200b\n\nEn el a\u00f1o 2001 recibi\u00f3 el FSF Award for the Advancement of Free Software como reconocimiento por su trabajo.[3]\u200b En diciembre de 2005 fue contratado como desarrollador por la empresa estadounidense Google. Despu\u00e9s de siete a\u00f1os en Google, a principios de diciembre de 2012, anuncia su retirada de la empresa norteamericana para incorporarse en enero de 2013 a la plantilla de la compa\u00f1\u00eda Dropbox.[4]\u200b Desde noviembre del 2020 es parte de la Divisi\u00f3n de Desarrolladores de la empresa Microsoft.\n\n", "sections": [{"name": "Biograf\u00eda", "text": "", "subsections": []}, {"name": "Trabajo", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Notas y referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Haskell", "title": "Haskell", "summary": "\nHaskell (pronunciado /\u02c8h\u00e6sk\u0259l/)[1]\u200b es un lenguaje de programaci\u00f3n estandarizado multi-prop\u00f3sito, funcionalmente puro, con evaluaci\u00f3n no estricta y memorizada, y fuerte tipificaci\u00f3n est\u00e1tica. Su nombre se debe al l\u00f3gico estadounidense Haskell Curry, debido a su aporte al c\u00e1lculo lambda, el cual tiene gran influencia en el lenguaje. En Haskell, \"una funci\u00f3n es un ciudadano de primera clase\" del lenguaje de programaci\u00f3n. Como lenguaje de programaci\u00f3n funcional, el constructor de controles primario es la funci\u00f3n. El lenguaje tiene sus or\u00edgenes en las observaciones de Haskell Curry y sus descendientes intelectuales.\n\nEn los a\u00f1os 1980 se constituy\u00f3 un comit\u00e9 cuyo objetivo era crear un lenguaje funcional que reuniera las caracter\u00edsticas de los m\u00faltiples lenguajes funcionales de la \u00e9poca, el m\u00e1s notable Miranda, y resolviera la confusi\u00f3n creada por la proliferaci\u00f3n de los mismos.\n\nEl lenguaje evoluciona r\u00e1pidamente y (ver m\u00e1s abajo) como los representantes actuales del est\u00e1ndar de facto. El \u00faltimo est\u00e1ndar oficial es: Haskell 2010, cuyas diferencias respecto al anterior est\u00e1ndar Haskell 98 son:\n\nNuevas caracter\u00edsticas del lenguaje:\n\n\nInterfaz de funciones for\u00e1neas (FFI), que permite usar c\u00f3digo C en un programa Haskell y c\u00f3digo Haskell en un programa C. Un ejemplo explicativo se puede encontrar aqu\u00ed\nNombres jer\u00e1rquicos para los m\u00f3dulos, por ejemplo Data.Bool.\nGuardianes con patrones.\n\nCaracter\u00edsticas eliminadas del lenguaje:\n\n\nSintaxis de patrones (n+k). Con lo cual, la siguiente definici\u00f3n de la funci\u00f3n factorial no es v\u00e1lida en Haskell 2010 y posteriores: fact (n+1) = (n+1) * fact n.\n\nLas caracter\u00edsticas m\u00e1s interesantes de Haskell incluyen el soporte para tipos de datos y funciones recursivas, listas, tuplas, guardas y encaje de patrones. La combinaci\u00f3n de las mismas pueden resultar en algunas funciones casi triviales cuya versi\u00f3n en lenguajes imperativos pueden llegar a resultar extremadamente tediosas de programar. Haskell es, desde 2002, uno de los lenguajes funcionales sobre los que m\u00e1s se ha investigado. Se han desarrollado muchas variantes:\n\nVersiones paralelas del MIT y Glasgow, ambas denominadas Parallel Haskell.\nM\u00e1s versiones paralelas y distribuidas de Haskell llamadas Distributed Haskell (anteriormente Goffin) y Eden.\nUna versi\u00f3n con ejecuci\u00f3n especulativa: Eager Haskell.\nVarias versiones orientadas a objetos: Haskell++, O'Haskell y Mondrian.\nUna versi\u00f3n educativa llamada Gofer desarrollada por Mark Jones que fue suplantada por Hugs (ver abajo).\nPara informaci\u00f3n m\u00e1s detallada, referirse al sitio oficial o a los enlaces al final de este art\u00edculo.\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Tipos simples predefinidos", "text": "", "subsections": []}, {"name": "Implementaciones", "text": "", "subsections": []}, {"name": "Entornos de desarrollo", "text": "", "subsections": []}, {"name": "Web Frameworks", "text": "", "subsections": []}, {"name": "Comunidad", "text": "", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Notas y referencias", "text": "", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Herencia_(inform%C3%A1tica)", "title": "Herencia (inform\u00e1tica)", "summary": "\n\nBusca fuentes: \u00abHerencia (inform\u00e1tica)\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nEn programaci\u00f3n orientada a objetos, la herencia es, despu\u00e9s de la agregaci\u00f3n o composici\u00f3n, el mecanismo m\u00e1s utilizado para alcanzar algunos de los objetivos m\u00e1s preciados en el desarrollo de software como lo son la reutilizaci\u00f3n y la extensibilidad. A trav\u00e9s de ella, los dise\u00f1adores pueden crear nuevas clases partiendo de una clase o de una jerarqu\u00eda de clases preexistente (ya comprobadas y verificadas) evitando con ello el redise\u00f1o, la modificaci\u00f3n y verificaci\u00f3n de la parte ya implementada. La herencia facilita la creaci\u00f3n de objetos a partir de otros ya existentes e implica que una subclase obtiene todo el comportamiento (m\u00e9todos) y finalmente los atributos (variables) de su superclase.\n\nEs la relaci\u00f3n entre una clase general y otra clase m\u00e1s espec\u00edfica.\nPor ejemplo: Si declaramos una clase p\u00e1rrafo derivada de una clase texto, todos los m\u00e9todos y variables asociadas con la clase texto, son autom\u00e1ticamente heredados por la subclase p\u00e1rrafo.\n\nLa herencia es uno de los mecanismos de los lenguajes de programaci\u00f3n orientada a objetos basados en clases, por medio del cual una clase se deriva de otra de manera que extiende su funcionalidad. La clase de la que se hereda se suele denominar clase base, clase padre, superclase, clase ancestro (el vocabulario que se utiliza suele depender en gran medida del lenguaje de programaci\u00f3n).\n\nEn los lenguajes que cuentan con un sistema de tipos fuerte y estrictamente restrictivo con el tipo de datos de las variables, la herencia suele ser un requisito fundamental para poder emplear el Polimorfismo, al igual que un mecanismo que permita decidir en tiempo de ejecuci\u00f3n qu\u00e9 m\u00e9todo debe invocarse en respuesta a la recepci\u00f3n de un mensaje, conocido como enlace tard\u00edo o enlace din\u00e1mico.\n\n", "sections": [{"name": "Ejemplo en Java", "text": "", "subsections": []}, {"name": "Clase Abstracta", "text": "", "subsections": []}, {"name": "Herencia y ocultaci\u00f3n de informaci\u00f3n", "text": "", "subsections": []}, {"name": "Redefinici\u00f3n de m\u00e9todos", "text": "", "subsections": []}, {"name": "Ventajas", "text": "", "subsections": []}, {"name": "Desventajas", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Herencia_m%C3%BAltiple", "title": "Herencia m\u00faltiple", "summary": "Herencia m\u00faltiple hace referencia a la caracter\u00edstica de los lenguajes de programaci\u00f3n orientada a objetos en la que una clase puede heredar comportamientos y caracter\u00edsticas de m\u00e1s de una superclase. Esto contrasta con la herencia simple, donde una clase solo puede heredar de una superclase.\n\nAlgunos lenguajes que soportan herencia m\u00faltiple en su mayor parte son: C++, Centura SQL Windows, CLOS, Eiffel, Object REXX, Perl y Python.\n\nLa herencia m\u00faltiple permite a una clase tomar funcionalidades de otras clases, como permitir a una clase llamada MusicoEstudiante heredar de una clase llamada Persona, una clase llamada M\u00fasico, y una clase llamada Trabajador. Esto puede ser abreviado como MusicoEstudiante\u00a0: Persona, M\u00fasico, Trabajador.\n\n", "sections": [{"name": "Ambig\u00fcedades", "text": "", "subsections": []}, {"name": "Debate", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Historia_de_Python", "title": "Historia de Python", "summary": "Art\u00edculo principal:\nPython es uno de los lenguajes de programaci\u00f3n din\u00e1micos m\u00e1s populares que existen entre los que se encuentran Java, JavaScript, Go y C#. Aunque es considerado a menudo como un lenguaje \"scripting\", es realmente un lenguaje de prop\u00f3sito general. En la actualidad, Python es usado para todo, desde simples \"scripts\", hasta grandes servidores web que proveen servicio ininterrumpido 24\u00d77. Es utilizado para la programaci\u00f3n de interfaces gr\u00e1ficas y bases de datos, programaci\u00f3n web tanto en el cliente como en el servidor (v\u00e9ase Django o Flask) y \"testing\" de aplicaciones. Adem\u00e1s tiene una amplia aceptaci\u00f3n por cient\u00edficos que hacen aplicaciones para las supercomputadores m\u00e1s r\u00e1pidas del mundo y por los ni\u00f1os que reci\u00e9n est\u00e1n comenzando a programar.\n\nLa historia del lenguaje de programaci\u00f3n Python se remonta hacia finales de los 80s y principio de los 90s,[1]\u200b su implementaci\u00f3n comenz\u00f3 en diciembre de 1989[2]\u200b cuando en Navidad Guido van Rossum que trabajaba en el (CWI) (un centro de investigaci\u00f3n holand\u00e9s de car\u00e1cter oficial que, entre otras cosas, actualmente alberga la oficina central del W3C) decidi\u00f3 empezar el proyecto como un pasatiempo d\u00e1ndole continuidad al lenguaje de programaci\u00f3n ABC del que hab\u00eda formado parte del equipo de desarrollo en el CWI,[3]\u200b dicho lenguaje se enfocaba en ser f\u00e1cil de usar y aprender manteniendo potencia en su desempe\u00f1o pero el hardware disponible en la \u00e9poca de su creaci\u00f3n hac\u00eda dif\u00edcil su uso y el proyecto no trascendi\u00f3 como se esperaba. Van Rossum es por tanto el autor principal de Python y contin\u00faa ejerciendo un rol central decidiendo la direcci\u00f3n del lenguaje, en la comunidad de Python se le conoce como Benevolente Dictador Vitalicio (en ingl\u00e9s: Benevolent Dictator for Life, BDFL). El nombre \"Python\" viene dado por la afici\u00f3n de Van Rossum al grupo Monty Python.\n\nEl lenguaje de programaci\u00f3n Python fue originalmente desarrollado para el sistema operativo Amoeba.\n\n", "sections": [{"name": "Principales influencias de otros lenguajes", "text": "", "subsections": []}, {"name": "Cronolog\u00eda de Python", "text": "", "subsections": []}, {"name": "Primera publicaci\u00f3n", "text": "", "subsections": []}, {"name": "Versi\u00f3n 1.0", "text": "", "subsections": []}, {"name": "Versi\u00f3n 2.0", "text": "", "subsections": []}, {"name": "Versi\u00f3n 3.0", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Holand%C3%A9s", "title": "Holand\u00e9s", "summary": "\nEl t\u00e9rmino holand\u00e9s puede referirse a:\n\nEl natural de Holanda, o lo perteneciente o relativo a esta regi\u00f3n de los Pa\u00edses Bajos.\nEl dialecto holand\u00e9s hablado all\u00ed.\nAdem\u00e1s, es muy frecuente usarlo para referirse a: \n\nEl natural de Pa\u00edses Bajos (Nederland), o lo perteneciente o relativo a este Estado europeo.\nEl idioma neerland\u00e9s, la lengua oficial de dicho Estado.\nEl pueblo neerland\u00e9s, la poblaci\u00f3n nativa del mismo.", "sections": []}
{"url": "https://es.wikipedia.org/wiki/Huevo_de_pascua_(virtual)", "title": "Huevo de pascua (virtual)", "summary": "Un huevo de Pascua o huevo pascual[1]\u200b (en ingl\u00e9s Easter egg) es un mensaje o capacidad oculta contenido en pel\u00edculas, series de televisi\u00f3n, discos compactos, DVD, Blu-ray, programas inform\u00e1ticos o videojuegos.\nEntre los programadores, parece haber una motivaci\u00f3n en dejar una marca personal, casi un toque art\u00edstico sobre un producto intelectual, el cual es por naturaleza est\u00e1ndar y funcional.\nActualmente, los huevos de Pascua tratan de entretener, buscar nuevos trabajos potenciales, pagar tributo a los ejecutivos o divertir a los programadores.[2]\u200b\n\n", "sections": [{"name": "Origen", "text": "", "subsections": []}, {"name": "En videojuegos", "text": "", "subsections": []}, {"name": "Computaci\u00f3n", "text": "", "subsections": []}, {"name": "Tesla", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Humorista", "title": "Humorista", "summary": "\nPor favor, ed\u00edtalo y/o discute los problemas en la discusi\u00f3n para mejorarlo:\nNecesita ser wikificado conforme a las convenciones de estilo de Wikipedia.\nSu redacci\u00f3n mantiene un punto de vista regional. Por favor, ampl\u00edalo para que cubra el tema desde una perspectiva global.\nUn humorista,  es una persona que en sus obras \u2014literarias o pl\u00e1sticas\u2014, o en sus actuaciones en espect\u00e1culos p\u00fablicos, cultiva el humor.[1]\u200b Puede ser una persona que se dedique profesionalmente a la producci\u00f3n de obras escritas o gr\u00e1ficas, o a hacer intervenciones p\u00fablicas con fines humor\u00edsticos. Un humorista no es un c\u00f3mico, a pesar de que hay casos en que se pueden combinar ambas profesiones. Tambi\u00e9n son frecuentes los ejemplos de producciones humor\u00edsticas parciales entre otras actividades de car\u00e1cter general referidas a una misma persona.\n\n", "sections": [{"name": "Humorismo literario", "text": "", "subsections": []}, {"name": "Lista gen\u00e9rica de humoristas notables", "text": "", "subsections": []}, {"name": "Humorismo gr\u00e1fico", "text": "", "subsections": []}, {"name": "Humorismo cinematogr\u00e1fico", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/IDLE", "title": "IDLE", "summary": "\nIDLE (abreviatura de Integrated Development and Learning Environment, en espa\u00f1ol: \u00abEntorno de desarrollo y aprendizaje integrado\u00bb)[1]\u200b es un entorno de desarrollo integrado para Python, que se incluye con la implementaci\u00f3n predeterminada del lenguaje desde la versi\u00f3n 1.5.2b1.[2]\u200b Est\u00e1 empaquetado como una parte opcional del paquete de Python con muchas distribuciones de Linux.\n\nIDLE est\u00e1 destinado a ser un entorno de desarrollo integrado simple y enfocado para su uso por parte de usuarios principiantes, especialmente en un entorno educativo. Con ese fin, es multiplataforma y evita la sobrecarga de funcionalidades.\n\nSeg\u00fan el archivo README incluido, sus principales caracter\u00edsticas son:\n\nEditor de texto de m\u00faltiples ventanas con resaltado de sintaxis, autocompletado, sangr\u00eda inteligente y otros.\nInt\u00e9rprete de Python con resaltado de sintaxis.\nDepurador integrado con pasos, breakpoints persistentes y visualizaci\u00f3n de espacios de nombres locales y globales.[3]\u200b\nEl autor, Guido van Rossum, explic\u00f3 que IDLE significa \"Integrated DeveLopment Environment\",[4]\u200b y dado que van Rossum nombr\u00f3 al lenguaje Python en honor al grupo de comedia brit\u00e1nico Monty Python, el nombre IDLE probablemente tambi\u00e9n fue elegido para honrar a Eric Idle, uno de los miembros fundadores de Monty Python.[5]\u200b[6]\u200b\n\n", "sections": [{"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/IPython", "title": "IPython", "summary": "\n\nPythonJavaScriptC\nIPython es un shell interactivo que a\u00f1ade funcionalidades extra al modo interactivo incluido con Python, como resaltado de l\u00edneas y errores mediante colores, una sintaxis adicional para el shell, autocompletado mediante tabulador de variables, m\u00f3dulos y atributos; entre otras funcionalidades. Es un componente del paquete SciPy.\n\n", "sections": [{"name": "Computaci\u00f3n en paralelo Parallel computing", "text": "", "subsections": []}, {"name": "Notebook", "text": "", "subsections": []}, {"name": "Proyecto Jupyter", "text": "", "subsections": []}, {"name": "Otras caracter\u00edsticas", "text": "", "subsections": []}, {"name": "En los medios de comunicaci\u00f3n", "text": "", "subsections": []}, {"name": "Fin de la compatibilidad con Python 2", "text": "", "subsections": []}, {"name": "Proyecto Jupyter", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces de inter\u00e9s", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/ISBN", "title": "ISBN", "summary": "El ISBN (por las siglas en ingl\u00e9s de International Standard Book Number, en espa\u00f1ol \u00abc\u00f3digo Internacional normalizado para libros\u00bb)[1]\u200b es un identificador \u00fanico para libros.[Nota 1]\u200b Mediante este sistema, a cada libro se le asigna una cadena num\u00e9rica \u00fanica internacional que sirve para identificar datos b\u00e1sicos del objeto tales como t\u00edtulo, editorial, tirada, extensi\u00f3n, materia, pa\u00eds, traductor, lengua original, etc. No debe confundirse con el ISSN (International Standard Serial Number, en espa\u00f1ol \u00abn\u00famero internacional normalizado de publicaciones peri\u00f3dicas\u00bb),[2]\u200b que corresponde al de las publicaciones peri\u00f3dicas, como revistas y diarios.\n\n", "sections": [{"name": "Descripci\u00f3n", "text": "", "subsections": []}, {"name": "Sistemas similares", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Notas", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Icon", "title": "Icon", "summary": "Icon es un lenguaje de programaci\u00f3n de muy alto nivel, especialmente recomendado para trabajar con cadenas de texto, ya que permite una programaci\u00f3n r\u00e1pida y concisa. Puede ser usado para an\u00e1lisis y formateo de textos, inteligencia artificial o programaci\u00f3n de prototipos. Las \u00faltimas versiones, adem\u00e1s, incluyen gr\u00e1ficos y facilidades GUI. Fue dise\u00f1ado en los a\u00f1os 1970 por Ralph E. Griswold, y otros colaboradores en el \"Department of Computer Science\" de la Universidad de Arizona. Griswold, que lideraba el proyecto, ya ten\u00eda experiencia anterior en el dise\u00f1o de lenguajes de alto nivel, ya que fue uno de los creadores de Snobol, del que tomaron algunas caracter\u00edsticas.\n\n", "sections": [{"name": "Sintaxis b\u00e1sica", "text": "", "subsections": []}, {"name": "Evaluaci\u00f3n de expresiones", "text": "", "subsections": []}, {"name": "Generadores", "text": "", "subsections": []}, {"name": "Exploraci\u00f3n de cadenas", "text": "", "subsections": []}, {"name": "Estructuras", "text": "", "subsections": []}, {"name": "Facilidades gr\u00e1ficas", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Int%C3%A9rprete_(inform%C3%A1tica)", "title": "Int\u00e9rprete (inform\u00e1tica)", "summary": "En ciencias de la computaci\u00f3n, int\u00e9rprete o interpretador es un programa inform\u00e1tico capaz de analizar y ejecutar otros programas. Los int\u00e9rpretes se diferencian de los compiladores o de los ensambladores en que mientras estos traducen un programa desde su descripci\u00f3n en un lenguaje de programaci\u00f3n al c\u00f3digo de m\u00e1quina del sistema, los int\u00e9rpretes solo realizan la traducci\u00f3n a medida que sea necesaria, t\u00edpicamente, instrucci\u00f3n por instrucci\u00f3n, y normalmente no guardan el resultado de dicha traducci\u00f3n.\n\nUsando un int\u00e9rprete, un solo archivo fuente puede producir resultados iguales incluso en sistemas sumamente diferentes (ejemplo. una PC y una PlayStation 4). Usando un compilador, un solo archivo fuente puede producir resultados iguales solo si es compilado a distintos ejecutables espec\u00edficos a cada sistema.\n\nLos programas interpretados suelen ser m\u00e1s lentos que los compilados debido a la necesidad de traducir el programa mientras se ejecuta, pero a cambio son m\u00e1s flexibles como entornos de programaci\u00f3n y depuraci\u00f3n (lo que se traduce, por ejemplo, en una mayor facilidad para reemplazar partes enteras del programa o a\u00f1adir m\u00f3dulos completamente nuevos), y permiten ofrecer al programa interpretado un entorno no dependiente de la m\u00e1quina donde se ejecuta el int\u00e9rprete, sino del propio int\u00e9rprete (lo que se conoce com\u00fanmente como m\u00e1quina virtual).\n\nPara mejorar el desempe\u00f1o, algunas implementaciones de algunos lenguajes de programaci\u00f3n pueden interpretar o compilar el c\u00f3digo fuente original en una forma intermedia  m\u00e1s compacta, y despu\u00e9s traducir eso al c\u00f3digo de m\u00e1quina (ej. Perl, Python, MATLAB, y Ruby). Algunos aceptan los archivos fuente guardados en esta representaci\u00f3n intermedia (ej. Python, UCSD Pascal y Java).\n\nEn la actualidad, uno de los entornos m\u00e1s comunes de uso de los int\u00e9rpretes es en los navegadores web, debido a la posibilidad que estos tienen de ejecutarse independientemente de la plataforma.\n\n", "sections": [{"name": "Int\u00e9rpretes de bytecode", "text": "", "subsections": []}, {"name": "Eficiencia", "text": "", "subsections": []}, {"name": "Interpretadores de \u00e1rbol de sintaxis abstracta", "text": "", "subsections": []}, {"name": "Compilaci\u00f3n justo a tiempo", "text": "", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": []}, {"name": "Lenguaje interpretado", "text": "", "subsections": []}, {"name": "Notas y referencias", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Int%C3%A9rprete_de_comandos", "title": "Int\u00e9rprete de comandos", "summary": "\nPara m\u00e1s informaci\u00f3n, v\u00e9ase la discusi\u00f3n.\nUn int\u00e9rprete de \u00f3rdenes o de comandos es un programa inform\u00e1tico que tiene la capacidad de traducir las \u00f3rdenes que introducen los usuarios, mediante un conjunto de instrucciones facilitadas por \u00e9l mismo directamente al n\u00facleo y al conjunto de herramientas que forman el sistema operativo.[1]\u200b Las \u00f3rdenes se introducen siguiendo la sintaxis incorporada por dicho int\u00e9rprete, dentro del entorno proporcionado por el emulador de terminal, mediante un inductor que espera a que le sean introducidos los comandos o instrucciones PROMPT>nombrecomando argumento/s /ruta/hacia/el/o/los/ficheros\n\nAl ingresar la orden con la tecla 'Intro', el int\u00e9rprete analiza la secuencia de caracteres ingresada y, si la sintaxis de la orden es correcta, la ejecuta, recurriendo para ello a las funciones que ofrece el sistema operativo o el programa que representa, bien sea un gestor de datos de banco, una sesi\u00f3n de FTP, de ssh, etc. La respuesta al usuario se representa en el monitor o en forma de segundo plano. Se trabaja de manera interactiva, es decir, usuario y m\u00e1quina se comunican de forma sucesiva.[2]\u200b\n\nIncorporan caracter\u00edsticas tales como control de procesos, redirecci\u00f3n de entrada/salida, listado y lectura de ficheros, protecci\u00f3n, comunicaciones y un lenguaje de \u00f3rdenes para escribir programas por lotes o (scripts o guiones). Uno de los int\u00e9rpretes m\u00e1s conocidos, es el Bourne Shell, el cual fue el int\u00e9rprete usado en las primeras versiones de Unix y se convirti\u00f3 en un est\u00e1ndar de facto.[3]\u200b\n\n", "sections": [{"name": "Interfaz de l\u00ednea de comandos", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "Funcionamiento", "text": "", "subsections": []}, {"name": "Implementaciones", "text": "", "subsections": []}, {"name": "Est\u00e1ndar de invocaci\u00f3n", "text": "", "subsections": []}, {"name": "Ejemplos de interacci\u00f3n", "text": "", "subsections": []}, {"name": "Interfaz textual de usuario", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Inteligencia_artificial", "title": "Inteligencia artificial", "summary": "\n\nLa inteligencia artificial  (IA), en el contexto de las ciencias de la computaci\u00f3n, es una disciplina y un conjunto de capacidades cognoscitivas e intelectuales expresadas por sistemas inform\u00e1ticos o combinaciones de algoritmos cuyo prop\u00f3sito es la creaci\u00f3n de m\u00e1quinas que imiten la inteligencia humana para realizar tareas, y que pueden mejorar conforme recopilen informaci\u00f3n.[1]\u200b[2]\u200b Se hizo presente poco despu\u00e9s de la Segunda Guerra Mundial con el desarrollo de la \u00abprueba de Turing\u00bb, mientras que la locuci\u00f3n fue acu\u00f1ada en 1956 por el inform\u00e1tico John McCarthy en la Conferencia de Dartmouth.\n\nEn la actualidad, la inteligencia artificial abarca una gran variedad de subcampos. \u00c9stos van desde \u00e1reas de prop\u00f3sito general, aprendizaje y percepci\u00f3n, a otras m\u00e1s espec\u00edficas como el Reconocimiento de voz, el juego de ajedrez, la demostraci\u00f3n de teoremas matem\u00e1ticos, la escritura de poes\u00eda y el diagn\u00f3stico de enfermedades. La inteligencia artificial sintetiza y automatiza tareas que en principio son intelectuales y, por lo tanto, es potencialmente relevante para cualquier \u00e1mbito de actividades intelectuales humanas. En este sentido, es un campo genuinamente universal.[3]\u200b\n\nLa arquitectura de las inteligencias artificiales y los procesos por los cuales aprenden, se mejoran y se implementan en alg\u00fan \u00e1rea de inter\u00e9s var\u00eda seg\u00fan el enfoque de utilidad que se les quiera dar, pero de manera general, estos van desde la ejecuci\u00f3n de sencillos algoritmos hasta la interconexi\u00f3n de complejas redes neuronales artificiales que intentan replicar los circuitos neuronales del cerebro humano y que aprenden mediante diferentes modelos de aprendizaje tales como el aprendizaje autom\u00e1tico, el aprendizaje por refuerzo, el aprendizaje profundo y el aprendizaje supervisado.[4]\u200b\n\nPor otro lado, el desarrollo y aplicaci\u00f3n de la inteligencia artificial en muchos aspectos de la vida cotidiana tambi\u00e9n ha propiciado la creaci\u00f3n de nuevos campos de estudio como la robo\u00e9tica y la \u00e9tica de las m\u00e1quinas que abordan aspectos relacionados con la \u00e9tica en la inteligencia artificial y que se encargan de analizar c\u00f3mo los avances en este tipo de tecnolog\u00edas impactar\u00edan en diversos \u00e1mbitos de la vida, as\u00ed como el manejo responsable y \u00e9tico que se les deber\u00eda dar a los mismos, adem\u00e1s de establecer cu\u00e1l deber\u00eda ser la manera correcta de proceder de las m\u00e1quinas y las reglas que deber\u00edan cumplir.[5]\u200b\n\nEn cuanto a su clasificaci\u00f3n, tradicionalmente se divide a la inteligencia artificial en inteligencia artificial d\u00e9bil, la cual es la \u00fanica que existe en la actualidad y que se ocupa de realizar tareas espec\u00edficas, e inteligencia artificial general, que ser\u00eda una IA que excediese las capacidades humanas. Algunos expertos creen que si alguna vez se alcanza este nivel, se podr\u00eda dar lugar a la aparici\u00f3n de una singularidad tecnol\u00f3gica, es decir, una entidad tecnol\u00f3gica superior que se mejorar\u00eda a s\u00ed misma constantemente, volvi\u00e9ndose incontrolable para los humanos, dando pie a teor\u00edas como el basilisco de Roko.[6]\u200b\n\nAlgunas de las inteligencias artificiales m\u00e1s conocidas y utilizadas en la actualidad alrededor del mundo incluyen inteligencia artificial en el campo de la salud, asistentes virtuales como Alexa, el asistente de Google o Siri, traductores autom\u00e1ticos como el traductor de Google y DeepL, sistemas de recomendaci\u00f3n como el de la plataforma digital de YouTube, motores de ajedrez y otros juegos como Stockfish y AlphaZero, chatbots como ChatGPT, creadores de arte de inteligencia artificial como Midjourney, Dall-e, Leonardo y Stable Diffusion, e incluso la conducci\u00f3n de veh\u00edculos aut\u00f3nomos como Tesla Autopilot.[7]\u200b\n\nAsimismo la inteligencia artificial se est\u00e1 desarrollando en la plataforma digital cada vez m\u00e1s, evolucionando y creando nuevas herramientas, como la plataforma laboral que existe desde el a\u00f1o 2023 llamada SIVIUM, una herramienta por la cual una persona postula en forma automatizada a todas las ofertas laborales de todos los portales de trabajo, sin necesidad de estar revisando cada oferta laboral que se presente y enviar su CV uno por uno.\n\n", "sections": [{"name": "Denominaci\u00f3n", "text": "", "subsections": []}, {"name": "Tipos", "text": "", "subsections": []}, {"name": "Escuelas de pensamiento", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "Implicaciones sociales, \u00e9ticas y filos\u00f3ficas", "text": "", "subsections": []}, {"name": "Regulaci\u00f3n", "text": "", "subsections": []}, {"name": "Objetivos", "text": "", "subsections": []}, {"name": "Importancia de la inteligencia artificial", "text": "", "subsections": []}, {"name": "Controversias", "text": "", "subsections": []}, {"name": "Cr\u00edticas", "text": "", "subsections": []}, {"name": "Normativa para su uso en el entorno educativo", "text": "", "subsections": []}, {"name": "Aprendizaje automatizado y aprendizaje profundo", "text": "", "subsections": []}, {"name": "Propiedad intelectual de la inteligencia artificial", "text": "", "subsections": []}, {"name": "En la cultura popular", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Intersecci%C3%B3n_de_conjuntos", "title": "Intersecci\u00f3n de conjuntos", "summary": "A\nB\nA \u2229 B\nEn teor\u00eda de conjuntos, la intersecci\u00f3n de dos (o m\u00e1s) conjuntos es una operaci\u00f3n que resulta en otro conjunto que contiene los elementos comunes a los conjuntos partida. Por ejemplo, dado el conjunto de los n\u00fameros pares P y el conjunto de los cuadrados C de n\u00fameros naturales, su intersecci\u00f3n es el conjunto de los cuadrados pares.\n\n\n\n\n\nP\n=\n{\n2\n,\n4\n,\n6\n,\n8\n,\n10\n,\n\u2026\n}\n\n\n{\\displaystyle P=\\{2,4,6,8,10,\\ldots \\}}\n\n\n\n\n\n\nC\n=\n{\n1\n,\n4\n,\n9\n,\n16\n,\n25\n,\n\u2026\n}\n\n\n{\\displaystyle C=\\{1,4,9,16,25,\\ldots \\}}\n\n\n\n\n\n\nD\n=\n{\n4\n,\n16\n,\n36\n,\n64\n,\n\u2026\n}\n\n\n{\\displaystyle D=\\{4,16,36,64,\\ldots \\}}\n\n\nEn otras palabras: C\u00f3mo, por ejemplo, si A = { a, b, c, d, e, f} y B = { a, e, i, o, u}, entonces la intersecci\u00f3n de dichos conjuntos estar\u00e1 formada por todos los elementos que est\u00e9n a la vez en los dos conjuntos, esto es: A\u2229B = { a, e} \n\nLa intersecci\u00f3n de conjuntos se denota por el s\u00edmbolo \u2229 por lo que D = P \u2229 C.\n\n", "sections": [{"name": "Definici\u00f3n", "text": "", "subsections": []}, {"name": "Propiedades", "text": "", "subsections": []}, {"name": "Teor\u00eda axiom\u00e1tica", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Literatura del tema", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/IronPython", "title": "IronPython", "summary": "\n\nIronPython es una implementaci\u00f3n del int\u00e9rprete Python (CPython) escrita totalmente en C#. El proyecto trata de seguir al pie de la letra el lenguaje Python, como implementaci\u00f3n de Python que es. Esto hace que cualquier programa escrito en Python pueda ser interpretado con IronPython, con las ventajas a\u00f1adidas de poder usar las bibliotecas de la plataforma .NET y poder compilar el c\u00f3digo a bytecode\n\nExiste un lenguaje de programaci\u00f3n muy similar a Python llamado Boo. Es un lenguaje claramente influenciado por Python dada la similitud de su sintaxis. Sin embargo, Boo no es realmente una implementaci\u00f3n de Python, sino un nuevo lenguaje independiente con una sintaxis muy parecida a la de Python pero que hace uso de las API de .NET. Por tanto, los programas escritos en Python no se pueden ejecutar con el int\u00e9rprete de Boo, mientras que IronPython est\u00e1 creado precisamente para ello.\n\n", "sections": [{"name": "Caracter\u00edsticas de IronPython", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/JavaScript", "title": "JavaScript", "summary": "\nPor favor, ed\u00edtalo y/o discute los problemas en la discusi\u00f3n para mejorarlo:\nNecesita referencias adicionales para su verificaci\u00f3n.\nLas referencias no son claras o tienen un formato incorrecto.\n\n\n[\n]\nJavaScript (abreviado com\u00fanmente JS) es un lenguaje de programaci\u00f3n interpretado, dialecto del est\u00e1ndar ECMAScript. Se define como orientado a objetos,[2]\u200b basado en prototipos, imperativo, d\u00e9bilmente tipado y din\u00e1mico.\n\nSe utiliza principalmente del lado del cliente, implementado como parte de un navegador web permitiendo mejoras en la interfaz de usuario y p\u00e1ginas web din\u00e1micas[3]\u200b y JavaScript del lado del servidor (Server-side JavaScript o SSJS). Su uso en aplicaciones externas a la web, por ejemplo en documentos PDF, aplicaciones de escritorio (mayoritariamente widgets) es tambi\u00e9n significativo.\n\nDesde 2012, todos los navegadores modernos soportan completamente ECMAScript 5.1, una versi\u00f3n de JavaScript. Los navegadores m\u00e1s antiguos soportan por lo menos ECMAScript 3. La sexta edici\u00f3n se liber\u00f3 en julio de 2015.[4]\u200b\n\nJavaScript se dise\u00f1\u00f3 con una sintaxis similar a C++ y Java,[5]\u200b[6]\u200b aunque adopta nombres y convenciones del lenguaje de programaci\u00f3n Java. Sin embargo, Java y JavaScript tienen sem\u00e1nticas y prop\u00f3sitos diferentes. Su relaci\u00f3n es puramente comercial, tras la compra del creador de Java (Sun Microsystems) de Netscape Navigator (creador de LiveScript) y el cambio de nombre del lenguaje de programaci\u00f3n.\n\nTodos los navegadores modernos interpretan el c\u00f3digo JavaScript integrado en las p\u00e1ginas web. Para interactuar con una p\u00e1gina web se provee al lenguaje JavaScript de una implementaci\u00f3n del Document Object Model (DOM). Javascript es el \u00fanico lenguaje de programaci\u00f3n que entienden de forma nativa los navegadores.\n\nTradicionalmente se ven\u00eda utilizando en p\u00e1ginas web HTML para realizar operaciones y \u00fanicamente en el marco de la aplicaci\u00f3n cliente, sin acceso a funciones del servidor. Actualmente es ampliamente utilizado para enviar y recibir informaci\u00f3n del servidor junto con ayuda de otras tecnolog\u00edas como AJAX. JavaScript se interpreta en el agente de usuario al mismo tiempo que las sentencias van descarg\u00e1ndose junto con el c\u00f3digo HTML.\n\nDesde el lanzamiento en junio de 1997 del est\u00e1ndar ECMAScript 1, han existido las versiones 2, 3 y 5, que es la m\u00e1s usada actualmente (la 4 se abandon\u00f3[7]\u200b). En junio de 2015 se cerr\u00f3 y public\u00f3 la versi\u00f3n ECMAScript 6.[8]\u200b\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Caracter\u00edsticas", "text": "", "subsections": []}, {"name": "Sintaxis y sem\u00e1ntica", "text": "", "subsections": []}, {"name": "Uso en p\u00e1ginas web", "text": "", "subsections": []}, {"name": "Seguridad", "text": "", "subsections": []}, {"name": "Herramientas de desarrollo", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Java_(lenguaje_de_programaci%C3%B3n)", "title": "Java (lenguaje de programaci\u00f3n)", "summary": "\nPor favor, ed\u00edtalo y/o discute los problemas en la discusi\u00f3n para mejorarlo:\nNecesita referencias adicionales para su verificaci\u00f3n.\nLas referencias no son claras o tienen un formato incorrecto.\nPodr\u00eda ser dif\u00edcil de entender para lectores interesados en el tema.\n\n\n[\n]\nJava es un lenguaje de programaci\u00f3n y una plataforma inform\u00e1tica que fue comercializada por primera vez en 1995 por Sun Microsystems.[2]\u200b[3]\u200b\n\nEl lenguaje de programaci\u00f3n Java fue desarrollado originalmente por James Gosling, de Sun Microsystems (constituida en 1983 y posteriormente adquirida el 27 de enero de 2010 por la compa\u00f1\u00eda Oracle),[4]\u200b y publicado en 1995 como un componente fundamental de la plataforma Java de Sun Microsystems. Su sintaxis deriva en gran medida de C y C++, pero tiene menos utilidades de bajo nivel que cualquiera de ellos. Las aplicaciones de Java son compiladas a bytecode (clase Java), que puede ejecutarse en cualquier m\u00e1quina virtual Java (JVM) sin importar la arquitectura de la computadora subyacente.\n\nLa compa\u00f1\u00eda Sun desarroll\u00f3 la implementaci\u00f3n de referencia original para los compiladores de Java, m\u00e1quinas virtuales y librer\u00edas de clases en 1991, y las public\u00f3 por primera vez en 1995. A partir de mayo de 2007, en cumplimiento de las especificaciones del Proceso de la Comunidad Java, Sun volvi\u00f3 a licenciar la mayor\u00eda de sus tecnolog\u00edas de Java bajo la Licencia P\u00fablica General de GNU. Otros han desarrollado tambi\u00e9n implementaciones alternas a estas tecnolog\u00edas de Sun, tales como el Compilador de Java de GNU y el GNU Classpath.\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Filosof\u00eda", "text": "", "subsections": []}, {"name": "Sintaxis", "text": "", "subsections": []}, {"name": "Entornos de funcionamiento", "text": "", "subsections": []}, {"name": "Programaci\u00f3n", "text": "", "subsections": []}, {"name": "Industria relacionada", "text": "", "subsections": []}, {"name": "Cr\u00edticas", "text": "", "subsections": []}, {"name": "Recursos", "text": "", "subsections": []}, {"name": "Java en c\u00f3digo abierto", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Jython", "title": "Jython", "summary": " Jython (Python en Java) es un lenguaje de programaci\u00f3n de alto nivel, din\u00e1mico y orientado a objetos basado en Python e implementado \u00edntegramente en Java. Es el sucesor de JPython. Jython al igual que Python es un proyecto de software libre. El lenguaje de programaci\u00f3n Jython es pr\u00e1cticamente id\u00e9ntico a la versi\u00f3n 2.5[1]\u200b de Python.\n\n", "sections": [{"name": "Ejecuci\u00f3n", "text": "", "subsections": []}, {"name": "Lenguaje din\u00e1mico", "text": "", "subsections": []}, {"name": "Variables", "text": "", "subsections": []}, {"name": "Utilizando Java en Jython", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/LAMP", "title": "LAMP", "summary": "LAMP es el acr\u00f3nimo usado para describir un sistema de infraestructura de internet que usa las siguientes herramientas:[1]\u200b[2]\u200b\n\nLinux, el sistema operativo; En algunos casos tambi\u00e9n se refiere a LDAP.\nApache, el servidor web;\nMySQL/MariaDB, el gestor de bases de datos;\nPHP, el lenguaje de programaci\u00f3n.\nLa combinaci\u00f3n de estas tecnolog\u00edas es usada principalmente para definir la infraestructura de un servidor web, utilizando un paradigma de programaci\u00f3n para el desarrollo del sistema .\n\nA pesar de que el origen de estos programas de c\u00f3digo abierto no fue espec\u00edficamente dise\u00f1ado para trabajar entre s\u00ed, la combinaci\u00f3n se populariz\u00f3 debido a su bajo coste de adquisici\u00f3n y ubicuidad de sus componentes (ya que vienen pre-instalados en la mayor\u00eda de las distribuciones linux). Cuando son combinados, representan un conjunto de soluciones que proporcionan servidores de aplicaciones.\n\nEl t\u00e9rmino fue ampliamente promocionado por el editor de la editorial O'Reilly, Dale Dougherty, a sugerencia de David Axmark y Monty Widenius, desarrolladores de MySQL, debido a que fue la tecnolog\u00eda que se utiliz\u00f3 en Yahoo como propuesta de la Universidad Tecnol\u00f3gica de Nezahualc\u00f3yotl, M\u00e9xico para ser utilizada en la Copa del Mundo de 1994 por el Profesor Luis Manuel Mart\u00ednez Ram\u00edrez y que aun es la Base de las Tecnolog\u00edas de las Actuales Redes Sociales m\u00e1s utilizadas en el Mundo; la influencia de dicha editorial en el mundo del software libre hizo que el acr\u00f3nimo se popularizara r\u00e1pidamente en todo el mundo.\n\n", "sections": [{"name": "Software", "text": "", "subsections": []}, {"name": "Variantes y alternativas", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Latino_(Lenguaje_de_Programaci%C3%B3n)", "title": "Latino (lenguaje de programaci\u00f3n)", "summary": "\n[\n]\n\nLatino es un lenguaje de programaci\u00f3n procedural con sintaxis en espa\u00f1ol de c\u00f3digo abierto desarrollado en C, inspirado en Lua y Python.\n\nEste lenguaje fue creado por Primitivo Roman Montero en el 2015 con la versi\u00f3n v0.1-alpha hasta su versi\u00f3n v1.0 que fue lanzada en el 2017. En la actualidad, este lenguaje sigue su desarrollo bajo la direcci\u00f3n de Melvin Guerrero con las versiones v1.1.0 y v1.2.0 en adelante.\n\nHasta la fecha este lenguaje dispone de soporte para trabajar en sistemas operativos de 64 bits tales como MS-Windows, Mac OS, y Linux.\n\nDesarrollo web (server-side),\nConexiones de base de datos,\nC\u00e1lculos matem\u00e1ticas,\nSystem Scripting.\n", "sections": [{"name": "\u00bfY por qu\u00e9 un lenguaje de programaci\u00f3n m\u00e1s?", "text": "", "subsections": []}, {"name": "Caracter\u00edsticas del lenguaje", "text": "", "subsections": []}, {"name": "Ejemplos de c\u00f3digo", "text": "", "subsections": []}, {"name": "Elementos del lenguaje", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Lenguaje_de_programaci%C3%B3n", "title": "Lenguaje de programaci\u00f3n", "summary": "Un lenguaje de programaci\u00f3n es un lenguaje formal (o artificial, es decir, un lenguaje con reglas gramaticales bien definidas) que proporciona a una persona, en este caso el programador, la capacidad y habilidad de escribir (o programar) una serie de instrucciones o secuencias de \u00f3rdenes en forma de algoritmos con el fin de controlar el comportamiento f\u00edsico o l\u00f3gico de un sistema inform\u00e1tico, para que de esa manera se puedan obtener diversas clases de datos o ejecutar determinadas tareas. A todo este conjunto de \u00f3rdenes escritas mediante un lenguaje de programaci\u00f3n se le denomina programa inform\u00e1tico.[1]\u200b[2]\u200b[3]\u200b[4]\u200b\n\n", "sections": [{"name": "Caracter\u00edsticas", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "Clasificaci\u00f3n de los lenguajes de programaci\u00f3n", "text": "", "subsections": []}, {"name": "Paradigma de programaci\u00f3n", "text": "", "subsections": []}, {"name": "Clasificaci\u00f3n por paradigmas", "text": "", "subsections": []}, {"name": "Elementos", "text": "", "subsections": []}, {"name": "Implementaci\u00f3n", "text": "", "subsections": []}, {"name": "Dialectos", "text": "", "subsections": []}, {"name": "T\u00e9cnica", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Lenguaje_de_programaci%C3%B3n_ABC", "title": "ABC (lenguaje de programaci\u00f3n)", "summary": "ABC es un lenguaje de programaci\u00f3n imperativo de prop\u00f3sito general y entorno de programaci\u00f3n desarrollado en el Centrum Wiskunde & Informatica de Pa\u00edses Bajos por Leo Geurts, Lambert Meertens y Steven Pemberton. Es interactivo, estructurado, de alto nivel y est\u00e1 pensado para ser utilizado en lugar de BASIC, Pascal o AWK. No pretende ser un lenguaje de programaci\u00f3n de sistemas, sino que est\u00e1 destinado a la ense\u00f1anza o la creaci\u00f3n de prototipos.\n\nEl lenguaje tuvo una gran influencia en el dise\u00f1o del lenguaje de programaci\u00f3n Python; Guido van Rossum, quien desarroll\u00f3 Python, trabaj\u00f3 anteriormente durante varios a\u00f1os en el sistema ABC a mediados de los a\u00f1os ochenta.[1]\u200b[2]\u200b\n\n", "sections": [{"name": "Caracter\u00edsticas", "text": "", "subsections": []}, {"name": "Ejemplo", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Lenguaje_de_programaci%C3%B3n_C", "title": "C (lenguaje de programaci\u00f3n)", "summary": "\n\nC\u00f3digo simple en C\nB (BCPL, CPL), ALGOL 68,[1]\u200b:\u200a201-208\u200a\n\nC es un lenguaje de programaci\u00f3n de prop\u00f3sito general[2]\u200b:\u200a1\u200a originalmente desarrollado por Dennis Ritchie entre 1969 y 1972 en los Laboratorios Bell,[1]\u200b como evoluci\u00f3n del anterior lenguaje B, a su vez basado en BCPL.[2]\u200b:\u200a1\u200a[3]\u200b[4]\u200b\n\nAl igual que B, es un lenguaje orientado a la implementaci\u00f3n de sistemas operativos; concretamente Unix. C es apreciado por la eficiencia del c\u00f3digo que produce y es el lenguaje de programaci\u00f3n m\u00e1s popular para crear softwares de sistemas y aplicaciones.\n\nSe trata de un lenguaje de tipos de datos est\u00e1ticos, d\u00e9bilmente tipado, que dispone de las estructuras t\u00edpicas de los lenguajes de alto nivel, pero, a su vez, dispone de construcciones del lenguaje que permiten un control a bajo nivel. Los compiladores suelen ofrecer extensiones al lenguaje que posibilitan mezclar c\u00f3digo en ensamblador con c\u00f3digo C o acceder directamente a memoria o dispositivos perif\u00e9ricos.\n\nLa primera estandarizaci\u00f3n del lenguaje C fue en ANSI, con el est\u00e1ndar X3.159-1989. El lenguaje que define este est\u00e1ndar fue conocido vulgarmente como ANSI C. Posteriormente, en 1990, fue ratificado como est\u00e1ndar ISO (ISO/IEC 9899:1990). La adopci\u00f3n de este est\u00e1ndar es muy amplia por lo que, si los programas creados lo siguen, el c\u00f3digo es portable entre plataformas y/o arquitecturas.\n\n", "sections": [{"name": "Filosof\u00eda", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "Lenguajes derivados de C", "text": "", "subsections": []}, {"name": "Proceso de compilaci\u00f3n", "text": "", "subsections": []}, {"name": "Herramientas de programaci\u00f3n", "text": "", "subsections": []}, {"name": "Aplicabilidad", "text": "", "subsections": []}, {"name": "Bibliotecas C", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Lenguaje_de_programaci%C3%B3n_Java", "title": "Java (lenguaje de programaci\u00f3n)", "summary": "\nPor favor, ed\u00edtalo y/o discute los problemas en la discusi\u00f3n para mejorarlo:\nNecesita referencias adicionales para su verificaci\u00f3n.\nLas referencias no son claras o tienen un formato incorrecto.\nPodr\u00eda ser dif\u00edcil de entender para lectores interesados en el tema.\n\n\n[\n]\nJava es un lenguaje de programaci\u00f3n y una plataforma inform\u00e1tica que fue comercializada por primera vez en 1995 por Sun Microsystems.[2]\u200b[3]\u200b\n\nEl lenguaje de programaci\u00f3n Java fue desarrollado originalmente por James Gosling, de Sun Microsystems (constituida en 1983 y posteriormente adquirida el 27 de enero de 2010 por la compa\u00f1\u00eda Oracle),[4]\u200b y publicado en 1995 como un componente fundamental de la plataforma Java de Sun Microsystems. Su sintaxis deriva en gran medida de C y C++, pero tiene menos utilidades de bajo nivel que cualquiera de ellos. Las aplicaciones de Java son compiladas a bytecode (clase Java), que puede ejecutarse en cualquier m\u00e1quina virtual Java (JVM) sin importar la arquitectura de la computadora subyacente.\n\nLa compa\u00f1\u00eda Sun desarroll\u00f3 la implementaci\u00f3n de referencia original para los compiladores de Java, m\u00e1quinas virtuales y librer\u00edas de clases en 1991, y las public\u00f3 por primera vez en 1995. A partir de mayo de 2007, en cumplimiento de las especificaciones del Proceso de la Comunidad Java, Sun volvi\u00f3 a licenciar la mayor\u00eda de sus tecnolog\u00edas de Java bajo la Licencia P\u00fablica General de GNU. Otros han desarrollado tambi\u00e9n implementaciones alternas a estas tecnolog\u00edas de Sun, tales como el Compilador de Java de GNU y el GNU Classpath.\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Filosof\u00eda", "text": "", "subsections": []}, {"name": "Sintaxis", "text": "", "subsections": []}, {"name": "Entornos de funcionamiento", "text": "", "subsections": []}, {"name": "Programaci\u00f3n", "text": "", "subsections": []}, {"name": "Industria relacionada", "text": "", "subsections": []}, {"name": "Cr\u00edticas", "text": "", "subsections": []}, {"name": "Recursos", "text": "", "subsections": []}, {"name": "Java en c\u00f3digo abierto", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Lenguaje_de_programaci%C3%B3n_interpretado", "title": "Int\u00e9rprete (inform\u00e1tica)", "summary": "En ciencias de la computaci\u00f3n, int\u00e9rprete o interpretador es un programa inform\u00e1tico capaz de analizar y ejecutar otros programas. Los int\u00e9rpretes se diferencian de los compiladores o de los ensambladores en que mientras estos traducen un programa desde su descripci\u00f3n en un lenguaje de programaci\u00f3n al c\u00f3digo de m\u00e1quina del sistema, los int\u00e9rpretes solo realizan la traducci\u00f3n a medida que sea necesaria, t\u00edpicamente, instrucci\u00f3n por instrucci\u00f3n, y normalmente no guardan el resultado de dicha traducci\u00f3n.\n\nUsando un int\u00e9rprete, un solo archivo fuente puede producir resultados iguales incluso en sistemas sumamente diferentes (ejemplo. una PC y una PlayStation 4). Usando un compilador, un solo archivo fuente puede producir resultados iguales solo si es compilado a distintos ejecutables espec\u00edficos a cada sistema.\n\nLos programas interpretados suelen ser m\u00e1s lentos que los compilados debido a la necesidad de traducir el programa mientras se ejecuta, pero a cambio son m\u00e1s flexibles como entornos de programaci\u00f3n y depuraci\u00f3n (lo que se traduce, por ejemplo, en una mayor facilidad para reemplazar partes enteras del programa o a\u00f1adir m\u00f3dulos completamente nuevos), y permiten ofrecer al programa interpretado un entorno no dependiente de la m\u00e1quina donde se ejecuta el int\u00e9rprete, sino del propio int\u00e9rprete (lo que se conoce com\u00fanmente como m\u00e1quina virtual).\n\nPara mejorar el desempe\u00f1o, algunas implementaciones de algunos lenguajes de programaci\u00f3n pueden interpretar o compilar el c\u00f3digo fuente original en una forma intermedia  m\u00e1s compacta, y despu\u00e9s traducir eso al c\u00f3digo de m\u00e1quina (ej. Perl, Python, MATLAB, y Ruby). Algunos aceptan los archivos fuente guardados en esta representaci\u00f3n intermedia (ej. Python, UCSD Pascal y Java).\n\nEn la actualidad, uno de los entornos m\u00e1s comunes de uso de los int\u00e9rpretes es en los navegadores web, debido a la posibilidad que estos tienen de ejecutarse independientemente de la plataforma.\n\n", "sections": [{"name": "Int\u00e9rpretes de bytecode", "text": "", "subsections": []}, {"name": "Eficiencia", "text": "", "subsections": []}, {"name": "Interpretadores de \u00e1rbol de sintaxis abstracta", "text": "", "subsections": []}, {"name": "Compilaci\u00f3n justo a tiempo", "text": "", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": []}, {"name": "Lenguaje interpretado", "text": "", "subsections": []}, {"name": "Notas y referencias", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Licencia_de_software", "title": "Licencia de software", "summary": "\n\nBusca fuentes: \u00abLicencia de software\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\n[\n]\nUna licencia de software es un contrato entre el licenciante (autor/titular de los derechos de explotaci\u00f3n/distribuci\u00f3n) y el licenciatario[2]\u200b (usuario consumidor,  profesional o empresa) del programa inform\u00e1tico, para utilizarlo cumpliendo una serie de t\u00e9rminos y condiciones establecidas dentro de sus cl\u00e1usulas,[3]\u200b es decir, es un conjunto de permisos que un desarrollador le puede otorgar a un usuario en los que tiene la posibilidad de distribuir, usar o modificar el producto bajo una licencia determinada. Adem\u00e1s se suelen definir los plazos de duraci\u00f3n, el territorio donde se aplica la licencia (ya que la licencia se soporta en las leyes particulares de cada pa\u00eds o regi\u00f3n), entre otros.[4]\u200b\n\nLas licencias de software pueden establecer entre otras cosas: la cesi\u00f3n de determinados derechos del propietario al usuario final sobre una o varias copias del programa inform\u00e1tico, los l\u00edmites en la responsabilidad por fallos, el plazo de cesi\u00f3n de los derechos, el \u00e1mbito geogr\u00e1fico de validez del contrato[5]\u200b e incluso pueden establecer determinados compromisos del usuario final hacia el propietario, tales como la no cesi\u00f3n del programa a terceros o la no reinstalaci\u00f3n del programa en equipos distintos al que se instal\u00f3 originalmente.\n\n", "sections": [{"name": "Partes de una licencia de software", "text": "", "subsections": []}, {"name": "Clasificaci\u00f3n de las licencias de software en la actulidad", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Lisp", "title": "Lisp", "summary": "\n\nLisp (hist\u00f3ricamente LISP) es una familia de lenguajes de programaci\u00f3n de computadora de tipo multiparadigma con larga historia y una inconfundible y \u00fatil sintaxis homoic\u00f3nica basada en la notaci\u00f3n polaca.\n\nDesarrollado originalmente en 1959 por John McCarthy y sus colaboradores en el Instituto Tecnol\u00f3gico de Massachusetts, Lisp es el segundo lenguaje de programaci\u00f3n de alto nivel de mayor antig\u00fcedad; apareci\u00f3 un a\u00f1o despu\u00e9s de FORTRAN y uno antes que COBOL.\n\nAl igual que COBOL y FORTRAN, Lisp ha cambiado mucho desde sus comienzos, y han existido un gran n\u00famero de dialectos en su historia. Hoy, los dialectos de Lisp m\u00e1s ampliamente usados son Scheme (1975), Common Lisp (1984), Emacs Lisp (1985) y Clojure (2007).\n\nLisp fue creado originalmente como una notaci\u00f3n matem\u00e1tica pr\u00e1ctica para los programas de computadora, basada en el c\u00e1lculo lambda de Alonzo Church. Se convirti\u00f3 r\u00e1pidamente en el lenguaje de programaci\u00f3n favorito en la investigaci\u00f3n de la inteligencia artificial (AI). Como lenguajes de programaci\u00f3n precursor, Lisp fue pionero en muchas ideas en ciencias de la computaci\u00f3n, incluyendo las estructuras de datos de \u00e1rbol, el manejo de almacenamiento autom\u00e1tico, tipos din\u00e1micos, y el compilador auto contenido.\n\nEl acr\u00f3nimo LISP significa \"LISt Processor\" ('Procesamiento de listas'). Las listas encadenadas son una de las estructuras de datos importantes de Lisp, y el c\u00f3digo fuente de Lisp en s\u00ed mismo est\u00e1 compuesto de listas. Como resultado, los programas de Lisp pueden manipular c\u00f3digo fuente de Lisp como si fueran simples datos, dando lugar a sistemas de macros que permiten a los programadores crear lenguajes de dominio espec\u00edfico embebidos en Lisp.\n\nLa intercambiabilidad del c\u00f3digo y los datos tambi\u00e9n da a Lisp su instant\u00e1neamente reconocible sintaxis. Todo el c\u00f3digo del programa es escrito como expresiones S, o listas entre par\u00e9ntesis. Una llamada de funci\u00f3n o una forma sint\u00e1ctica es escrita como una lista, con la funci\u00f3n o el nombre del operador en primer lugar, y los argumentos a continuaci\u00f3n; por ejemplo, una funci\u00f3n f que toma tres argumentos puede ser llamada usando (f x y z).\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Dialectos importantes", "text": "", "subsections": []}, {"name": "Innovaciones del lenguaje", "text": "", "subsections": []}, {"name": "Listas", "text": "", "subsections": []}, {"name": "Or\u00edgenes de \"car\" y \"cdr\"", "text": "", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Log4j", "title": "Log4j", "summary": "\nLog4j es una biblioteca de c\u00f3digo abierto desarrollada en Java por la Apache Software Foundation que permite a los desarrolladores de software escribir mensajes de registro, cuyo prop\u00f3sito es dejar constancia de una determinada transacci\u00f3n en tiempo de ejecuci\u00f3n. Log4j permite filtrar los mensajes en funci\u00f3n de su importancia. La configuraci\u00f3n de salida y granularidad de los mensajes es realizada en tiempo de ejecuci\u00f3n mediante el uso de archivos de configuraci\u00f3n externos. Log4J ha sido implementado en otros lenguajes como C, C++, C#, Perl, Python, Ruby y Eiffel.\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Conceptos", "text": "", "subsections": []}, {"name": "Configuraci\u00f3n", "text": "", "subsections": []}, {"name": "Uso", "text": "", "subsections": []}, {"name": "Vulnerabilidad \u00abLog4Shell\u00bb", "text": "", "subsections": []}, {"name": "Proyectos similares", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/M%C3%B3dulo_(inform%C3%A1tica)", "title": "M\u00f3dulo (inform\u00e1tica)", "summary": "En programaci\u00f3n, un m\u00f3dulo es una porci\u00f3n de un programa de ordenador. De las varias tareas que debe realizar un programa para cumplir con su funci\u00f3n u objetivos, un m\u00f3dulo realizar\u00e1, com\u00fanmente, una de dichas tareas (o varias, en alg\u00fan caso).\n\nEn general (no necesariamente relacionado con la programaci\u00f3n), un m\u00f3dulo recibe como entrada la salida que haya proporcionado otro m\u00f3dulo o los datos de entrada al sistema (programa) si se trata del m\u00f3dulo principal de este; y proporcionar\u00e1 una salida que, a su vez, podr\u00e1 ser utilizada como entrada de otro m\u00f3dulo o bien contribuir\u00e1 directamente a la salida final del sistema (programa), si se retorna al m\u00f3dulo principal.\n\nParticularmente, en el caso de la programaci\u00f3n, los m\u00f3dulos suelen estar (no necesariamente) organizados jer\u00e1rquicamente en niveles, de forma que hay un m\u00f3dulo principal que realiza las llamadas oportunas a los m\u00f3dulos de nivel inferior. \n\nCuando un m\u00f3dulo es convocado, recibe como entrada los datos proporcionados por otro del mismo o superior nivel, el que ha hecho la llamada; luego realiza su tarea. A su vez este m\u00f3dulo convocado puede llamar a otro u otros m\u00f3dulos de nivel inferior si fuera necesario; cuando ellos finalizan sus tareas, devuelven la salida pertinente al m\u00f3dulo inmediato llamador, en secuencia inversa. Finalmente se contin\u00faa con la ejecuci\u00f3n del m\u00f3dulo principal.\n\n", "sections": [{"name": "Caracter\u00edsticas de un m\u00f3dulo", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Machine_learning", "title": "Aprendizaje autom\u00e1tico", "summary": "El aprendizaje autom\u00e1tico (AA); tambi\u00e9n llamado automatizado, computacional o de m\u00e1quinas (del ingl\u00e9s machine learning, ML), es el subcampo de las ciencias de la computaci\u00f3n y una rama de  la inteligencia artificial, cuyo objetivo es desarrollar t\u00e9cnicas que permitan que las computadoras aprendan. Se dice que un agente aprende cuando su desempe\u00f1o mejora con la experiencia y mediante el uso de datos; es decir, cuando la habilidad no estaba presente en su genotipo o rasgos de nacimiento.[1]\u200b \"En el aprendizaje de m\u00e1quinas un computador observa datos, construye un modelo basado en esos datos y utiliza ese modelo a la vez como una hip\u00f3tesis acerca del mundo y una pieza de software que puede resolver problemas\".[2]\u200b\n\nEn muchas ocasiones el campo de actuaci\u00f3n del aprendizaje autom\u00e1tico se solapa con el de la estad\u00edstica inferencial, ya que las dos disciplinas se basan en el an\u00e1lisis de datos. Sin embargo, el aprendizaje autom\u00e1tico incorpora las preocupaciones de la complejidad computacional de los problemas. Muchos problemas son de clase NP-hard, por lo que gran parte de la investigaci\u00f3n realizada en aprendizaje autom\u00e1tico est\u00e1 enfocada al dise\u00f1o de soluciones factibles a esos problemas. El aprendizaje autom\u00e1tico tambi\u00e9n est\u00e1 estrechamente relacionado con el reconocimiento de patrones. El aprendizaje autom\u00e1tico puede ser visto como un intento de automatizar algunas partes del m\u00e9todo cient\u00edfico mediante m\u00e9todos matem\u00e1ticos. Por lo tanto es un proceso de inducci\u00f3n del conocimiento.\n\nEl aprendizaje autom\u00e1tico tiene una amplia gama de aplicaciones, incluyendo motores de b\u00fasqueda, diagn\u00f3sticos m\u00e9dicos, detecci\u00f3n de fraude en el uso de tarjetas de cr\u00e9dito, an\u00e1lisis de mercado para los diferentes sectores de actividad, clasificaci\u00f3n de secuencias de ADN, reconocimiento del habla y del lenguaje escrito, juegos y rob\u00f3tica.\n\n", "sections": [{"name": "Resumen", "text": "", "subsections": []}, {"name": "Tipos de algoritmos", "text": "", "subsections": []}, {"name": "T\u00e9cnicas de clasificaci\u00f3n", "text": "", "subsections": []}, {"name": "Conocimiento", "text": "", "subsections": []}, {"name": "Distinci\u00f3n entre aprendizaje supervisado y no supervisado", "text": "", "subsections": []}, {"name": "Aplicaciones", "text": "", "subsections": []}, {"name": "Temas del aprendizaje autom\u00e1tico", "text": "", "subsections": []}, {"name": "Historia y relaci\u00f3n con otros temas", "text": "", "subsections": []}, {"name": "Software", "text": "", "subsections": []}, {"name": "Sesgos", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Manejo_de_excepciones", "title": "Manejo de excepciones", "summary": "\n\n\nBusca fuentes: \u00abManejo de excepciones\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nEl manejo de excepciones es una t\u00e9cnica de programaci\u00f3n que permite al programador controlar los errores ocasionados durante la ejecuci\u00f3n de un programa inform\u00e1tico. Cuando ocurre cierto tipo de error, el sistema reacciona ejecutando un fragmento de c\u00f3digo que resuelve la situaci\u00f3n, por ejemplo retornando un mensaje de error o devolviendo un valor por defecto.\n\n", "sections": [{"name": "Introducci\u00f3n", "text": "", "subsections": []}, {"name": "Ejemplos de c\u00f3digo", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Metaclase", "title": "Metaclase", "summary": "En programaci\u00f3n orientada a objetos, una metaclase es una clase cuyas instancias son clases. En otras palabras, como los objetos son instancias de una clase, las clases son instancias de una metaclase.\n\nNo todos los lenguajes orientados a objetos soportan metaclases. Adem\u00e1s, los lenguajes que lo soportan tienen sus propias reglas que definen como los objetos, clases y metaclases interact\u00faan.\n\n", "sections": [{"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Monty_Python", "title": "Monty Python", "summary": "\nGraham Chapman (\u2020)John CleeseTerry GilliamEric IdleTerry Jones (\u2020)Michael Palin\nMonty Python's Flying Circus (1969-1974)Se arm\u00f3 la gorda (1971)Los caballeros de la mesa cuadrada (1975)La vida de Brian (1979)Monty Python Live at the Hollywood Bowl (1982)El sentido de la vida (1983)Monty Python Live (Mostly) (2014)\nMonty Python (a veces conocidos como Los Pythons)[1]\u200b[2]\u200b fue un grupo brit\u00e1nico de seis humoristas que sintetiz\u00f3 en clave de humor la idiosincrasia brit\u00e1nica de los a\u00f1os 1960 y 1970, compuesto por Graham Chapman, John Cleese, Terry Gilliam, Eric Idle, Terry Jones y Michael Palin. Del grupo \u00fanicamente Terry Gilliam no era brit\u00e1nico sino estadounidense.\n\nLograron la fama gracias a su programa de televisi\u00f3n Monty Python's Flying Circus (El Circo Ambulante de Monty Python), estrenado el 5 de octubre de 1969 en la BBC y formada por 45 episodios repartidos en cuatro temporadas. El fen\u00f3meno Python se desarroll\u00f3 m\u00e1s all\u00e1 del programa de televisi\u00f3n adquiriendo un gran impacto: obras de teatros, pel\u00edculas, discos, libros, un musical e incluso lenguajes de programaci\u00f3n.[3]\u200b La influencia del grupo en la comedia se ha comparado con la de los Beatles en la m\u00fasica.[4]\u200b[5]\u200b\n\nEmitido en la BBC entre 1969 y 1974, Flying Circus fue creado, escrito e interpretado por los seis miembros del grupo. Estaba estructurado como un programa de sketches, pero con una t\u00e9cnica narrativa innovadora (ayudada por las animaciones de Gilliam) que iba m\u00e1s all\u00e1 de lo aceptable en estilo y contenido.[6]\u200b[7]\u200b Al ser los responsables tanto de los guiones y la interpretaci\u00f3n, los Python ten\u00edan un control creativo que les permit\u00eda experimentar formas y contenidos, deshaci\u00e9ndose de las reglas de la comedia televisiva. La influencia del grupo en la comedia brit\u00e1nica ha sido notoria durante a\u00f1os, y en Norteam\u00e9rica ha influido desde los int\u00e9rpretes de las primeras ediciones de Saturday Night Live hasta las m\u00e1s recientes tendencias de humor absurdo en la comedia televisiva. La palabra \"Pythonesque\" ha entrado en el l\u00e9xico ingl\u00e9s como sin\u00f3nimo de \"absurdo\" o \"surrealista\".\n\nEn una encuesta realizada en 2005 en el Reino Unido para encontrar al C\u00f3mico de c\u00f3micos, tres de los seis miembros de Monty Python fueron votados por otros c\u00f3micos y aficionados como tres de los 50 mayores c\u00f3micos de la historia: Cleese en el puesto 2, Idle en el 21, y Palin en el 30.[8]\u200b\n\nEn 2009 el grupo recibi\u00f3 el premio BAFTA honor\u00edfico por su contribuci\u00f3n al mundo de la comedia. El premio se lo entregaron en el preestreno del documental dedicado al fallecido Graham Chapman, Monty Python: casi la verdad.[9]\u200b\n\n", "sections": [{"name": "Los or\u00edgenes", "text": "", "subsections": []}, {"name": "Monty Python's Flying Circus", "text": "", "subsections": []}, {"name": "Largometrajes", "text": "", "subsections": []}, {"name": "Teatro", "text": "", "subsections": []}, {"name": "Documentales", "text": "", "subsections": []}, {"name": "Integrantes", "text": "", "subsections": []}, {"name": "Influencia", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Multiplataforma", "title": "Multiplataforma", "summary": "\nPor favor, ed\u00edtalo y/o discute el problema en la discusi\u00f3n para mejorarlo:\nCarece de fuentes o referencias que aparezcan en una fuente acreditada.\nEn inform\u00e1tica, se denomina multiplataforma a un atributo conferido a programas inform\u00e1ticos o m\u00e9todos y conceptos de c\u00f3mputacion que son implementados, y operan internamente en m\u00faltiples plataformas inform\u00e1ticas. El software multiplataforma puede dividirse en dos grandes tipos o clases: uno requiere una compilaci\u00f3n individual para cada plataforma que le da soporte, y el otro se puede ejecutar directamente en cualquier plataforma, sin preparaci\u00f3n especial, por ejemplo, el software escrito en un lenguaje interpretado o bytecode precompilado portable, para los cuales los int\u00e9rpretes o paquetes en tiempo de ejecuci\u00f3n son componentes comunes o est\u00e1ndar de todas las plataformas.\n\nPor ejemplo, una aplicaci\u00f3n multiplataforma puede ejecutarse sin problema alguno, tanto en Microsoft Windows en la arquitectura x86, como en Linux en la arquitectura x86 y Mac OS X, ya sea en el PowerPC o sistemas Apple Macintosh basados en x86. En general, una aplicaci\u00f3n multiplataforma se puede ejecutar tanto en todas las plataformas existentes o como m\u00ednimo dos plataformas.[1]\u200b\n\n", "sections": [{"name": "Plataformas", "text": "", "subsections": []}, {"name": "Multiplataforma en los videojuegos", "text": "", "subsections": []}, {"name": "Estrategias de dise\u00f1o", "text": "", "subsections": []}, {"name": "Estrategias de prueba", "text": "", "subsections": []}, {"name": "Aplicaciones tradicionales", "text": "", "subsections": []}, {"name": "Software binario", "text": "", "subsections": []}, {"name": "Scripts y lenguajes interpretados", "text": "", "subsections": []}, {"name": "Videojuegos", "text": "", "subsections": []}, {"name": "Software plataforma-independiente", "text": "", "subsections": []}, {"name": "Programaci\u00f3n multiplataforma", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/NumPy", "title": "NumPy", "summary": "\n\n[\n]\nPythonCFortran\nNumPy (pronunciado  /\u02c8n\u028cmpa\u026a/ (numpai) o, a veces  /\u02c8n\u028cmpi/[3]\u200b[4]\u200b (numpi)) es una biblioteca para el lenguaje de programaci\u00f3n Python que da soporte para crear vectores y matrices grandes multidimensionales, junto con una gran colecci\u00f3n de funciones matem\u00e1ticas de alto nivel para operar con ellas. El precursor de NumPy, Numeric, fue creado originalmente por Jim Hugunin con contribuciones de varios otros desarrolladores. En 2005, Travis Oliphant cre\u00f3 NumPy incorporando caracter\u00edsticas de la competencia Numarray en Numeric, con amplias modificaciones. NumPy es un software de c\u00f3digo abierto y cuenta con muchos colaboradores. \n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Caracter\u00edsticas", "text": "", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Otras lecturas", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Objeto_(programaci%C3%B3n)", "title": "Objeto (programaci\u00f3n)", "summary": "\n\nBusca fuentes: \u00abObjeto (programaci\u00f3n)\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nEn el paradigma de programaci\u00f3n orientada a objetos (POO, o bien OOP en ingl\u00e9s), un objeto es un ente orientado a objetos (programa de computadoras) que consta de un estado y de un comportamiento, que a su vez constan respectivamente de datos almacenados y de tareas realizables durante el tiempo de ejecuci\u00f3n. Un objeto puede ser creado instanciando una clase, como ocurre en la programaci\u00f3n orientada a objetos, o mediante escritura directa de c\u00f3digo y la replicaci\u00f3n de otros objetos, como ocurre en la programaci\u00f3n basada en prototipos.\n\nEstos objetos interact\u00faan unos con otros, en contraposici\u00f3n a la visi\u00f3n tradicional en la cual un programa es una colecci\u00f3n de subrutinas (funciones o procedimientos), o simplemente una lista de instrucciones para el computador. Cada objeto es capaz de recibir mensajes, procesar datos y enviar mensajes a otros objetos de manera similar a un servicio.\n\nEn el mundo de la programaci\u00f3n orientada a objetos (POO), un objeto es el resultado de la instanciaci\u00f3n de una clase.[1]\u200b Una clase es el anteproyecto que ofrece la funcionalidad en ella definida, pero \u00e9sta queda implementada solo al crear una instancia de la clase, en la forma de un objeto. Por ejemplo: dado un plano para construir sillas (una clase de nombre clase_silla), entonces una silla concreta, en la que podemos sentarnos, construida a partir de este plano, ser\u00eda un objeto de clase_silla. Es posible crear (construir) m\u00faltiples objetos (sillas) utilizando la definici\u00f3n de la clase (plano) anterior. Los conceptos de clase y objetos son an\u00e1logos a los de tipo de datos y variable; es decir, definida una clase podemos crear objetos de esa clase, igual que disponiendo de un determinado tipo de dato (por ejemplo el tipo entero), podemos definir variables de dicho tipo:\n\n( 'int' es un tipo de dato y 'a' y 'b' son variables de tipo entero con las que podemos operar)\n\nPara utilizar la funcionalidad definida en una clase en particular (salvo en las clases abstractas), primeramente es necesario crear un objeto de esa clase. De la misma manera, para una persona que desea sentarse, las especificaciones para construir una silla ser\u00e1n de poca utilidad; lo que se necesita es una silla real construida a partir de esas especificaciones. Siguiendo con la analog\u00eda anterior, tambi\u00e9n se puede decir que para hacer operaciones aritm\u00e9ticas, de nada sirve por s\u00ed solo el tipo entero (int); para ello necesitamos variables (o constantes) con las que operar.\n\n", "sections": [{"name": "Definici\u00f3n de objeto", "text": "", "subsections": []}, {"name": "Representaci\u00f3n en las computadoras", "text": "", "subsections": []}, {"name": "Objetos en la programaci\u00f3n orientada a objetos", "text": "", "subsections": []}, {"name": "Relaciones entre objetos", "text": "", "subsections": []}, {"name": "Objetos especializados", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Pa%C3%ADses_Bajos", "title": "Pa\u00edses Bajos", "summary": "\n\nNederland\nReino de los Pa\u00edses Bajos\n\n\n\n\n\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\n52\u00b019\u203200\u2033N 5\u00b033\u203200\u2033E\ufeff / \ufeff52.316666666667, 5.55\n\n[\n]\n52\u00b023\u203200\u2033N 4\u00b054\u203200\u2033E\ufeff / \ufeff52.38333, 4.90000\n\n0,946\nMuy Alto\n\u2191 La Haya es la sede del Gobierno.\n\u2191 El fris\u00f3n es una lengua regional hablada por m\u00e1s de &&&&&&&&&0450000.&&&&&0450\u00a0000 personas en la provincia de Frisia, donde es cooficial con el neerland\u00e9s.\n\u2191 Antes de 2002, el flor\u00edn neerland\u00e9s (\u0192, NLG).\nPa\u00edses Bajos[6]\u200b (PP. BB.; en neerland\u00e9s: Nederland\u24d8) es una de las cuatro naciones constituyentes que forman el Reino de los Pa\u00edses Bajos. Es uno de los veintisiete Estados soberanos que integran la Uni\u00f3n Europea. Su capital es \u00c1msterdam;[7]\u200b sin embargo, la organizaci\u00f3n y la administraci\u00f3n del Reino radican en La Haya, sede oficial de la monarqu\u00eda, as\u00ed como de sus autoridades ejecutivas, legislativas y judiciales. Aruba, Curazao y San Mart\u00edn son territorios de ultramar que no forman parte de la Uni\u00f3n Europea.\n\nLas provincias que conforman los Pa\u00edses Bajos est\u00e1n situadas en el noroeste de Europa y limitan al norte y oeste con el mar del Norte, al sur con B\u00e9lgica y al este con Alemania. Completan el territorio neerland\u00e9s las municipalidades especiales de Bonaire, San Eustaquio y Saba, situadas en el Caribe. El pa\u00eds constituye una de las zonas m\u00e1s densamente pobladas del mundo.\n\nComo su nombre indica, el territorio del pa\u00eds est\u00e1 formado por tierras (land) bajas (neder) de las que, aproximadamente, una cuarta parte est\u00e1n situadas al nivel del mar o por debajo de este.[8]\u200b\n\nEl pa\u00eds est\u00e1 clasificado como \u00abde ingresos altos\u00bb seg\u00fan el Banco Mundial[9]\u200b y es uno de los estados m\u00e1s desarrollados: en 2018 est\u00e1 situado en el d\u00e9cimo lugar en cuanto a desarrollo humano seg\u00fan el \u00cdndice de Desarrollo Humano publicado por Naciones Unidas.[10]\u200b Es adem\u00e1s uno de los pa\u00edses con uno de los niveles m\u00e1s bajos de percepci\u00f3n de corrupci\u00f3n,[11]\u200b y es una de las democracias m\u00e1s consolidadas del mundo.[12]\u200b\n\n", "sections": [{"name": "Terminolog\u00eda", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "Gobierno y pol\u00edtica", "text": "", "subsections": []}, {"name": "Organizaci\u00f3n pol\u00edtico-administrativa", "text": "", "subsections": []}, {"name": "Relaciones exteriores", "text": "", "subsections": []}, {"name": "Geograf\u00eda", "text": "", "subsections": []}, {"name": "Econom\u00eda", "text": "", "subsections": []}, {"name": "Demograf\u00eda", "text": "", "subsections": []}, {"name": "Cultura", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Notas", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Palabra_reservada", "title": "Palabra reservada", "summary": "En los lenguajes inform\u00e1ticos, una palabra reservada es una palabra que tiene un significado gramatical especial para ese lenguaje y no puede ser utilizada como un identificador de objetos en c\u00f3digos del mismo, como pueden ser las variables.\n\nPor ejemplo, en SQL, un usuario no puede ser llamado \"group\", porque la palabra group es usada para indicar que un identificador se refiere a un grupo, no a un usuario. Al tratarse de una palabra clave su uso queda restringido.\n\nOcasionalmente la especificaci\u00f3n de un lenguaje de programaci\u00f3n puede tener palabras reservadas que est\u00e1n previstas para un posible uso en futuras versiones. En Java const y goto son palabras reservadas \u2014 no tienen significado en Java, pero tampoco pueden ser usadas como identificadores. Al reservar los t\u00e9rminos pueden ser implementados en futuras versiones de Java, si se desea, sin que el c\u00f3digo fuente m\u00e1s antiguo escrito en Java deje de funcionar.\n\n", "sections": [{"name": "Palabras reservadas e independencia del lenguaje", "text": "", "subsections": []}, {"name": "Palabras reservadas en SQL", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Pandas_(software)", "title": "Pandas (software)", "summary": "\n\nPandas es una librer\u00eda de Python especializada en la manipulaci\u00f3n y el an\u00e1lisis de datos. Ofrece estructuras de datos y operaciones para manipular tablas num\u00e9ricas y series temporales, es como el Excel de Python. Es un\u00a0software libre  distribuido bajo la licencia BSD.[1]\u200b El nombre deriva del t\u00e9rmino \"datos de panel\", t\u00e9rmino de\u00a0econometr\u00eda\u00a0que designa datos que combinan una dimensi\u00f3n temporal con otra dimensi\u00f3n transversal.[2]\u200b\n\n", "sections": [{"name": "Caracter\u00edsticas de la biblioteca", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Paradigma_de_programaci%C3%B3n", "title": "Paradigma de programaci\u00f3n", "summary": "Se denominan paradigmas de programaci\u00f3n a las formas de clasificar los lenguajes de programaci\u00f3n en funci\u00f3n de sus caracter\u00edsticas. Los idiomas se pueden clasificar en m\u00faltiples paradigmas.\n\nAlgunos paradigmas se ocupan principalmente de las implicancias para el modelo de ejecuci\u00f3n del lenguaje, como permitir efectos secundarios o si la secuencia de operaciones est\u00e1 definida por el modelo de ejecuci\u00f3n. Otros paradigmas se refieren principalmente a la forma en que se organiza el c\u00f3digo, como agrupar un c\u00f3digo en unidades junto con el estado que modifica el c\u00f3digo. Sin embargo, otros se preocupan principalmente por el estilo de la sintaxis y la gram\u00e1tica.\n\nLos paradigmas de programaci\u00f3n comunes incluyen:[1]\u200b[2]\u200b[3]\u200b\n\nimperativo en el que el programador instruye a la m\u00e1quina c\u00f3mo cambiar su estado,\nprocedimental que agrupa las instrucciones en procedimientos,\norientado a objetos que agrupa las instrucciones con la parte del estado en el que operan,\ndeclarativo en el que el programador simplemente declara las propiedades del resultado deseado, pero no c\u00f3mo calcularlo\nfuncional en el que el resultado deseado se declara como el valor de una serie de aplicaciones de funci\u00f3n,\nl\u00f3gico en la que el resultado deseado se declara como la respuesta a una pregunta sobre un sistema de hechos y reglas,\nmatem\u00e1tico en el que el resultado deseado se declara como la soluci\u00f3n de un problema de optimizaci\u00f3n\nreactivo en el que se declara el resultado deseado con flujos de datos y la propagaci\u00f3n del cambio\nLas t\u00e9cnicas simb\u00f3licas como la reflexi\u00f3n, que permiten que el programa se refiera a s\u00ed mismo, tambi\u00e9n pueden ser consideradas como un paradigma de programaci\u00f3n. Sin embargo, esto es compatible con los principales paradigmas y, por lo tanto, no es un paradigma real por derecho propio.\n\nPor ejemplo, los lenguajes que caen en el paradigma imperativo tienen dos caracter\u00edsticas principales: establecen el orden en el que ocurren las operaciones, con construcciones que controlan expl\u00edcitamente ese orden, y permiten efectos secundarios, en los que el estado puede modificarse en un momento determinado, dentro de una unidad de c\u00f3digo, y luego leer en un momento diferente dentro de una unidad de c\u00f3digo diferente. La comunicaci\u00f3n entre las unidades de c\u00f3digo no es expl\u00edcita. Mientras tanto, en la programaci\u00f3n orientada a objetos, el c\u00f3digo se organiza en objetos que contienen un estado que solo es modificado por el c\u00f3digo que forma parte del objeto. La mayor\u00eda de los lenguajes orientados a objetos tambi\u00e9n son lenguajes imperativos. Por el contrario, los lenguajes que se ajustan al paradigma declarativo no indican el orden en el que ejecutar las operaciones. En su lugar, proporcionan una serie de operaciones disponibles en el sistema, junto con las condiciones en las que se permite que se ejecute cada una. La implementaci\u00f3n del modelo de ejecuci\u00f3n del lenguaje rastrea qu\u00e9 operaciones son libres de ejecutar y elige el orden en forma independiente. M\u00e1s en Comparaci\u00f3n de lenguajes de programaci\u00f3n de m\u00faltiples paradigmas.\n\n--Lenguajes de programaci\u00f3n procedurales--\nEl desarrollo de lenguajes procedurales dio lugar a lenguajes sirven de vocabulario relacionado con el problema a resolver. Ejemplos de estos lenguajes son:\n\nCOBOL (COmmon Business-Oriented Language) - hace servir t\u00e9rminos como archivo, mover y copiar.\nFORTRAN (FORmula TRANslation) - hace servir terminolog\u00eda del lenguaje matem\u00e1tico.\nALGOL (ALGOritmic Language) - enfocado a ser un lenguaje apropiado para definir algoritmos, tambi\u00e9n puede servir de lenguaje matem\u00e1tico.\nPL/I (Programing Language One) - un h\u00edbrido comercial/cient\u00edfico de prop\u00f3sito general con soporte para usuarios.\nBASIC (Begginers All purpose Symbolic Instruction Code) - se desarroll\u00f3 para permitir escribir programas a m\u00e1s personas.\nC - un lenguaje de prop\u00f3sito general.\nTodos estos lenguajes siguen un paradigma procedural. Describen, paso a paso, exactamente el proceso que debe seguirse para resolver un problema espec\u00edfico. La eficacia y eficiencia de cada soluci\u00f3n dependen de la experiencia, la inventiva y la habilidad del programador.\n\n", "sections": [{"name": "Cr\u00edtica", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "Soporte para m\u00faltiples paradigmas", "text": "", "subsections": []}, {"name": "Resumen", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Perif%C3%A9rico_de_entrada/salida", "title": "Perif\u00e9rico de entrada/salida", "summary": "\n\nBusca fuentes: \u00abPerif\u00e9rico de entrada/salida\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nEn inform\u00e1tica, un perif\u00e9rico de entrada/salida o E/S (en ingl\u00e9s: input/output o I/O) es aquel tipo de dispositivo perif\u00e9rico de un computador capaz de interactuar con los elementos externos a ese sistema de forma bidireccional, es decir, que permite tanto que sea ingresada informaci\u00f3n desde un sistema externo, como emitir informaci\u00f3n a partir de ese sistema.\n\n", "sections": [{"name": "Funciones", "text": "", "subsections": []}, {"name": "Tipos", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Perl", "title": "Perl", "summary": "\n\n5.38.2[1]\u200b / 29 de noviembre de 2023 (5 meses\u00a0y\u00a016 d\u00edas)\n\nPerl es un lenguaje de programaci\u00f3n dise\u00f1ado por Larry Wall en 1987. Perl toma caracter\u00edsticas del lenguaje C, del lenguaje interpretado bourne shell (sh), AWK, sed, Lisp y, en un grado inferior, de muchos otros lenguajes de programaci\u00f3n.\n\nEstructuralmente, Perl est\u00e1 basado en un estilo de bloques como los del C o AWK, y fue ampliamente adoptado por su destreza en el procesado de texto y no tener ninguna de las limitaciones de los otros lenguajes de script.\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Descripci\u00f3n", "text": "", "subsections": []}, {"name": "Estructura del lenguaje", "text": "", "subsections": []}, {"name": "Comparativa de funcionamiento", "text": "", "subsections": []}, {"name": "Futuro", "text": "", "subsections": []}, {"name": "Diversi\u00f3n con Perl", "text": "", "subsections": []}, {"name": "Comunidad Perl", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Pip_(administrador_de_paquetes)", "title": "Pip (administrador de paquetes)", "summary": "\npip es un sistema de gesti\u00f3n de paquetes utilizado para instalar y administrar paquetes de software escritos en Python. Muchos paquetes pueden ser encontrados en el Python Package Index (PyPI). Python 2.7.9 y posteriores (en la serie Python2), Python 3.4 y posteriores incluyen pip (pip3 para Python3) por defecto.\n\npip es un acr\u00f3nimo recursivo que se puede interpretar como Pip Instalador de Paquetes o Pip Instalador de Python.[1]\u200b\n\n", "sections": [{"name": "Interfaz l\u00ednea de comando", "text": "", "subsections": []}, {"name": "Uso de servicio del alojamiento web", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Pit%C3%B3n", "title": "Pit\u00f3n", "summary": "\nPit\u00f3n puede referirse a:\n\nPythonidae, familia de serpientes constrictoras.\nPython, g\u00e9nero de pitones.\nPit\u00f3n reticulada, serpiente m\u00e1s larga del mundo.\nPit\u00f3n, gran serpiente de la mitolog\u00eda griega.\nPit\u00f3n, ciudad del Antiguo Egipto mencionada en el libro de la Biblia del \u00c9xodo.\nPit\u00f3n volc\u00e1nico, resto de un volc\u00e1n erosionado.\nPit\u00f3n, alfarero griego del siglo\u00a0V\u00a0a.\u00a0C.\nPit\u00f3n, pintor griego del siglo\u00a0IV\u00a0a.\u00a0C.\nPit\u00f3n, s\u00e1trapa de Media, del siglo\u00a0IV\u00a0a.\u00a0C.\nPit\u00f3n, s\u00e1trapa de la India, del siglo\u00a0IV\u00a0a.\u00a0C.\nPit\u00f3n, cuerno de algunos animales.\nPit\u00f3n, pito o pitorro (en vasijas, regaderas, porrones, etc.)\nPython, lenguaje de programaci\u00f3n.\nPython, misil fabricado por Israel.\nEl nombre com\u00fan de la planta Agave americana.\nEl nombre com\u00fan de la planta Taraxacum officinale.\nPithon, poblaci\u00f3n y comuna francesa.\n", "sections": [{"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Plone", "title": "Plone", "summary": "\n\n[\n]\nPlone es un sistema de gesti\u00f3n de contenidos que puede utilizarse para construir cualquier tipo de sitio web como portales, sitios webs corporativos, sitios web externos o internos, sitios de publicaci\u00f3n de noticias, incluyendo blogs, tiendas en l\u00ednea (E-commerce), como repositorio de documentos y herramienta colaborativa.[2]\u200b\n\nPlone es un desarrollo basado en c\u00f3digo abierto publicado bajo la GNU General Public License (GPL), basado en Zope y programado en Python. Los principales desarrollos son conducidos peri\u00f3dicamente durante reuniones especiales llamadas Plone Sprints. Adicionalmente est\u00e1 dise\u00f1ado para extender sus funcionalidades por defecto por medio de m\u00f3dulos adicionales llamados Products. Plone tambi\u00e9n tiene respaldo legal del Consejo de la Software Freedom Law Center. Los puntos fuertes de Plone son sus flujo de trabajo flexibles y adaptables, seguridad, extensibilidad, facilidad de uso y flexibilidad.[3]\u200b\n\nSeg\u00fan estudio efectuado por Real Story Group llamado 2012 Content Technology Vendor Map[4]\u200b  clasifican a Plone como un Document & Records Management, Sistema de gesti\u00f3n de contenidos y Gesti\u00f3n del conocimiento (Web Content & Experience Management), Software colaborativo y Software social (Collaboration & Social Software). Aparte de este estudio, existen publicaciones donde se ha analizado sus capacidades como Sistema de Gesti\u00f3n de Conocimiento.[5]\u200b\n\nDebido a la su capacidad de extender su funcionalidad por defecto basado en Productos, existe experiencias realizadas por proveedores de servicios de Plone donde frecuentemente han utilizado a Plone como CRM,[6]\u200b como un software GIS para  cartograf\u00eda en entornos web,[7]\u200b[8]\u200b entre otros usos, aun cuando Plone no fue dise\u00f1ado como tal para estas funcionalidades.\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Fundaci\u00f3n Plone", "text": "", "subsections": []}, {"name": "Caracter\u00edsticas", "text": "", "subsections": []}, {"name": "Comunidad", "text": "", "subsections": []}, {"name": "Distribuciones basadas en Plone", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Polimorfismo_(inform%C3%A1tica)", "title": "Polimorfismo (inform\u00e1tica)", "summary": "En programaci\u00f3n orientada a objetos, el polimorfismo se refiere a la propiedad por la que es posible enviar mensajes sint\u00e1cticamente iguales a objetos de tipos distintos. Aunque el mensaje sea el mismo, diferentes objetos pueden responder a \u00e9l de manera \u00fanica y espec\u00edfica. Esta caracter\u00edstica permite que, sin alterar ni tocar el c\u00f3digo existente, se puedan incorporar nuevos comportamientos y funciones (es decir la interfaz sint\u00e1ctica se mantiene inalterada pero cambia el comportamiento en funci\u00f3n de qu\u00e9 objeto estamos usando en cada momento). El \u00fanico requisito es que los objetos deben ser capaces de responder al mensaje que se les env\u00eda, garantizando as\u00ed una flexibilidad y extensibilidad en el dise\u00f1o del software.\n\n", "sections": [{"name": "Descripci\u00f3n", "text": "", "subsections": []}, {"name": "Clasificaci\u00f3n", "text": "", "subsections": []}, {"name": "Ejemplo de polimorfismo", "text": "", "subsections": []}, {"name": "Polimorfismo desde una interfaz", "text": "", "subsections": []}, {"name": "Diferencias entre polimorfismo y sobrecarga", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Programaci%C3%B3n_funcional", "title": "Programaci\u00f3n funcional", "summary": "\n\nBusca fuentes: \u00abProgramaci\u00f3n funcional\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nEn inform\u00e1tica, la programaci\u00f3n funcional es un paradigma de programaci\u00f3n declarativa basado en el uso de verdaderas funciones matem\u00e1ticas. En este estilo de programaci\u00f3n las funciones son ciudadanas de primera clase, porque sus expresiones pueden ser asignadas a variables como se har\u00eda con cualquier otro valor; adem\u00e1s de que pueden crearse funciones de orden superior.[1]\u200b \n\nLa programaci\u00f3n funcional tiene sus ra\u00edces en el c\u00e1lculo lambda, un sistema formal desarrollado en los a\u00f1os 1930 para investigar la naturaleza de las funciones, la naturaleza de la computabilidad y su relaci\u00f3n con la recursi\u00f3n. Los lenguajes funcionales priorizan el uso de recursividad y aplicaci\u00f3n de funciones de orden superior para resolver problemas que en otros lenguajes se resolver\u00edan mediante estructuras de control (por ejemplo, ciclos). Algunos lenguajes funcionales tambi\u00e9n buscan eliminar la mutabilidad o efectos secundarios; en contraste con la programaci\u00f3n imperativa, que se basa en los cambios de estado mediante la mutaci\u00f3n de variables. Esto significa que, en programaci\u00f3n funcional pura, dos o m\u00e1s expresiones sint\u00e1cticas id\u00e9nticas (por ejemplo, dos llamadas a rutinas o dos evaluaciones) siempre devolver\u00e1n el mismo resultado. Es decir, se tiene transparencia referencial. Lo anterior tambi\u00e9n puede ser aprovechado para dise\u00f1ar estrategias de evaluaci\u00f3n que eviten repetir el c\u00f3mputo de expresiones antes vistas, o para evaluar distintas ramas de un programa en paralelo sin mayor preocupaci\u00f3n.\n\nLos lenguajes de programaci\u00f3n funcional, especialmente los puramente funcionales, han sido enfatizados en el ambiente acad\u00e9mico y no tanto en el desarrollo comercial o industrial. Sin embargo, lenguajes de programaci\u00f3n funcional como Lisp (Scheme, Common Lisp, etc.), Erlang, Rust, Objective Caml, Scala, F#, Clojure, Racket, Wolfram Language[2]\u200b y Haskell, tambi\u00e9n han sido utilizados en aplicaciones comerciales e industriales. Tambi\u00e9n es utilizada en la industria a trav\u00e9s de lenguajes de dominio espec\u00edfico como R (estad\u00edstica), Mathematica (c\u00f3mputo simb\u00f3lico), J y K (an\u00e1lisis financiero). Los lenguajes de uso espec\u00edfico usados com\u00fanmente como SQL y Lex/Yacc, utilizan algunos elementos de programaci\u00f3n funcional, especialmente al procesar valores mutables. Las hojas de c\u00e1lculo tambi\u00e9n pueden ser consideradas lenguajes de programaci\u00f3n funcional.\n\nOtros lenguajes de programaci\u00f3n no est\u00e1n dise\u00f1ados espec\u00edficamente para seguir un estilo funcional, sin embargo lo ofrecen como alternativa. Por ejemplo, Perl, JavaScript y Python fueron dise\u00f1ados con capacidades de programaci\u00f3n funcional, adem\u00e1s de incorporar otros paradigmas. Versiones recientes de lenguajes originalmente sin capacidades funcionales, como C++ y Java, han ido incorporando algunos conceptos de la programaci\u00f3n funcional.\n\n", "sections": [{"name": "Utilidad", "text": "", "subsections": []}, {"name": "Caracter\u00edsticas", "text": "", "subsections": []}, {"name": "Ventajas de usar un paradigma funcional", "text": "", "subsections": []}, {"name": "Lenguajes funcionales", "text": "", "subsections": []}, {"name": "Uso en la industria", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Programaci%C3%B3n_imperativa", "title": "Programaci\u00f3n imperativa", "summary": "En ciencias de la computaci\u00f3n se denomina programaci\u00f3n imperativa a un paradigma de programaci\u00f3n de software que utiliza f\u00f3rmulas que alteran el estado de un programa.\n\nLa programaci\u00f3n imperativa se considera el paradigma de programaci\u00f3n m\u00e1s antiguo. Seg\u00fan este, un programa es \u00abuna secuencia claramente definida de instrucciones para un ordenador\u00bb.[1]\u200b\n\n", "sections": [{"name": "Funcionamiento", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Programaci%C3%B3n_orientada_a_objetos", "title": "Programaci\u00f3n orientada a objetos", "summary": "\n\nBusca fuentes: \u00abProgramaci\u00f3n orientada a objetos\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nLa programaci\u00f3n orientada a objetos (POO) es un paradigma de programaci\u00f3n que parte del concepto de \"objetos\" como base, los cuales contienen informaci\u00f3n en forma de campos (a veces tambi\u00e9n referidos como atributos cualidades o propiedades) y c\u00f3digo en forma de m\u00e9todos.\n\nLos objetos son capaces de interactuar y modificar los valores contenidos en sus campos o atributos (estado) a trav\u00e9s de sus m\u00e9todos (comportamiento).[1]\u200b\n\nMuchos de los objetos predise\u00f1ados de los lenguajes de programaci\u00f3n actuales permiten la agrupaci\u00f3n en bibliotecas o librer\u00edas, sin embargo, muchos de estos lenguajes permiten al usuario la creaci\u00f3n de sus propias bibliotecas.\n\nAlgunas caracter\u00edsticas clave de la programaci\u00f3n orientada a objetos son herencia, cohesi\u00f3n, abstracci\u00f3n, polimorfismo, acoplamiento y encapsulamiento.\n\nSu uso se populariz\u00f3 a principios de la d\u00e9cada de 1990. En la actualidad, existe una gran variedad de lenguajes de programaci\u00f3n que soportan la orientaci\u00f3n a objetos, estando la mayor\u00eda de \u00e9stos basados en el concepto de clases e instancias.\n\n", "sections": [{"name": "Introducci\u00f3n", "text": "", "subsections": []}, {"name": "Origen", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "Conceptos fundamentales", "text": "", "subsections": []}, {"name": "Caracter\u00edsticas de la POO", "text": "", "subsections": []}, {"name": "Cr\u00edticas", "text": "", "subsections": []}, {"name": "Resumen", "text": "", "subsections": []}, {"name": "Tipos", "text": "", "subsections": []}, {"name": "Algunos lenguajes orientados a objetos", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Notas y referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/PyGTK", "title": "PyGTK", "summary": "\nPyGTK es un binding de la biblioteca gr\u00e1fica GTK para el lenguaje de programaci\u00f3n Python. La biblioteca GTK se usa para desarrollar el entorno gr\u00e1fico GNOME, as\u00ed como sus aplicaciones, a la vez que algunos otros entornos gr\u00e1ficos. La biblioteca GTK permite el desarrollo sencillo de interfaces gr\u00e1ficas y su uso conjunto con Python permite el desarrollo r\u00e1pido de aplicaciones gr\u00e1ficas potentes.\n\n", "sections": [{"name": "Ejemplos", "text": "", "subsections": []}, {"name": "Aplicaciones que usan PyGTK", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/PyPI", "title": "\u00cdndice de paquetes de Python", "summary": "El Python Package Index o PyPI es el repositorio de software oficial para aplicaciones de terceros en el lenguaje de programaci\u00f3n \nPython. Los desarrolladores de Python pretenden que sea un cat\u00e1logo exhaustivo de todos los paquetes de Python escritos en c\u00f3digo abierto[1]\u200b\n\nPyPI es an\u00e1logo a CPAN para Perl, o PEAR para PHP. Existen diversas herramientas para administrar los m\u00f3dulos instalados en Python que\nutilizan PyPI como su repositorio principal, entre ellas EasyInstall, pip, y PyPM\n\nAntiguamente, durante el desarrollo y los primeros tiempos de PyPI, este repositorio era conocido como la tienda de queso (Cheeseshop),\nen referencia a un sketch del grupo Monty Python.\n\nEn 2010, el repositorio sigue siendo un solo servidor en los Pa\u00edses Bajos.[2]\u200b Todo el tr\u00e1fico pas\u00f3 a ser servido desde una plataforma web m\u00e1s moderna, Warehouse[3]\u200b y la antigua web se cerr\u00f3 al final de ese mes.[4]\u200b Todos los paquetes fueron migrados y sus historiales preservados.[5]\u200b\n\nEl 16 de abril de 2018,[6]\u200b todo el tr\u00e1fico de PyPI comenz\u00f3 a ser atendido por una plataforma de sitio web m\u00e1s moderna: Warehouse.[7]\u200b El sitio web heredado se desactiv\u00f3 a fines de ese mes. Todos los paquetes existentes se migraron a la nueva plataforma y se conservaron sus historiales.\n\n", "sections": [{"name": "Uso de PyPI", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/PyPy", "title": "PyPy", "summary": "\nEste aviso fue puesto el 26 de febrero de 2021.\n\nPythonRPython\nPyPy es un int\u00e9rprete y compilador JIT para el lenguaje Python, que se enfoca en la velocidad y eficiencia, y es 100% compatible con el int\u00e9rprete original CPython. \n\n", "sections": [{"name": "Detalles y motivaci\u00f3n", "text": "", "subsections": []}, {"name": "Estado del Proyecto", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/PyQt", "title": "PyQt", "summary": "\n\nPythonC++\nPyQt es un binding de la biblioteca gr\u00e1fica Qt para el lenguaje de programaci\u00f3n Python. La biblioteca est\u00e1 desarrollada por la firma brit\u00e1nica Riverbank Computing y est\u00e1 disponible para Windows, GNU/Linux y Mac OS X bajo diferentes licencias.\n\nEn agosto de 2009, tras intentar negociar con Riverbank Computing la liberaci\u00f3n de PyQt bajo licencia LGPL sin conseguirlo, Nokia,\npropietaria de Qt, libera bajo esta licencia un binding similar, llamado PySide.\n\n", "sections": [{"name": "Ejemplo simple", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/PySide", "title": "PySide", "summary": "\nPySide es una biblioteca para Python que hace de binding para las herramientas de interfaz gr\u00e1fica de usuario (GUI) de Qt. Es una de las alternativas para programar GUI en Python, en vez de usar Tkinter el cual es usado por Python. Otras alternativas similares son PyGTK, PyQt y wxPython. Como Qt, PySide es software libre.\n\nPySide fue liberado bajo la licencia LGPL en agosto de 2009 por Nokia,[2]\u200b (expropietaria de las herramientas de Qt) despu\u00e9s de que Nokia no alcanzara un acuerdo con los desarrolladores de PyQt, Riverbank Computing, para que esta \u00faltima cambiara los t\u00e9rminos de licencia de PyQt para incluir LGPL como licencia alternativa.\n\nPySide soporta Linux/X11, Mac OS X, MeeGo, Windows y Maemo.\n\n", "sections": [{"name": "Ejemplo Hola Mundo", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Pygame", "title": "Pygame", "summary": "Pygame es un conjunto de m\u00f3dulos del lenguaje Python que permiten la creaci\u00f3n de videojuegos en dos dimensiones de una manera sencilla. Est\u00e1 orientado al manejo de sprites.\n\nGracias al lenguaje, se puede prototipar y desarrollar r\u00e1pidamente. Esto se puede comprobar en las competiciones que se disputan en l\u00ednea, donde es cada vez m\u00e1s usado. Los resultados pueden llegar a ser profesionales.\n\nTambi\u00e9n puede utilizarse para crear otros programas multimedia o interfaces gr\u00e1ficas de usuario. Pygame est\u00e1 basado en la librer\u00eda SDL (2.24.2 en la versi\u00f3n actual)\n\nFunciona como interfaz de las bibliotecas SDL.\n\n", "sections": [{"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Pyomo", "title": "Pyomo", "summary": "Pyomo es una colecci\u00f3n de paquetes de software de Python para formular modelos de optimizaci\u00f3n.[1]\u200b[2]\u200b\n\nPyomo fue desarrollado por William Hart y Jean-Paul Watson en el Laboratorio Nacional de Sandia y por David Woodruff en Universitarios de California, Davis. Significativas extensiones fueron desarrolladas \npor John Siirola en Laboratorio nacional de Sandia y por Carl Laird \nen la Universidad Purdue. Pyomo es un proyecto de c\u00f3digo abierto \nlibremente disponible, y est\u00e1 licenciado con la licencia BSD.\nPyomo es desarrollado como parte del proyecto COIN-OR. \nEs adem\u00e1s un paquete de software de c\u00f3digo abierto muy popular que es \nusado por gran variedad de agencias gubernamentales e instituciones \nacad\u00e9micas.\n\n", "sections": [{"name": "Caracter\u00edsticas", "text": "", "subsections": []}, {"name": "Software relacionado", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Python_License", "title": "Licencia Python", "summary": "La Licencia Python (en ingl\u00e9s, Python License) es una licencia de software ya en desuso creada por la Corporaci\u00f3n para las Iniciativas de Investigaci\u00f3n (en ingl\u00e9s, Corporation for National Research Initiatives). Utilizada en las versiones 1.6 y 2.0 del lenguaje de programaci\u00f3n Python, ambos liberados en el a\u00f1o 2000. La Licencia Python es similar a la Licencia BSD, pero aunque se trata de una Licencia de software libre, la forma que est\u00e1 redactada no la hace compatible con la GNU General Public License (GPL) que es utilizada por la mayor\u00eda de los proyectos incluyendo el kernel Linux. Por esta raz\u00f3n CNRI retir\u00f3 la licencia en el 2001, a favor de la Python Software Foundation License.\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Python_Software_Foundation", "title": "Python Software Foundation", "summary": "La Python Software Foundation (PSF) es una organizaci\u00f3n sin fines de lucro creada el 6 de marzo de 2001[1]\u200b dedicada al lenguaje de programaci\u00f3n Python. La misi\u00f3n de la fundaci\u00f3n es fomentar el desarrollo de la comunidad Python.[2]\u200b Es responsable de varios procesos dentro de la comunidad, como el desarrollo de Python, la administraci\u00f3n de los derechos intelectuales y de obtener fondos.\n\n", "sections": [{"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Python_Software_Foundation_License", "title": "Python Software Foundation License", "summary": "\n\nS\u00ed\nLa Python Software Foundation License, o PSFL por sus siglas en ingl\u00e9s, es una licencia de software libre permisiva, al estilo de la licencia BSD, es decir, que cumple con los requisitos OSI para ser declarada licencia de software libre; adem\u00e1s, es compatible con la licencia GPL. A diferencia de la licencia GPL, y como la mayor\u00eda de licencias tipo BSD, la licencia PSFL no es una licencia copyleft, y permite modificaciones del c\u00f3digo fuente, as\u00ed como la creaci\u00f3n de trabajos derivados, sin requerir que ni las modificaciones ni los trabajos derivados tengan que ser a su vez de c\u00f3digo abierto. La licencia PSFL est\u00e1 dentro de las listas de licencias aprobadas tanto por la Free Software Foundation como por la Open Source Initiative.\n\nEl PSF se enfoca en empoderar y apoyar a las personas dentro de la comunidad de Python con programas de subvenciones que apoyan sprints, conferencias, reuniones, grupos de usuarios y el desarrollo de Python en todo el mundo. Python Software Foundation (El PSF) ejecuta PyCon US, la principal conferencia comunitaria de Python.[1]\u200b El PSF es el punto de contacto principal para las organizaciones que desean trabajar con Python, apoyar Python o patrocinar el desarrollo de Python.\n\nLas versiones m\u00e1s antiguas de Python se encontraban bajo la as\u00ed llamada Python license, que era incompatible con la GPL. La raz\u00f3n aducida por la FSF para esta incompatibilidad es que en la licencia se estipulaba que \u201cesta licencia de Python se rige por las leyes del Estado de Virginia, en los Estados Unidos de Am\u00e9rica, mientras que la GPL no admite esto\u201d.[2]\u200b\n\nEn 2001, el a\u00f1o en el que el creador de Python, Guido van Rossum, cambi\u00f3 la licencia para arreglar esta incompatibilidad, fue galardonado con el premio \"FSF Award for the Advancement of Free Software\".[3]\u200b\n\n", "sections": [{"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Pythonidae", "title": "Pythonidae", "summary": "\n\u00a0\n\nFitzinger, 1826\nV\u00e9ase texto.\n\nLos pit\u00f3nidos o pitones (Pythonidae) son una familia de serpientes constrictoras propias del paleotr\u00f3pico. Otras fuentes consideran a este grupo una subfamilia de la familia de las boas (Boidae) (subfamilia Pythoninae).[1]\u200b Las pitones se pueden distinguir de las boas en que tienen dientes en el premaxilar, un peque\u00f1o hueso en la parte frontal de la mand\u00edbula superior. La mayor\u00eda de las boas dan a luz cr\u00edas vivas, mientras que las pitones ponen huevos. Algunas variedades pueden llegar a ser muy largas: hasta ocho metros. Ciertas especies de boas de arena (subfamilia Ericinae) son llamadas err\u00f3neamente pitones.\n\n", "sections": [{"name": "Lista de g\u00e9neros", "text": "", "subsections": []}, {"name": "Comportamiento", "text": "", "subsections": []}, {"name": "Reproducci\u00f3n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Qt_(biblioteca)", "title": "Qt (biblioteca)", "summary": "\n\n[\n]\nQt Company (2014-presente)Qt Project (2011\u2013presente)\nQt MessageQt User InterfaceQt Translation source fileQt Assistant Documentation ProfileQt Assistant Content FileQt Resource CollectionQt Jambi User Interface\nQt es un framework multiplataforma orientado a objetos ampliamente usado para desarrollar programas (software) que utilicen interfaz gr\u00e1fica de usuario, as\u00ed como tambi\u00e9n diferentes tipos de herramientas para la l\u00ednea de comandos y consolas para servidores que no necesitan una interfaz gr\u00e1fica de usuario.\n\nQt es desarrollada como un software libre y de c\u00f3digo abierto a trav\u00e9s de Qt Project, donde participa tanto la comunidad, como desarrolladores de Nokia, Digia y otras empresas.[3]\u200b Anteriormente, era desarrollado por la divisi\u00f3n de software de Qt de Nokia, que entr\u00f3 en vigor despu\u00e9s de la adquisici\u00f3n por parte de Nokia de la empresa noruega Trolltech, el productor original de Qt, el 17 de junio de 2008.[4]\u200b Qt es distribuida bajo los t\u00e9rminos de GNU Lesser General Public License y otras. Por otro lado, Digia est\u00e1 a cargo de las licencias comerciales de Qt desde marzo de 2011.\n\nQt es utilizada en KDE Plasma, entorno de escritorio para sistemas como GNU/Linux o FreeBSD, entre otros.\n\n", "sections": [{"name": "Prop\u00f3sitos y caracter\u00edsticas", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "Plataformas", "text": "", "subsections": []}, {"name": "Bindings", "text": "", "subsections": []}, {"name": "Ejemplo de programaci\u00f3n", "text": "", "subsections": []}, {"name": "Usos", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/RPython", "title": "PyPy", "summary": "\nEste aviso fue puesto el 26 de febrero de 2021.\n\nPythonRPython\nPyPy es un int\u00e9rprete y compilador JIT para el lenguaje Python, que se enfoca en la velocidad y eficiencia, y es 100% compatible con el int\u00e9rprete original CPython. \n\n", "sections": [{"name": "Detalles y motivaci\u00f3n", "text": "", "subsections": []}, {"name": "Estado del Proyecto", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Recolecci%C3%B3n_de_basura", "title": "Recolector de basura", "summary": "Un recolector de basura (del ingl\u00e9s garbage collector) es un mecanismo impl\u00edcito de gesti\u00f3n de memoria implementado en algunos lenguajes de programaci\u00f3n de tipo interpretado o semiinterpretado.\n\n", "sections": [{"name": "Breve rese\u00f1a hist\u00f3rica", "text": "", "subsections": []}, {"name": "Contexto", "text": "", "subsections": []}, {"name": "Funcionamiento", "text": "", "subsections": []}, {"name": "Ventajas y desventajas", "text": "", "subsections": []}, {"name": "Implementaci\u00f3n", "text": "", "subsections": []}, {"name": "Ejemplos de lenguajes con recolector de basura", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Reflexi%C3%B3n_(inform%C3%A1tica)", "title": "Reflexi\u00f3n (inform\u00e1tica)", "summary": "En inform\u00e1tica, reflexi\u00f3n (o reflexi\u00f3n computacional) es la capacidad que tiene un programa para observar y opcionalmente modificar su estructura de alto nivel.\n\nNormalmente, la reflexi\u00f3n es din\u00e1mica o en tiempo de ejecuci\u00f3n, aunque algunos lenguajes de programaci\u00f3n permiten reflexi\u00f3n est\u00e1tica o en tiempo de compilaci\u00f3n. Es m\u00e1s com\u00fan en lenguajes de programaci\u00f3n de alto nivel ejecut\u00e1ndose sobre una m\u00e1quina virtual, como Smalltalk o Java, y menos com\u00fan en lenguajes como C.\n\nEn un sentido m\u00e1s amplio, la reflexi\u00f3n es una actividad computacional que razona sobre su propia computaci\u00f3n.\n\nCuando el c\u00f3digo fuente de un programa se compila, normalmente se pierde la informaci\u00f3n sobre la estructura del programa conforme se genera el c\u00f3digo de bajo nivel (normalmente lenguaje ensamblador). Si un sistema permite reflexi\u00f3n, se preserva la estructura como metadatos en el c\u00f3digo generado. Dependiendo de la implementaci\u00f3n, el c\u00f3digo con reflexi\u00f3n tiende a ser m\u00e1s lento que el que no lo tiene.\n\nEn los lenguajes que no distinguen entre tiempo de ejecuci\u00f3n y tiempo de compilaci\u00f3n (como las distintas variantes de Lisp), no hay diferencia entre compilaci\u00f3n o interpretaci\u00f3n de c\u00f3digo y reflexi\u00f3n.\n\n", "sections": [{"name": "Implementaci\u00f3n", "text": "", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Ruby", "title": "Ruby", "summary": "\n[\n]\nRuby es un lenguaje de programaci\u00f3n interpretado, reflexivo y orientado a objetos, creado por el programador japon\u00e9s Yukihiro \"Matz\" Matsumoto, quien comenz\u00f3 a trabajar en Ruby en 1993, y lo present\u00f3 p\u00fablicamente en 1995. Combina una sintaxis inspirada en Python y Perl con caracter\u00edsticas de programaci\u00f3n orientada a objetos similares a Smalltalk. Comparte tambi\u00e9n funcionalidad con otros lenguajes de programaci\u00f3n como Lisp, Lua, Dylan y CLU. Ruby es un lenguaje de programaci\u00f3n interpretado en una sola pasada y su implementaci\u00f3n oficial es distribuida bajo una licencia de software libre.\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Filosof\u00eda", "text": "", "subsections": []}, {"name": "Sem\u00e1ntica", "text": "", "subsections": []}, {"name": "Caracter\u00edsticas", "text": "", "subsections": []}, {"name": "Sintaxis", "text": "", "subsections": []}, {"name": "Licencia", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Scheme", "title": "Scheme", "summary": "\n\nBusca fuentes: \u00abScheme\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\n\nScheme es un lenguaje de programaci\u00f3n funcional (si bien impuro pues sus estructuras de datos no son inmutables) y un dialecto de Lisp. Fue desarrollado por Guy L. Steele y Gerald Jay Sussman en la d\u00e9cada de los setenta e introducido en el mundo acad\u00e9mico a trav\u00e9s de una serie de art\u00edculos conocidos como los Lambda Papers de Sussman y Steele.\n\nLa filosof\u00eda de Scheme es minimalista. Su objetivo no es acumular un gran n\u00famero de funcionalidades, sino evitar las debilidades y restricciones que hacen necesaria su adici\u00f3n. As\u00ed, Scheme proporciona el m\u00ednimo n\u00famero posible de nociones primitivas, construyendo todo lo dem\u00e1s a partir de un reducido n\u00famero de abstracciones. Por ejemplo, el mecanismo principal para el control de flujo son las llamadas recursivas.\n\nScheme fue el primer dialecto de Lisp que us\u00f3 \u00e1mbito est\u00e1tico, tambi\u00e9n conocido como \u00e1mbito l\u00e9xico, (en lugar de din\u00e1mico) de forma exclusiva. Tambi\u00e9n fue uno de los primeros lenguajes de programaci\u00f3n con continuaciones expl\u00edcitas, un mecanismo para guardar y usar el estado entero de un programa en un momento determinado. Scheme ofrece tambi\u00e9n gesti\u00f3n autom\u00e1tica de memoria (recolecci\u00f3n de basura).\n\nLas listas son la estructura de datos b\u00e1sica del lenguaje, que tambi\u00e9n ofrece arrays entre sus tipos predefinidos. Debido a su especificaci\u00f3n minimalista, no hay sintaxis expl\u00edcita para crear registros o estructuras, o para programaci\u00f3n orientada a objetos, pero muchas implementaciones ofrecen dichas funcionalidades.\n\nScheme se llamaba originalmente \"Schemer\", siguiendo la tradici\u00f3n de los lenguajes Planner y Conniver. Su nombre actual se debe a que sus autores usaban el sistema operativo ITS, que limitaba la longitud de los nombres de fichero a 6 caracteres.\n\n", "sections": [{"name": "Ventajas de Scheme", "text": "", "subsections": []}, {"name": "Desventajas de Scheme", "text": "", "subsections": []}, {"name": "Est\u00e1ndares", "text": "", "subsections": []}, {"name": "Elementos del lenguaje", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/SciPy", "title": "SciPy", "summary": "\n\nPythonCFortranC++Cython\nSciPy es una biblioteca libre y de c\u00f3digo abierto para Python. Se compone de herramientas y algoritmos matem\u00e1ticos. Se cre\u00f3 a partir de la colecci\u00f3n original de Travis Oliphant, que se compon\u00eda de m\u00f3dulos de extensi\u00f3n para Python y fue lanzada en 1999 bajo el nombre de Multipack, llamada as\u00ed por los paquetes netlib que reun\u00edan a ODEPACK, QUADPACK, y MINPACK.\n\nSciPy contiene m\u00f3dulos para optimizaci\u00f3n, \u00e1lgebra lineal, integraci\u00f3n, interpolaci\u00f3n, funciones especiales, FFT, procesamiento de se\u00f1ales y de imagen, resoluci\u00f3n de ODEs y otras tareas para la ciencia e ingenier\u00eda.\n\nSciPy se basa en el objeto de matriz NumPy y es parte del conjunto NumPy, que incluye herramientas como Matplotlib, Pandas y SymPy, y un conjunto en expansi\u00f3n de bibliotecas de computaci\u00f3n cient\u00edfica. Este conjunto est\u00e1 dirigido al mismo tipo de usuarios que los de aplicaciones como MATLAB, GNU Octave, y Scilab. A veces tambi\u00e9n se hace referencia a este conjunto de herramientas y bibliotecas como SciPy.[1]\u200b\n\nSciPy tambi\u00e9n es un conjunto de conferencias para usuarios y desarrolladores de estas herramientas: SciPy, en los Estados Unidos; EuroSciPy, en Europa; y SciPy.in, en la India.[2]\u200b La empresa Enthought origin\u00f3 la conferencia SciPy en Estados Unidos y continu\u00f3 patrocinando muchas de las conferencias internacionales, as\u00ed como el alojamiento del sitio web de SciPy.\n\n", "sections": [{"name": "Estructuras de datos", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Sentencia_condicional", "title": "Sentencia condicional", "summary": "\n\nBusca fuentes: \u00abSentencia condicional\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nLos tipos m\u00e1s conocidos de sentencias condicionales son el SI..ENTONCES (if..then), el SI..ENTONCES..SI NO (if..then..else) y el SEG\u00daN (case o switch), aunque tambi\u00e9n podr\u00edamos mencionar al manejo de excepciones como una alternativa m\u00e1s moderna para evitar el \"anidamiento\" de carne condicionales.\n\nLas sentencias condicionales constituyen, junto con los bucles, los pilares de la programaci\u00f3n estructurada, y su uso es una evoluci\u00f3n de una sentencia en lenguaje ensamblador que ejecutaba la siguiente l\u00ednea o no en funci\u00f3n del valor de una condici\u00f3n.\n\n", "sections": [{"name": "Lanzamiento de errores", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Servidor_web", "title": "Servidor web", "summary": "Un servidor web o servidor HTTP es un programa inform\u00e1tico que procesa una aplicaci\u00f3n del lado del servidor, realizando conexiones bidireccionales o unidireccionales y s\u00edncronas o as\u00edncronas con el cliente y generando o cediendo una respuesta en cualquier lenguaje o aplicaci\u00f3n del lado del cliente. El c\u00f3digo recibido por el cliente es renderizado por un navegador web. Para la transmisi\u00f3n de todos estos datos suele utilizarse alg\u00fan protocolo. Generalmente se usa el protocolo HTTP para estas comunicaciones, perteneciente a la capa de aplicaci\u00f3n del modelo OSI. El t\u00e9rmino tambi\u00e9n se emplea para referirse a la computadora donde se ejecutan esas tareas.\n\n", "sections": [{"name": "Arquitectura", "text": "", "subsections": []}, {"name": "Funcionamiento", "text": "", "subsections": []}, {"name": "Aplicaci\u00f3n del lado del servidor", "text": "", "subsections": []}, {"name": "Servidor web local", "text": "", "subsections": []}, {"name": "Software", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Simple_API_for_XML", "title": "Simple API for XML", "summary": "SAX son las siglas de \"Simple API for XML\", originalmente una API \u00fanicamente para el lenguaje de programaci\u00f3n Java que despu\u00e9s se convirti\u00f3 en la API est\u00e1ndar de facto para usar XML en JAVA. Existen versiones de SAX no s\u00f3lo para JAVA, sino tambi\u00e9n para otros lenguajes de programaci\u00f3n (como Python).\n\n\n", "sections": [{"name": "Analizador o parser SAX", "text": "", "subsections": []}, {"name": "Ventaja y desventajas", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Sistema_de_tipos", "title": "Sistema de tipos", "summary": "\n\nBusca fuentes: \u00abSistema de tipos\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nEn ciencias de la computaci\u00f3n, un sistema de tipos define c\u00f3mo un lenguaje de programaci\u00f3n clasifica los valores y las expresiones en tipos, c\u00f3mo se pueden manipular estos tipos y c\u00f3mo interact\u00faan. Un tipo de dato indica un conjunto de valores que tienen el mismo significado gen\u00e9rico o prop\u00f3sito (aunque algunos tipos, como los tipos de datos abstractos y tipos de datos funci\u00f3n tal vez no representen valores en el programa que se est\u00e1 ejecutando). Los sistemas de tipificaci\u00f3n var\u00edan significativamente entre lenguajes, siendo quiz\u00e1s las m\u00e1s importantes variaciones las que est\u00e9n en sus propias implementaciones de la sint\u00e1ctica en tiempo de compilaci\u00f3n y la operativa en tiempo de ejecuci\u00f3n.\n\nUn compilador puede usar el tipo est\u00e1tico de un valor para optimizar el almacenamiento que necesita y la elecci\u00f3n de los algoritmos para las operaciones sobre ese valor. Por ejemplo, en muchos compiladores de C el tipo de dato \"flotante\" se representa en 32 bits, de acuerdo con la especificaci\u00f3n IEEE para los n\u00fameros de coma flotante de simple precisi\u00f3n. Entonces, C usa operaciones espec\u00edficas de coma flotante sobre estos valores (suma de coma flotante, multiplicaci\u00f3n, etc.).\n\nEl rango del tipo de dato limita y la forma de su evaluaci\u00f3n afecta en el \"tipado\" del lenguaje. Adem\u00e1s, un lenguaje de programaci\u00f3n puede asociar una operaci\u00f3n concreta con diferentes algoritmos para cada tipo de dato en el caso del polimorfismo. En matem\u00e1ticas y l\u00f3gica, la teor\u00eda de tipos es el estudio de los sistemas de tipos, aunque los sistemas de tipos de datos concretos de los lenguajes de programaci\u00f3n se originaron a partir de los problemas t\u00e9cnicos de las arquitecturas del ordenador, implementaci\u00f3n del compilador y dise\u00f1o del lenguaje.\n\n", "sections": [{"name": "B\u00e1sicos", "text": "", "subsections": []}, {"name": "Chequeo de tipificaci\u00f3n", "text": "", "subsections": []}, {"name": "Controversia", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Sistema_operativo", "title": "Sistema operativo", "summary": "Un sistema operativo (SO) es el conjunto de programas de un sistema inform\u00e1tico que gestiona los recursos del hardware y provee servicios a los programas de aplicaci\u00f3n de software. Estos programas se ejecutan en modo privilegiado respecto de los restantes.[1]\u200b\n\nUno de los prop\u00f3sitos del sistema operativo que gestiona el n\u00facleo intermediario consiste en gestionar los recursos de localizaci\u00f3n y protecci\u00f3n de acceso del hardware, hecho que alivia a los programadores de aplicaciones de tener que tratar con estos detalles. La mayor\u00eda de los aparatos electr\u00f3nicos que utilizan microprocesadores para funcionar, llevan incorporado un sistema operativo (tel\u00e9fonos m\u00f3viles, reproductores de DVD, computadoras, enrutadores, etc.). En cuyo caso, son manejados mediante una interfaz gr\u00e1fica de usuario, un gestor de ventanas o un entorno de escritorio, si es un celular, mediante una consola o control remoto si es un DVD y, mediante una l\u00ednea de comandos o navegador web si es un enrutador.\n\nEl sistema operativo de escritorio dominante es Microsoft Windows con una cuota de mercado de alrededor del 75,88%. macOS de Apple Inc. ocupa el segundo lugar (13,23%), y las variedades de GNU/Linux est\u00e1n colectivamente en tercer lugar (1,57%).[2]\u200b En el sector m\u00f3vil (incluidos tel\u00e9fonos inteligentes y tabletas), la participaci\u00f3n de Android es de hasta un 70% en el a\u00f1o 2017.[3]\u200b Las distribuciones Linux son dominantes en los sectores de servidores y supercomputaci\u00f3n.[4]\u200b Existen otras clases especializadas de sistemas operativos, como los sistemas integrados y en tiempo real, para muchas aplicaciones.\n\n", "sections": [{"name": "Funciones principales", "text": "", "subsections": []}, {"name": "Antecedentes", "text": "", "subsections": []}, {"name": "Llamadas al sistema", "text": "", "subsections": []}, {"name": "Componentes", "text": "", "subsections": []}, {"name": "Clasificaci\u00f3n", "text": "", "subsections": []}, {"name": "Denominaciones err\u00f3neas", "text": "", "subsections": []}, {"name": "Sistemas operativos para PC", "text": "", "subsections": []}, {"name": "Sistemas operativos para dispositivos m\u00f3viles", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Notas", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Smalltalk", "title": "Smalltalk", "summary": "\nSmalltalk es un lenguaje reflexivo de programaci\u00f3n, orientado a objetos y con tipado din\u00e1mico. Por sus caracter\u00edsticas, Smalltalk puede ser considerado tambi\u00e9n como un entorno de objetos, donde incluso el propio sistema es un objeto. Metaf\u00f3ricamente, se puede considerar que un Smalltalk es un mundo virtual donde viven objetos que se comunican entre s\u00ed, mediante el env\u00edo de mensajes.\n\nUn sistema Smalltalk est\u00e1 compuesto por:\n\nUna M\u00e1quina virtual\nUn archivo llamado \"Imagen\", que contiene a todos los objetos del sistema.\nUn lenguaje de programaci\u00f3n (tambi\u00e9n conocido como Smalltalk).\nUna enorme biblioteca de \"objetos reusables\".\nY generalmente, un entorno de desarrollo que adem\u00e1s puede funcionar como un sistema en tiempo de ejecuci\u00f3n.\nSmalltalk obtuvo el segundo lugar para \"lenguaje de programaci\u00f3n m\u00e1s querido\" en las encuestas para desarrolladores de Stack Overflow en 2017.[1]\u200b\n\n", "sections": [{"name": "Historia", "text": "", "subsections": []}, {"name": "Terminolog\u00eda", "text": "", "subsections": []}, {"name": "Caracter\u00edsticas", "text": "", "subsections": []}, {"name": "El entorno Smalltalk", "text": "", "subsections": []}, {"name": "Sintaxis", "text": "", "subsections": []}, {"name": "Recolecci\u00f3n de basura", "text": "", "subsections": []}, {"name": "Reflexi\u00f3n computacional", "text": "", "subsections": []}, {"name": "Ejemplos de Smalltalk", "text": "", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Software", "title": "Software", "summary": "Se conoce como software (pronunciaci\u00f3n en ingl\u00e9s:\u00a0/\u02c8s\u0254ft\u02ccw\u025br/),[1]\u200b logicial o soporte l\u00f3gico al sistema formal de un sistema inform\u00e1tico, que comprende el conjunto de los componentes l\u00f3gicos necesarios que hace posible la realizaci\u00f3n de tareas espec\u00edficas, en contraposici\u00f3n a los componentes f\u00edsicos que son llamados hardware. La interacci\u00f3n entre el software y el hardware hace operativo un ordenador (u otro dispositivo), es decir, el software env\u00eda instrucciones que el hardware ejecuta, haciendo posible su funcionamiento.\n\nLos componentes l\u00f3gicos incluyen, entre muchos otros, las aplicaciones inform\u00e1ticas, tales como el procesador de texto, que permite al usuario realizar todas las tareas concernientes a la edici\u00f3n de textos; el llamado software de sistema, tal como el sistema operativo, que b\u00e1sicamente permite al resto de los programas funcionar adecuadamente, facilitando tambi\u00e9n la interacci\u00f3n entre los componentes f\u00edsicos y el resto de las aplicaciones, y proporcionando una interfaz con el usuario.[2]\u200b\n\nEl software, en su gran mayor\u00eda, est\u00e1 escrito en lenguajes de programaci\u00f3n de alto nivel, ya que son m\u00e1s f\u00e1ciles y eficientes para que los programadores los usen, porque son m\u00e1s cercanos al lenguaje natural respecto del lenguaje de m\u00e1quina.[3]\u200b Los lenguajes de alto nivel se traducen a lenguaje de m\u00e1quina utilizando un compilador o un int\u00e9rprete, o bien una combinaci\u00f3n de ambos. El software tambi\u00e9n puede estar escrito en lenguaje ensamblador, que es de bajo nivel y tiene una alta correspondencia con las instrucciones de lenguaje m\u00e1quina; se traduce al lenguaje de la m\u00e1quina utilizando un ensamblador.\n\nEl anglicismo software es el m\u00e1s ampliamente difundido al referirse a este concepto, especialmente en la jerga t\u00e9cnica, en tanto que el t\u00e9rmino sin\u00f3nimo \u00ablogicial\u00bb, derivado del t\u00e9rmino franc\u00e9s logiciel, es utilizado mayormente en pa\u00edses y zonas de influencia francesa.\n\n", "sections": [{"name": "Etimolog\u00eda", "text": "", "subsections": []}, {"name": "Definici\u00f3n de software", "text": "", "subsections": []}, {"name": "Clasificaci\u00f3n del software", "text": "", "subsections": []}, {"name": "Proceso de creaci\u00f3n del software", "text": "", "subsections": []}, {"name": "Car\u00e1cter evolutivo del software", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Squid_(programa)", "title": "Squid (programa)", "summary": "\nCC++\nSquid es un servidor proxy para web con cach\u00e9. Es una de las aplicaciones m\u00e1s populares y de referencia para esta funci\u00f3n, es un desarrollo en software libre publicado bajo licencia GPL. Entre sus utilidades est\u00e1 la de mejorar el rendimiento de las conexiones de empresas y particulares a Internet guardando en cach\u00e9 peticiones recurrentes a servidores web y DNS, acelerar el acceso a un servidor web determinado o a\u00f1adir seguridad realizando filtrados de tr\u00e1fico.\n\nAunque orientado principalmente a HTTP y HTTPS soporta tambi\u00e9n otros protocolos como FTP e incluso Gopher. Implementa cifrado SSL/TLS tanto en la conexi\u00f3n al servidor web como a los navegadores y cualquier cliente web que lo soporte.\n\nSquid es una aplicaci\u00f3n muy consolidada en Internet. En desarrollo desde los a\u00f1os 1990, se le considera muy completo y robusto y es el software de referencia como servidor proxy-cach\u00e9 de web. Como muchas aplicaciones de software libre est\u00e1 incluido en distribuciones GNU/Linux pero se puede ejecutar tambi\u00e9n en entornos tipo Unix y hay algunas versiones para MS Windows.\n\n", "sections": [{"name": "Caracter\u00edsticas", "text": "", "subsections": []}, {"name": "Proxy Web", "text": "", "subsections": []}, {"name": "Compatibilidad", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Subrutina", "title": "Subrutina", "summary": "En inform\u00e1tica, una subrutina o subprograma (tambi\u00e9n llamada procedimiento, funci\u00f3n, rutina o m\u00e9todo), como idea general, se presenta como un subalgoritmo que forma parte del algoritmo principal, el cual permite resolver una tarea espec\u00edfica. Algunos lenguajes de programaci\u00f3n, como Visual Basic .NET o Fortran, utilizan el nombre funci\u00f3n para referirse a subrutinas que devuelven un valor.\n\n", "sections": [{"name": "Concepto de subrutina", "text": "", "subsections": []}, {"name": "Elementos de la declaraci\u00f3n de una subrutina", "text": "", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Tcl/Tk", "title": "Tcl", "summary": "\n\n[\n]\nTcl (pronunciado /t\u00ed.quel/, originado del acr\u00f3nimo en ingl\u00e9s \"Tool Command Language\" o \"lenguaje de herramientas de comando\", actualmente se escribe como \"Tcl\" en lugar de \"TCL\"), es un lenguaje de script creado por John Ousterhout, que ha sido concebido con una sintaxis sencilla para facilitarse su aprendizaje, sin detrimento de la funcionalidad y expresividad.\n\nSe utiliza principalmente para el desarrollo r\u00e1pido de prototipos, aplicaciones \"script\", interfaces gr\u00e1ficas y pruebas. La combinaci\u00f3n de Tcl con Tk (del ingl\u00e9s Tool Kit) es conocida como Tcl/Tk, y se utiliza para la creaci\u00f3n de interfaces gr\u00e1ficas.\n\n", "sections": [{"name": "Caracter\u00edsticas", "text": "", "subsections": []}, {"name": "Antecedentes", "text": "", "subsections": []}, {"name": "Sintaxis y sem\u00e1ntica fundamental", "text": "", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": []}, {"name": "Desarrollo y ejecuci\u00f3n", "text": "", "subsections": []}, {"name": "Programaci\u00f3n orientada a objetos", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Tim_Peters", "title": "Tim Peters", "summary": " \nTim Peters es un desarrollador de software estadounidense conocido por la creaci\u00f3n del algoritmo de ordenaci\u00f3n h\u00edbrido Timsort y por sus importantes contribuciones al lenguaje de programaci\u00f3n Python y su implementaci\u00f3n original CPython. Como usuario de CPython antes de la versi\u00f3n 1.0, form\u00f3 parte del grupo de los primeros usuarios que contribuyeron al dise\u00f1o detallado del lenguaje en sus primeras etapas.[1]\u200b[2]\u200b\n\nM\u00e1s tarde cre\u00f3 el algoritmo Timsort (basado en un trabajo anterior sobre el uso de la b\u00fasqueda \"al galope\")[3]\u200b que se ha utilizado en Python desde la versi\u00f3n 2.3 [cita requerida], as\u00ed como en otras plataformas inform\u00e1ticas[4]\u200b[5]\u200b[6]\u200b ampliamente utilizadas, incluido el motor V8 JavaScript que impulsa los navegadores web Google Chrome y Chromium, as\u00ed como Node.js.[7]\u200b[8]\u200b Tambi\u00e9n ha aportado los m\u00f3dulos doctest y timeit a la biblioteca est\u00e1ndar de Python.[9]\u200b\n\nPeters tambi\u00e9n escribi\u00f3 el Zen de Python, pensado como una declaraci\u00f3n de la filosof\u00eda de dise\u00f1o de Python, que se incorpor\u00f3 a la literatura oficial de Python como Propuesta de Mejora 20 de Python y en el int\u00e9rprete de Python como un easter egg.[10]\u200b Contribuy\u00f3 con el cap\u00edtulo sobre algoritmos al libro de cocina de Python. De 2001 a 2014 fue miembro activo de la junta directiva de la Python Software Foundation. Peters fue un influyente colaborador de las listas de correo de Python.[11]\u200b Tambi\u00e9n es un contribuyente de alto rango en Stack Overflow, sobre todo por las respuestas relacionadas con Python.[12]\u200b[13]\u200b\n\nEntre los anteriores empleadores de Peters se encuentra Kendall Square Research. Tim Peters recibi\u00f3 el premio al servicio distinguido de la Python Software Foundation en 2017.\n\n", "sections": [{"name": "Ve tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Tipado_din%C3%A1mico", "title": "Tipado din\u00e1mico", "summary": "Un lenguaje de programaci\u00f3n es din\u00e1micamente tipado si una variable puede tomar valores de distintos tipos. La mayor\u00eda de lenguajes de tipado din\u00e1mico son lenguajes interpretados, como Python o Ruby. Un lenguaje que no es din\u00e1micamente tipado se dice que es de tipado est\u00e1tico, o est\u00e1ticamente tipado. Esta separaci\u00f3n se suele confundir con la diferencia entre lenguajes fuertemente tipados y lenguajes d\u00e9bilmente o no tipados.\nEsta caracter\u00edstica estuvo en el lenguaje de programaci\u00f3n \"SmallTalk\".\n\n\n\n", "sections": [{"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Tipado_fuerte", "title": "Tipado fuerte", "summary": "\n\nBusca fuentes: \u00abTipado fuerte\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nUn lenguaje de programaci\u00f3n es fuertemente tipado si no se permiten violaciones de los tipos de datos, es decir, dado el valor de una variable de un tipo concreto, no se puede usar como si fuera de otro tipo distinto a menos que se haga una conversi\u00f3n. No hay una \u00fanica definici\u00f3n de este t\u00e9rmino. Un lenguaje que se dice que no est\u00e1 tipado se refiere a que no est\u00e1 fuertemente tipado.\n\n", "sections": [{"name": "Explicaci\u00f3n detallada", "text": "", "subsections": []}, {"name": "Confusi\u00f3n com\u00fan del concepto", "text": "", "subsections": []}, {"name": "Lenguajes no tipados", "text": "", "subsections": []}, {"name": "Ejemplos de lenguajes fuertemente tipados", "text": "", "subsections": []}, {"name": "Ejemplos de lenguajes no tipados", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Tk", "title": "Tk", "summary": "\n\nTk es una aplicaci\u00f3n libre multiplataforma y un conjunto de controles (widget toolkit). Es una biblioteca de elementos b\u00e1sicos para construir una interfaz gr\u00e1fica de usuario (GUI).\n\nTk fue desarrollado por John Ousterhout como una extensi\u00f3n para el lenguaje de guiones (script) Tcl. Tambi\u00e9n llamado \"bindings\", Tk puede ser usado por otros lenguajes como Perl, Python, y Ruby. Hay dos formas de usar Tk desde Perl: \tel m\u00f3dulo Tcl::Tk Perl que usa Tcl como un puente (este acercamiento proporciona m\u00e1s flexibilidad), y Perl/Tk tiene solo (solamente las extensiones adoptadas de Tcl/Tk disponibles). Python y Ruby tambi\u00e9n usan Tcl como puente para Tk.\n\nTk ha sido portado para correr en la mayor\u00eda de las variantes de Linux, Apple Macintosh, Unix, y Windows. Desde el Tcl/Tk 8, ofrece  \"native look and feel\" (por ejemplo, los men\u00fas y botones son mostrados de forma \u201cnativa\u201d en cualquier plataforma). Tambi\u00e9n, hay varias extensiones que proveen externamente arrastrar y soltar (drag-and-drop), ventanas no-rectangulares y controles originales.\n\nLa m\u00e1s inusual caracter\u00edstica de Tk son sus controles canvas y texto, los cuales proveen capacidades no halladas en casi ning\u00fan conjunto de controles similares.\n\nAl igual que Tcl, Tk soporta Unicode dentro del Plano Multilenguaje B\u00e1sico pero este todav\u00eda no ha sido extendido para manejar Unicode de 32-bit.\n\n", "sections": [{"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Tkinter", "title": "Tkinter", "summary": "Tkinter es un binding de la biblioteca gr\u00e1fica Tcl/Tk para el lenguaje de programaci\u00f3n Python. Se considera un est\u00e1ndar de interfaz gr\u00e1fica de usuario (GUI) para Python y est\u00e1 incluido por defecto con la instalaci\u00f3n para Microsoft Windows.\n\nHoy en d\u00eda, hay otras alternativas disponibles como wxPython, PySimpleGUI, PyQt, PySide y PyGTK que cumplen con todos los est\u00e1ndares de componente visual.\n\n", "sections": [{"name": "Ejemplo", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos (en ingl\u00e9s)", "text": "", "subsections": []}, {"name": "Enlaces externos (en espa\u00f1ol)", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Uni%C3%B3n_de_conjuntos", "title": "Uni\u00f3n de conjuntos", "summary": "A\nB\nA \u222a B\nEn la teor\u00eda de conjuntos, la uni\u00f3n de dos (o m\u00e1s) conjuntos es una operaci\u00f3n que resulta en otro conjunto, cuyos elementos son los mismos de los conjuntos iniciales. Por ejemplo, el conjunto de los n\u00fameros naturales es la uni\u00f3n del conjunto de los n\u00fameros pares positivos P y el conjunto de los n\u00fameros impares positivos I:\n\n\n\n\n\nP\n=\n{\n2\n,\n4\n,\n6\n,\n\u2026\n}\n\n\n{\\displaystyle P=\\{2,4,6,\\ldots \\}}\n\n\n\n\n\n\nI\n=\n{\n1\n,\n3\n,\n5\n,\n\u2026\n}\n\n\n{\\displaystyle I=\\{1,3,5,\\ldots \\}}\n\n\n\n\n\n\n\nN\n\n=\n{\n1\n,\n2\n,\n3\n,\n4\n,\n\u2026\n}\n\n\n{\\displaystyle \\mathbb {N} =\\{1,2,3,4,\\ldots \\}}\n\n\nLa uni\u00f3n de conjuntos se denota por el s\u00edmbolo \n\n\n\n\u222a\n\n\n{\\displaystyle \\cup }\n\n , de modo que por ejemplo:\n\n\n\n\n\n\nN\n\n=\nP\n\u222a\nI\n\n\n{\\displaystyle \\mathbb {N} =P\\cup I}\n\n\n", "sections": [{"name": "Definici\u00f3n", "text": "", "subsections": []}, {"name": "Propiedades", "text": "", "subsections": []}, {"name": "Axioma de la uni\u00f3n", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Variable_(programaci%C3%B3n)", "title": "Variable (programaci\u00f3n)", "summary": "En programaci\u00f3n, una variable est\u00e1 formada por un espacio en el sistema de almacenaje (memoria principal de un ordenador) y un nombre simb\u00f3lico (un identificador) que est\u00e1 asociado a dicho espacio. Ese espacio contiene una cantidad de informaci\u00f3n conocida o desconocida, es decir un valor. El nombre de la variable es la forma usual de referirse al valor almacenado: esta separaci\u00f3n entre nombre y contenido permite que el nombre sea usado independientemente de la informaci\u00f3n exacta que representa. El identificador, en el c\u00f3digo fuente de la computadora puede estar ligado a un valor durante el tiempo de ejecuci\u00f3n y el valor de la variable puede por lo tanto cambiar durante el curso de la ejecuci\u00f3n del programa. El concepto de variables en computaci\u00f3n puede no corresponder directamente al concepto de variables en matem\u00e1tica. El valor de una variable en computaci\u00f3n no es necesariamente parte de una ecuaci\u00f3n o [[F\u00f3rmula (expresi\u00f3n)|f\u00f3rmula como en matem\u00e1ticas. En computaci\u00f3n una variable puede ser utilizada en un proceso repetitivo: puede asign\u00e1rsele un valor en un sitio, ser luego utilizada en otro, y m\u00e1s adelante reasign\u00e1rsele un nuevo valor para m\u00e1s tarde utilizarla de la misma manera. Procedimientos de este tipo son conocidos con el nombre de iteraci\u00f3n. En programaci\u00f3n de computadoras, a las variables, frecuentemente se le asignan nombres largos para hacerlos relativamente descriptivas para su uso, mientras que las variables en matem\u00e1ticas a menudo tienen nombres escuetos, formados por uno o dos caracteres para hacer breve en su transcripci\u00f3n y manipulaci\u00f3n.\n\nEl espacio en el sistema de almacenaje puede ser referido por diferentes identificadores. Esta situaci\u00f3n es conocida entre los angloparlantes como \"aliasing\", y podr\u00eda traducirse como \"sobre nombramiento\" para los hispanoparlantes. Asignarle un valor a una variable utilizando uno de los identificadores cambiar\u00e1 el valor al que se puede acceder a trav\u00e9s de los otros identificadores.\n\nEn el proceso de compilaci\u00f3n de un programa, los compiladores deben transformar el c\u00f3digo escrito por el programador en c\u00f3digo ejecutable. As\u00ed, las variables que son nombradas por el programador con un nombre simb\u00f3lico, como por ejemplo \"x\", deben ser reemplazadas por la ubicaci\u00f3n real de los datos en la memoria del ordenador. \n\nEsto significa que el compilador debe asignar una direcci\u00f3n de memoria espec\u00edfica para cada variable utilizada en el programa, y luego reemplazar el nombre simb\u00f3lico utilizado por el programador por esta direcci\u00f3n de memoria real. De esta manera, cuando el programa comienza a ejecutarse, el ordenador puede encontrar y manipular los datos almacenados en la memoria utilizando estas direcciones de memoria reales. \n\nMientras que el nombre, tipo y ubicaci\u00f3n de una variable permanecen fijos, los datos almacenados en la ubicaci\u00f3n pueden ser cambiados durante la ejecuci\u00f3n del programa.\n\nLas variables no pueden almacenar declaraciones (como \"for\" o \"if\") o funciones que no devuelvan datos. En el caso contrario, devolver\u00e1n error.\n\nLas variables pueden ser de longitud:\n\nFija.- Cuando el tama\u00f1o de la misma no variar\u00e1 a lo largo de la ejecuci\u00f3n del programa. Todas las variables, sean del tipo de dato que sean tienen longitud fija, salvo algunas excepciones \u2014 como las colecciones de otras variables (arrays) o las cadenas.\nVariable.- Cuando el tama\u00f1o de la misma puede variar a lo largo de la ejecuci\u00f3n. T\u00edpicamente colecciones de datos en su mayor\u00eda.\n", "sections": [{"name": "Tipos de datos", "text": "", "subsections": []}, {"name": "Variables y paso de par\u00e1metros a subalgoritmos", "text": "", "subsections": []}, {"name": "Almacenamiento de variables en memoria", "text": "", "subsections": []}, {"name": "\u00c1mbito", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Vector_(inform%C3%A1tica)", "title": "Vector (inform\u00e1tica)", "summary": "En programaci\u00f3n, se le denomina vector, formaci\u00f3n, matriz[1]\u200b[2]\u200b (en ingl\u00e9s array, del cual surge la mala traducci\u00f3n arreglo),[3]\u200b a una zona de almacenamiento contiguo que contiene una serie de elementos del mismo tipo, los elementos de la matriz.[4]\u200b Desde el punto de vista l\u00f3gico una matriz se puede ver como un conjunto de elementos ordenados en fila (o filas y columnas si tuviera dos dimensiones).\n\nEn principio, se puede considerar que todas las matrices son de una dimensi\u00f3n, la dimensi\u00f3n principal, pero los elementos de dicha fila pueden ser a su vez matrices (un proceso que puede ser recursivo), lo que nos permite hablar de la existencia de matrices multidimensionales, aunque las m\u00e1s f\u00e1ciles de imaginar son las de una, dos y tres dimensiones.\n\nDefinici\u00f3n objetiva\nUn vector (matriz) es una colecci\u00f3n ordenada de datos (tanto primitivos u objetos dependiendo del lenguaje). Los vectores (matrices) se emplean para almacenar m\u00faltiples valores en una sola variable, frente a las variables que s\u00f3lo pueden almacenar un valor (por cada variable).\n\nEstas estructuras de datos son adecuadas para situaciones en las que el acceso a los datos se realice de forma aleatoria e impredecible. Por el contrario, si los elementos pueden estar ordenados y se va a utilizar acceso secuencial ser\u00eda m\u00e1s adecuado utilizar una lista, ya que esta estructura puede cambiar de tama\u00f1o f\u00e1cilmente durante la ejecuci\u00f3n de un programa, siendo esta \u00faltima una estructura din\u00e1mica (al no tener un tama\u00f1o definido).[5]\u200b[6]\u200b[7]\u200b[8]\u200b\n\n", "sections": [{"name": "\u00cdndices", "text": "", "subsections": []}, {"name": "Notaci\u00f3n", "text": "", "subsections": []}, {"name": "Forma de acceso", "text": "", "subsections": []}, {"name": "Vectores din\u00e1micos y est\u00e1ticos", "text": "", "subsections": []}, {"name": "Vectores multidimensionales", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Virginia", "title": "Virginia", "summary": "Commonwealth of Virginia\n\n\nEn ingl\u00e9s: \"The Old Dominion\"  (En espa\u00f1ol: \"El Antiguo Dominio\")\n\n37\u00b030\u2032N 79\u00b000\u2032O\ufeff / \ufeff37.5, -79\n\u00a0\u2022 Poblaci\u00f3n\n226\u00a0610\n\n[\n]\n\u00a0(2021)\nMuy alto\nVA\nVirginia, oficialmente Mancomunidad de Virginia (en ingl\u00e9s Commonwealth of Virginia), es uno de los cincuenta estados que, junto con Washington D.\u00a0C., forman los Estados Unidos de Am\u00e9rica. Su capital es Richmond y su ciudad m\u00e1s poblada, Virginia Beach.\n\nEst\u00e1 ubicado en la regi\u00f3n Sur del pa\u00eds, divisi\u00f3n Atl\u00e1ntico Sur, limitando al noroeste con Virginia Occidental, al noreste con el r\u00edo Potomac que lo separa de Maryland y Washington D.\u00a0C., al sur con Carolina del Norte, al suroeste con Tennessee y al oeste con Kentucky. Fue admitido en la Uni\u00f3n el 25 de junio de 1788, como el estado n\u00famero 10.\n\nRecibe su nombre por la reina Isabel I de Inglaterra, quien, al no haber contra\u00eddo nunca matrimonio, era conocida como \u00abla reina virgen\u00bb. El estado es conocido por el apodo de \u00abViejo Dominio\u00bb (Old Dominion) y a veces por el de \u00abMadre de Presidentes\u00bb, por ser el lugar de nacimiento de ocho presidentes estadounidenses (incluidos cuatro de los cinco primeros).\n\nLas ra\u00edces de la Virginia moderna se remontan a la fundaci\u00f3n de la Colonia de Virginia en 1607 por la Compa\u00f1\u00eda de Virginia de Londres. La agricultura, el colonialismo y la esclavitud desempe\u00f1aron papeles significativos en su econom\u00eda y su pol\u00edtica durante los primeros tiempos. Fue la primera colonia inglesa en el Nuevo Mundo y una de las trece colonias que participar\u00edan en la Guerra de Independencia, y posteriormente se convirti\u00f3 en el coraz\u00f3n de la Confederaci\u00f3n en la Guerra Civil estadounidense.\n\nLa capital de la Mancomunidad es Richmond, mientras que Virginia Beach es la ciudad m\u00e1s populosa y el condado de Fairfax es la subdivisi\u00f3n pol\u00edtica con mayor poblaci\u00f3n. De acuerdo con el Censo de los Estados Unidos de 2010, la poblaci\u00f3n del estado era de 8\u00a0001\u00a0024 habitantes.[5]\u200b Aunque tradicionalmente conservadora e hist\u00f3ricamente parte del Sur, la moderna Virginia es un estado pol\u00edticamente competitivo para los dos principales partidos pol\u00edticos nacionales.[6]\u200b\n\nVirginia tiene una econom\u00eda con varios asentamientos importantes, que incluyen El Pent\u00e1gono del Departamento de Defensa y diversas agencias federales en el Norte del estado, bases militares en Hampton Roads, as\u00ed como una producci\u00f3n agr\u00edcola significativa. El llamado \u00abTri\u00e1ngulo Hist\u00f3rico\u00bb incluye los populares destinos tur\u00edsticos de la historia estadounidense de Jamestown, Yorktown y el museo vivo de Colonial Williamsburg.[7]\u200b El crecimiento del sector tecnol\u00f3gico ha hecho de los chips la principal exportaci\u00f3n del estado, con la industria basada en la solidez de sus escuelas p\u00fablicas y de sus universidades.[8]\u200b\n\n", "sections": [{"name": "Geograf\u00eda", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "Demograf\u00eda", "text": "", "subsections": []}, {"name": "Econom\u00eda", "text": "", "subsections": []}, {"name": "Cultura", "text": "", "subsections": []}, {"name": "Medios de comunicaci\u00f3n", "text": "", "subsections": []}, {"name": "Educaci\u00f3n", "text": "", "subsections": []}, {"name": "Sanidad", "text": "", "subsections": []}, {"name": "Ley y gobierno", "text": "", "subsections": []}, {"name": "Pol\u00edtica", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Windows_10", "title": "Windows 10", "summary": "\n\n[\n]\nRama 22H2, Versi\u00f3n 22H2 (10.0.19045.4412)\n14 de mayo de 2024 (2 d\u00edas)[2]\u200b\n\nRama 21H2, Versi\u00f3n 21H2 (10.0.19044.4412)\n\nCanal Insider Release Preview (10.0.19045.3391)\n\nWindows Portable Executable file format, 64-bitNew ExecutableWindows Portable Executable file format, 32-bit\nEst\u00e1ndar: hasta el 14 de octubre de 2025, sujeto a cada versi\u00f3n y actualizaci\u00f3n de caracter\u00edsticas lanzada[5]\u200b[6]\u200b\nWindows 10 es un sistema operativo desarrollado por Microsoft como parte de la familia de sistemas operativos Windows NT.[7]\u200b Fue dado a conocer oficialmente en septiembre de 2014, seguido por una breve presentaci\u00f3n de demostraci\u00f3n en la conferencia Build 2014. Entr\u00f3 en fase beta de prueba en octubre de 2014 y fue lanzado al p\u00fablico en general el 29 de julio de 2015.[8]\u200b\n\nPara animar su adopci\u00f3n, Microsoft anunci\u00f3 su descarga gratuita por un a\u00f1o desde su fecha de lanzamiento, para los usuarios que contasen con copias genuinas de Windows 7 (SP1) o Windows 8.1 Update. En julio de 2015 se habilit\u00f3 una herramienta que permit\u00eda reservar esta actualizaci\u00f3n; dicha herramienta notificaba a cada usuario el momento en el que estar\u00eda lista la descarga de la actualizaci\u00f3n para su dispositivo, para as\u00ed instalar la compilaci\u00f3n 10240, la primera versi\u00f3n estable liberada.[9]\u200b Los participantes en el programa Windows Insider pod\u00edan recibir una licencia de Windows 10, pero con ciertas condiciones, entre ellas que su sistema operativo instalado (7, 8, u 8.1) fuese leg\u00edtimo.[10]\u200b\n\nEsta edici\u00f3n introdujo una arquitectura de aplicaciones \u00abuniversales\u00bb. Desarrolladas con la interfaz Continuum y, posteriormente, con la interfaz Fluent Design, estas aplicaciones pueden ser dise\u00f1adas para ejecutarse en todas las familias de productos de Microsoft con un c\u00f3digo casi id\u00e9ntico (incluyendo computadoras personales, tabletas, tel\u00e9fonos inteligentes, sistemas integrados, Xbox One, Surface Hub y HoloLens). La interfaz de usuario fue revisada para realizar transiciones entre una interfaz orientada al rat\u00f3n y una interfaz orientada a la pantalla t\u00e1ctil basadas en dispositivos de entrada disponibles (particularmente en tabletas). Ambas interfaces incluyen un men\u00fa Inicio actualizado que comprende un dise\u00f1o mezclado de Windows 7 con el dise\u00f1o metro de Windows 8. Tambi\u00e9n se introduce la Vista de Tareas, un sistema de escritorio virtual, el navegador web Microsoft Edge y otras aplicaciones nuevas o actualizadas, un soporte integrado para iniciar sesi\u00f3n a trav\u00e9s de huella digital o reconocimiento facial llamado Windows Hello, nuevas caracter\u00edsticas de seguridad para entornos empresariales, DirectX 12 y WDDM 2.0 para mejorar las capacidades gr\u00e1ficas del sistema operativo para los videojuegos.\n\nMicrosoft describi\u00f3 a Windows 10 tanto un sistema operativo como un servicio que puede recibir actualizaciones en curso para sus caracter\u00edsticas y funcionalidades, adem\u00e1s con la habilidad en los entornos empresariales para recibir actualizaciones no cr\u00edticas en un ritmo m\u00e1s lento, o un soporte a largo plazo que solo recibe actualizaciones cr\u00edticas, tales como parches de seguridad, en el curso de vida de cinco a\u00f1os de soporte general. Terry Myerson, vicepresidente ejecutivo de Windows and Devices Group de Windows, demostr\u00f3 que las metas de este modelo fue reducir la fragmentaci\u00f3n en toda la plataforma de Windows, como Microsoft pretend\u00eda tener Windows 10 instalado en al menos mil millones de dispositivos en los dos o tres a\u00f1os despu\u00e9s de su lanzamiento.[11]\u200b\n\nWindows 10 recibi\u00f3 rese\u00f1as generalmente positivas en el d\u00eda de su lanzamiento. Los cr\u00edticos elogiaron la decisi\u00f3n de Microsoft de retirar la interfaz de usuario introducido por Windows 8 (incluyendo las aplicaciones a pantalla completa y la pantalla Inicio)[12]\u200b en un entorno no t\u00e1ctil para proporcionar una interfaz m\u00e1s orientado al escritorio en la misma l\u00ednea de las versiones anteriores de Windows, aunque la interfaz de usuario de orientaci\u00f3n t\u00e1ctil fue criticada por contener regresiones hacia la interfaz de Windows 8. Los cr\u00edticos tambi\u00e9n elogiaron las mejoras para el software promocional de Windows 10 sobre 8.1, la integraci\u00f3n de Xbox Live, as\u00ed como la funcionalidad y capacidades de Cortana y la sustituci\u00f3n de Internet Explorer con Microsoft Edge (aunque el navegador fue criticado por encontrarse a\u00fan, en estado de desarrollo).[13]\u200b[14]\u200b\n\nLa mayor parte de la cr\u00edtica cay\u00f3 sobre las limitaciones en el usuario para controlar algunas operaciones. En este caso, Windows Update instala las actualizaciones autom\u00e1ticamente. Se report\u00f3 una actualizaci\u00f3n err\u00f3nea, con el c\u00f3digo KB3081424 lanzada en agosto de 2015, que provocaba un error en el registro, esto pudo ser prevenido f\u00e1cilmente por el usuario, pero al no estar disponible dicha funci\u00f3n, provoc\u00f3 molestias entre los usuarios afectados.[15]\u200b Desde la RTM lanzada en 2015 hasta la versi\u00f3n 1809 de octubre de 2018, solo los usuarios de las ediciones Pro y Enterprise pod\u00edan pausar la instalaci\u00f3n de esta y otras actualizaciones; sin embargo, en la versi\u00f3n 1903 de mayo de 2019 la opci\u00f3n para pausarlas lleg\u00f3 a los usuarios de la edici\u00f3n Home. Preocupaciones por la privacidad tambi\u00e9n fueron mencionadas por cr\u00edticos y defensores al ver que los ajustes por defecto permiten el env\u00edo de informaci\u00f3n sobre el usuario a Microsoft y sus socios.\n\nWindows 10 muestra publicidad en varias aplicaciones como el explorador de archivos y la pantalla de bloqueo, algo que mucha gente considera inaceptable.[16]\u200b[17]\u200b Esto no aplica en ciertos pa\u00edses, puesto que no existe publicidad en el explorador de archivos ni en la pantalla de bloqueo, sin embargo, Microsoft Edge promociona los servicios Microsoft y a s\u00ed mismo.\n\nEl 31 de enero de 2023 Microsoft retir\u00f3 del mercado a Windows 10, dejando de vender licencias de producto en las ediciones Home y Professional en su sitio oficial y la Microsoft Store, adem\u00e1s el 28 de abril de 2023 la empresa anunci\u00f3 que la rama 22H2 es la \u00faltima versi\u00f3n del sistema por lo que ya no recibir\u00e1 nuevas caracter\u00edsticas, y no ser\u00e1 mejorado (debido a rumores de una posible versi\u00f3n 23H2), ahora solo recibir\u00e1 actualizaciones de parches de bugs y seguridad hasta el 14 de octubre de 2025, acallando los rumores de futuras actualizaciones de caracter\u00edsticas del sistema. Esto fue anunciado por la empresa en su p\u00e1gina y en su cuenta oficial de Twitter.[18]\u200b\n\nEl d\u00eda 5 de diciembre de 2023, Microsoft anunci\u00f3 a trav\u00e9s de su blog de noticias de empresas que Windows 10 tendr\u00eda actualizaciones de seguridad extendidas (ESU), este programa, al igual que Windows 7 y Windows Server 2012 R2 (con dicho programa aun en curso desde el fin de soporte de dicho sistema) da a las empresas un \"periodo de gracia\" (es decir, una pr\u00f3rroga) para migrar sus ordenadores a la nueva versi\u00f3n de windows, este programa incluye tanto actualizaciones de seguridad como actualizaciones de los net framework compatibles, dicho soporte es de pago de manera anual, siendo el segundo y el tercer a\u00f1o m\u00e1s caro y siempre tiene un periodo de 3 a\u00f1os, al igual que Windows 7, que finaliz\u00f3 su soporte extendido en enero de 2023, con lo cual alargaria el soporte de pago de los tres a\u00f1os adicionales a 2028[19]\u200b\n\nEste soporte extendido ha mostrado estos cambios siguiendo el modelo del primer ESU en Windows 7. Anteriormente estaba dirigido a las empresas, pero ahora todo el mundo puede optar al soporte extendido de Windows 10[20]\u200b\n\n", "sections": [{"name": "Desarrollo", "text": "", "subsections": []}, {"name": "Caracter\u00edsticas", "text": "", "subsections": []}, {"name": "Aplicaciones y caracter\u00edsticas eliminadas", "text": "", "subsections": []}, {"name": "Herramientas sin soporte", "text": "", "subsections": []}, {"name": "Ediciones y precio", "text": "", "subsections": []}, {"name": "Actualizaciones y soporte", "text": "", "subsections": []}, {"name": "Historial de versiones", "text": "", "subsections": []}, {"name": "Requisitos del sistema", "text": "", "subsections": []}, {"name": "Recepci\u00f3n cr\u00edtica", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/WxPython", "title": "wxPython", "summary": "\nwxPython es un binding de la biblioteca gr\u00e1fica wxWidgets para el lenguaje de programaci\u00f3n Python. La biblioteca wxWidgets se caracteriza por ser multiplataforma, por lo que su uso junto a Python permite el desarrollo r\u00e1pido de aplicaciones gr\u00e1ficas multiplataforma.\n\n", "sections": [{"name": "Licencia", "text": "", "subsections": []}, {"name": "Historia", "text": "", "subsections": []}, {"name": "Project Phoenix", "text": "", "subsections": []}, {"name": "Ejemplo", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/WxWidgets", "title": "wxWidgets", "summary": "\nLas wxWidgets son unas  bibliotecas multiplataforma y libres, para el desarrollo de interfaces gr\u00e1ficas programadas en lenguaje C++. Est\u00e1n publicadas bajo una licencia LGPL, similar a la GPL con la excepci\u00f3n de que el c\u00f3digo binario producido por el usuario a partir de ellas, puede ser propietario, permitiendo desarrollar aplicaciones empresariales sin coste de licencias.\n\nLas wxWidgets proporcionan una interfaz gr\u00e1fica basada en las bibliotecas ya existentes en el sistema (nativas), con lo que se integran de forma \u00f3ptima y resultan muy portables entre distintos sistemas operativos. Est\u00e1n disponibles para Windows, MacOS, GTK+, Motif, OpenVMS y OS/2. \n\nTambi\u00e9n pueden ser utilizadas desde otros lenguajes de programaci\u00f3n, aparte del C++: Java, JavaScript, Perl, Python, Smalltalk, Ruby, Erlang.\n\n", "sections": [{"name": "Breve historia", "text": "", "subsections": []}, {"name": "Licencia", "text": "", "subsections": []}, {"name": "Soporte oficial", "text": "", "subsections": []}, {"name": "Implementaciones", "text": "", "subsections": []}, {"name": "IDE y RAD para wxWidgets", "text": "", "subsections": []}, {"name": "Aplicaciones desarrolladas con wxWidgets", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Zen_de_Python", "title": "Zen de Python", "summary": "\n\nBusca fuentes: \u00abZen de Python\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nEl Zen de Python es una colecci\u00f3n de 20 principios de software que influyen en el dise\u00f1o del Lenguaje de Programaci\u00f3n Python, de los cuales 19 fueron escritos por Tim Peters[1]\u200b en junio de 1999.[2]\u200b El texto es distribuido como dominio p\u00fablico.\n\nEl Zen de Python est\u00e1 escrito como la entrada informativa n\u00famero 20 de las Propuestas de Mejoras de Python (PEP, Python Enhancement Proposals), y se puede encontrar en el sitio oficial de Python.[3]\u200b Tambi\u00e9n se incluye como un huevo de pascua en el int\u00e9rprete de Python, mostrandos\u00e9 al ingresar la instrucci\u00f3n import this.[4]\u200b\n\n", "sections": [{"name": "Principios[5]\u200b", "text": "", "subsections": []}, {"name": "Referencias", "text": "", "subsections": []}, {"name": "Enlaces externos", "text": "", "subsections": []}]}
